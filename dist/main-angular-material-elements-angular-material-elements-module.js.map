{"version":3,"sources":["webpack:///./src/@fuse/services/copier.service.ts","webpack:///./src/app/main/angular-material-elements/angular-material-elements.component.html","webpack:///./src/app/main/angular-material-elements/angular-material-elements.component.scss","webpack:///./src/app/main/angular-material-elements/angular-material-elements.component.ts","webpack:///./src/app/main/angular-material-elements/angular-material-elements.module.ts","webpack:///./src/app/main/angular-material-elements/example-components.ts","webpack:///./src/app/main/angular-material-elements/example-viewer/example-viewer.html","webpack:///./src/app/main/angular-material-elements/example-viewer/example-viewer.scss","webpack:///./src/app/main/angular-material-elements/example-viewer/example-viewer.ts","webpack:///./src/app/main/angular-material-elements/material.module.ts","webpack:///./src/assets/angular-material-examples/autocomplete-auto-active-first-option/autocomplete-auto-active-first-option-example.css","webpack:///./src/assets/angular-material-examples/autocomplete-auto-active-first-option/autocomplete-auto-active-first-option-example.html","webpack:///./src/assets/angular-material-examples/autocomplete-auto-active-first-option/autocomplete-auto-active-first-option-example.ts","webpack:///./src/assets/angular-material-examples/autocomplete-display/autocomplete-display-example.css","webpack:///./src/assets/angular-material-examples/autocomplete-display/autocomplete-display-example.html","webpack:///./src/assets/angular-material-examples/autocomplete-display/autocomplete-display-example.ts","webpack:///./src/assets/angular-material-examples/autocomplete-filter/autocomplete-filter-example.css","webpack:///./src/assets/angular-material-examples/autocomplete-filter/autocomplete-filter-example.html","webpack:///./src/assets/angular-material-examples/autocomplete-filter/autocomplete-filter-example.ts","webpack:///./src/assets/angular-material-examples/autocomplete-optgroup/autocomplete-optgroup-example.css","webpack:///./src/assets/angular-material-examples/autocomplete-optgroup/autocomplete-optgroup-example.html","webpack:///./src/assets/angular-material-examples/autocomplete-optgroup/autocomplete-optgroup-example.ts","webpack:///./src/assets/angular-material-examples/autocomplete-overview/autocomplete-overview-example.css","webpack:///./src/assets/angular-material-examples/autocomplete-overview/autocomplete-overview-example.html","webpack:///./src/assets/angular-material-examples/autocomplete-overview/autocomplete-overview-example.ts","webpack:///./src/assets/angular-material-examples/autocomplete-simple/autocomplete-simple-example.css","webpack:///./src/assets/angular-material-examples/autocomplete-simple/autocomplete-simple-example.html","webpack:///./src/assets/angular-material-examples/autocomplete-simple/autocomplete-simple-example.ts","webpack:///./src/assets/angular-material-examples/badge-overview/badge-overview-example.css","webpack:///./src/assets/angular-material-examples/badge-overview/badge-overview-example.html","webpack:///./src/assets/angular-material-examples/badge-overview/badge-overview-example.ts","webpack:///./src/assets/angular-material-examples/bottom-sheet-overview/bottom-sheet-overview-example-sheet.html","webpack:///./src/assets/angular-material-examples/bottom-sheet-overview/bottom-sheet-overview-example.css","webpack:///./src/assets/angular-material-examples/bottom-sheet-overview/bottom-sheet-overview-example.html","webpack:///./src/assets/angular-material-examples/bottom-sheet-overview/bottom-sheet-overview-example.ts","webpack:///./src/assets/angular-material-examples/button-overview/button-overview-example.css","webpack:///./src/assets/angular-material-examples/button-overview/button-overview-example.html","webpack:///./src/assets/angular-material-examples/button-overview/button-overview-example.ts","webpack:///./src/assets/angular-material-examples/button-toggle-exclusive/button-toggle-exclusive-example.css","webpack:///./src/assets/angular-material-examples/button-toggle-exclusive/button-toggle-exclusive-example.html","webpack:///./src/assets/angular-material-examples/button-toggle-exclusive/button-toggle-exclusive-example.ts","webpack:///./src/assets/angular-material-examples/button-toggle-overview/button-toggle-overview-example.css","webpack:///./src/assets/angular-material-examples/button-toggle-overview/button-toggle-overview-example.html","webpack:///./src/assets/angular-material-examples/button-toggle-overview/button-toggle-overview-example.ts","webpack:///./src/assets/angular-material-examples/button-types/button-types-example.css","webpack:///./src/assets/angular-material-examples/button-types/button-types-example.html","webpack:///./src/assets/angular-material-examples/button-types/button-types-example.ts","webpack:///./src/assets/angular-material-examples/card-fancy/card-fancy-example.css","webpack:///./src/assets/angular-material-examples/card-fancy/card-fancy-example.html","webpack:///./src/assets/angular-material-examples/card-fancy/card-fancy-example.ts","webpack:///./src/assets/angular-material-examples/card-overview/card-overview-example.css","webpack:///./src/assets/angular-material-examples/card-overview/card-overview-example.html","webpack:///./src/assets/angular-material-examples/card-overview/card-overview-example.ts","webpack:///./src/assets/angular-material-examples/cdk-table-basic-flex/cdk-table-basic-flex-example.css","webpack:///./src/assets/angular-material-examples/cdk-table-basic-flex/cdk-table-basic-flex-example.html","webpack:///./src/assets/angular-material-examples/cdk-table-basic-flex/cdk-table-basic-flex-example.ts","webpack:///./src/assets/angular-material-examples/cdk-table-basic/cdk-table-basic-example.css","webpack:///./src/assets/angular-material-examples/cdk-table-basic/cdk-table-basic-example.html","webpack:///./src/assets/angular-material-examples/cdk-table-basic/cdk-table-basic-example.ts","webpack:///./src/assets/angular-material-examples/cdk-tree-flat/cdk-tree-flat-example.css","webpack:///./src/assets/angular-material-examples/cdk-tree-flat/cdk-tree-flat-example.html","webpack:///./src/assets/angular-material-examples/cdk-tree-flat/cdk-tree-flat-example.ts","webpack:///./src/assets/angular-material-examples/cdk-tree-nested/cdk-tree-nested-example.css","webpack:///./src/assets/angular-material-examples/cdk-tree-nested/cdk-tree-nested-example.html","webpack:///./src/assets/angular-material-examples/cdk-tree-nested/cdk-tree-nested-example.ts","webpack:///./src/assets/angular-material-examples/checkbox-configurable/checkbox-configurable-example.css","webpack:///./src/assets/angular-material-examples/checkbox-configurable/checkbox-configurable-example.html","webpack:///./src/assets/angular-material-examples/checkbox-configurable/checkbox-configurable-example.ts","webpack:///./src/assets/angular-material-examples/checkbox-overview/checkbox-overview-example.css","webpack:///./src/assets/angular-material-examples/checkbox-overview/checkbox-overview-example.html","webpack:///./src/assets/angular-material-examples/checkbox-overview/checkbox-overview-example.ts","webpack:///./src/assets/angular-material-examples/chips-autocomplete/chips-autocomplete-example.css","webpack:///./src/assets/angular-material-examples/chips-autocomplete/chips-autocomplete-example.html","webpack:///./src/assets/angular-material-examples/chips-autocomplete/chips-autocomplete-example.ts","webpack:///./src/assets/angular-material-examples/chips-input/chips-input-example.css","webpack:///./src/assets/angular-material-examples/chips-input/chips-input-example.html","webpack:///./src/assets/angular-material-examples/chips-input/chips-input-example.ts","webpack:///./src/assets/angular-material-examples/chips-overview/chips-overview-example.css","webpack:///./src/assets/angular-material-examples/chips-overview/chips-overview-example.html","webpack:///./src/assets/angular-material-examples/chips-overview/chips-overview-example.ts","webpack:///./src/assets/angular-material-examples/chips-stacked/chips-stacked-example.css","webpack:///./src/assets/angular-material-examples/chips-stacked/chips-stacked-example.html","webpack:///./src/assets/angular-material-examples/chips-stacked/chips-stacked-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-api/datepicker-api-example.css","webpack:///./src/assets/angular-material-examples/datepicker-api/datepicker-api-example.html","webpack:///./src/assets/angular-material-examples/datepicker-api/datepicker-api-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-color/datepicker-color-example.css","webpack:///./src/assets/angular-material-examples/datepicker-color/datepicker-color-example.html","webpack:///./src/assets/angular-material-examples/datepicker-color/datepicker-color-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-custom-header/datepicker-custom-header-example.css","webpack:///./src/assets/angular-material-examples/datepicker-custom-header/datepicker-custom-header-example.html","webpack:///./src/assets/angular-material-examples/datepicker-custom-header/datepicker-custom-header-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-custom-icon/datepicker-custom-icon-example.css","webpack:///./src/assets/angular-material-examples/datepicker-custom-icon/datepicker-custom-icon-example.html","webpack:///./src/assets/angular-material-examples/datepicker-custom-icon/datepicker-custom-icon-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-disabled/datepicker-disabled-example.css","webpack:///./src/assets/angular-material-examples/datepicker-disabled/datepicker-disabled-example.html","webpack:///./src/assets/angular-material-examples/datepicker-disabled/datepicker-disabled-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-events/datepicker-events-example.css","webpack:///./src/assets/angular-material-examples/datepicker-events/datepicker-events-example.html","webpack:///./src/assets/angular-material-examples/datepicker-events/datepicker-events-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-filter/datepicker-filter-example.css","webpack:///./src/assets/angular-material-examples/datepicker-filter/datepicker-filter-example.html","webpack:///./src/assets/angular-material-examples/datepicker-filter/datepicker-filter-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-formats/datepicker-formats-example.css","webpack:///./src/assets/angular-material-examples/datepicker-formats/datepicker-formats-example.html","webpack:///./src/assets/angular-material-examples/datepicker-formats/datepicker-formats-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-locale/datepicker-locale-example.css","webpack:///./src/assets/angular-material-examples/datepicker-locale/datepicker-locale-example.html","webpack:///./src/assets/angular-material-examples/datepicker-locale/datepicker-locale-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-min-max/datepicker-min-max-example.css","webpack:///./src/assets/angular-material-examples/datepicker-min-max/datepicker-min-max-example.html","webpack:///./src/assets/angular-material-examples/datepicker-min-max/datepicker-min-max-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-moment/datepicker-moment-example.css","webpack:///./src/assets/angular-material-examples/datepicker-moment/datepicker-moment-example.html","webpack:///./src/assets/angular-material-examples/datepicker-moment/datepicker-moment-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-overview/datepicker-overview-example.css","webpack:///./src/assets/angular-material-examples/datepicker-overview/datepicker-overview-example.html","webpack:///./src/assets/angular-material-examples/datepicker-overview/datepicker-overview-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-start-view/datepicker-start-view-example.css","webpack:///./src/assets/angular-material-examples/datepicker-start-view/datepicker-start-view-example.html","webpack:///./src/assets/angular-material-examples/datepicker-start-view/datepicker-start-view-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-touch/datepicker-touch-example.css","webpack:///./src/assets/angular-material-examples/datepicker-touch/datepicker-touch-example.html","webpack:///./src/assets/angular-material-examples/datepicker-touch/datepicker-touch-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-value/datepicker-value-example.css","webpack:///./src/assets/angular-material-examples/datepicker-value/datepicker-value-example.html","webpack:///./src/assets/angular-material-examples/datepicker-value/datepicker-value-example.ts","webpack:///./src/assets/angular-material-examples/datepicker-views-selection/datepicker-views-selection-example.css","webpack:///./src/assets/angular-material-examples/datepicker-views-selection/datepicker-views-selection-example.html","webpack:///./src/assets/angular-material-examples/datepicker-views-selection/datepicker-views-selection-example.ts","webpack:///./src/assets/angular-material-examples/dialog-content/dialog-content-example-dialog.html","webpack:///./src/assets/angular-material-examples/dialog-content/dialog-content-example.css","webpack:///./src/assets/angular-material-examples/dialog-content/dialog-content-example.html","webpack:///./src/assets/angular-material-examples/dialog-content/dialog-content-example.ts","webpack:///./src/assets/angular-material-examples/dialog-data/dialog-data-example-dialog.html","webpack:///./src/assets/angular-material-examples/dialog-data/dialog-data-example.css","webpack:///./src/assets/angular-material-examples/dialog-data/dialog-data-example.html","webpack:///./src/assets/angular-material-examples/dialog-data/dialog-data-example.ts","webpack:///./src/assets/angular-material-examples/dialog-elements/dialog-elements-example-dialog.html","webpack:///./src/assets/angular-material-examples/dialog-elements/dialog-elements-example.css","webpack:///./src/assets/angular-material-examples/dialog-elements/dialog-elements-example.html","webpack:///./src/assets/angular-material-examples/dialog-elements/dialog-elements-example.ts","webpack:///./src/assets/angular-material-examples/dialog-overview/dialog-overview-example-dialog.html","webpack:///./src/assets/angular-material-examples/dialog-overview/dialog-overview-example.css","webpack:///./src/assets/angular-material-examples/dialog-overview/dialog-overview-example.html","webpack:///./src/assets/angular-material-examples/dialog-overview/dialog-overview-example.ts","webpack:///./src/assets/angular-material-examples/divider-overview/divider-overview-example.css","webpack:///./src/assets/angular-material-examples/divider-overview/divider-overview-example.html","webpack:///./src/assets/angular-material-examples/divider-overview/divider-overview-example.ts","webpack:///./src/assets/angular-material-examples/elevation-overview/elevation-overview-example.css","webpack:///./src/assets/angular-material-examples/elevation-overview/elevation-overview-example.html","webpack:///./src/assets/angular-material-examples/elevation-overview/elevation-overview-example.ts","webpack:///./src/assets/angular-material-examples/expansion-expand-collapse-all/expansion-expand-collapse-all-example.css","webpack:///./src/assets/angular-material-examples/expansion-expand-collapse-all/expansion-expand-collapse-all-example.html","webpack:///./src/assets/angular-material-examples/expansion-expand-collapse-all/expansion-expand-collapse-all-example.ts","webpack:///./src/assets/angular-material-examples/expansion-overview/expansion-overview-example.css","webpack:///./src/assets/angular-material-examples/expansion-overview/expansion-overview-example.html","webpack:///./src/assets/angular-material-examples/expansion-overview/expansion-overview-example.ts","webpack:///./src/assets/angular-material-examples/expansion-steps/expansion-steps-example.css","webpack:///./src/assets/angular-material-examples/expansion-steps/expansion-steps-example.html","webpack:///./src/assets/angular-material-examples/expansion-steps/expansion-steps-example.ts","webpack:///./src/assets/angular-material-examples/focus-monitor-directives/focus-monitor-directives-example.css","webpack:///./src/assets/angular-material-examples/focus-monitor-directives/focus-monitor-directives-example.html","webpack:///./src/assets/angular-material-examples/focus-monitor-directives/focus-monitor-directives-example.ts","webpack:///./src/assets/angular-material-examples/focus-monitor-focus-via/focus-monitor-focus-via-example.css","webpack:///./src/assets/angular-material-examples/focus-monitor-focus-via/focus-monitor-focus-via-example.html","webpack:///./src/assets/angular-material-examples/focus-monitor-focus-via/focus-monitor-focus-via-example.ts","webpack:///./src/assets/angular-material-examples/focus-monitor-overview/focus-monitor-overview-example.css","webpack:///./src/assets/angular-material-examples/focus-monitor-overview/focus-monitor-overview-example.html","webpack:///./src/assets/angular-material-examples/focus-monitor-overview/focus-monitor-overview-example.ts","webpack:///./src/assets/angular-material-examples/form-field-appearance/form-field-appearance-example.css","webpack:///./src/assets/angular-material-examples/form-field-appearance/form-field-appearance-example.html","webpack:///./src/assets/angular-material-examples/form-field-appearance/form-field-appearance-example.ts","webpack:///./src/assets/angular-material-examples/form-field-custom-control/form-field-custom-control-example.css","webpack:///./src/assets/angular-material-examples/form-field-custom-control/form-field-custom-control-example.html","webpack:///./src/assets/angular-material-examples/form-field-custom-control/form-field-custom-control-example.ts","webpack:///./src/assets/angular-material-examples/form-field-error/form-field-error-example.css","webpack:///./src/assets/angular-material-examples/form-field-error/form-field-error-example.html","webpack:///./src/assets/angular-material-examples/form-field-error/form-field-error-example.ts","webpack:///./src/assets/angular-material-examples/form-field-hint/form-field-hint-example.css","webpack:///./src/assets/angular-material-examples/form-field-hint/form-field-hint-example.html","webpack:///./src/assets/angular-material-examples/form-field-hint/form-field-hint-example.ts","webpack:///./src/assets/angular-material-examples/form-field-label/form-field-label-example.css","webpack:///./src/assets/angular-material-examples/form-field-label/form-field-label-example.html","webpack:///./src/assets/angular-material-examples/form-field-label/form-field-label-example.ts","webpack:///./src/assets/angular-material-examples/form-field-overview/form-field-overview-example.css","webpack:///./src/assets/angular-material-examples/form-field-overview/form-field-overview-example.html","webpack:///./src/assets/angular-material-examples/form-field-overview/form-field-overview-example.ts","webpack:///./src/assets/angular-material-examples/form-field-prefix-suffix/form-field-prefix-suffix-example.css","webpack:///./src/assets/angular-material-examples/form-field-prefix-suffix/form-field-prefix-suffix-example.html","webpack:///./src/assets/angular-material-examples/form-field-prefix-suffix/form-field-prefix-suffix-example.ts","webpack:///./src/assets/angular-material-examples/form-field-theming/form-field-theming-example.css","webpack:///./src/assets/angular-material-examples/form-field-theming/form-field-theming-example.html","webpack:///./src/assets/angular-material-examples/form-field-theming/form-field-theming-example.ts","webpack:///./src/assets/angular-material-examples/grid-list-dynamic/grid-list-dynamic-example.css","webpack:///./src/assets/angular-material-examples/grid-list-dynamic/grid-list-dynamic-example.html","webpack:///./src/assets/angular-material-examples/grid-list-dynamic/grid-list-dynamic-example.ts","webpack:///./src/assets/angular-material-examples/grid-list-overview/grid-list-overview-example.css","webpack:///./src/assets/angular-material-examples/grid-list-overview/grid-list-overview-example.html","webpack:///./src/assets/angular-material-examples/grid-list-overview/grid-list-overview-example.ts","webpack:///./src/assets/angular-material-examples/icon-overview/icon-overview-example.css","webpack:///./src/assets/angular-material-examples/icon-overview/icon-overview-example.html","webpack:///./src/assets/angular-material-examples/icon-overview/icon-overview-example.ts","webpack:///./src/assets/angular-material-examples/icon-svg/icon-svg-example.css","webpack:///./src/assets/angular-material-examples/icon-svg/icon-svg-example.html","webpack:///./src/assets/angular-material-examples/icon-svg/icon-svg-example.ts","webpack:///./src/assets/angular-material-examples/input-clearable/input-clearable-example.css","webpack:///./src/assets/angular-material-examples/input-clearable/input-clearable-example.html","webpack:///./src/assets/angular-material-examples/input-clearable/input-clearable-example.ts","webpack:///./src/assets/angular-material-examples/input-error-state-matcher/input-error-state-matcher-example.css","webpack:///./src/assets/angular-material-examples/input-error-state-matcher/input-error-state-matcher-example.html","webpack:///./src/assets/angular-material-examples/input-error-state-matcher/input-error-state-matcher-example.ts","webpack:///./src/assets/angular-material-examples/input-errors/input-errors-example.css","webpack:///./src/assets/angular-material-examples/input-errors/input-errors-example.html","webpack:///./src/assets/angular-material-examples/input-errors/input-errors-example.ts","webpack:///./src/assets/angular-material-examples/input-form/input-form-example.css","webpack:///./src/assets/angular-material-examples/input-form/input-form-example.html","webpack:///./src/assets/angular-material-examples/input-form/input-form-example.ts","webpack:///./src/assets/angular-material-examples/input-hint/input-hint-example.css","webpack:///./src/assets/angular-material-examples/input-hint/input-hint-example.html","webpack:///./src/assets/angular-material-examples/input-hint/input-hint-example.ts","webpack:///./src/assets/angular-material-examples/input-overview/input-overview-example.css","webpack:///./src/assets/angular-material-examples/input-overview/input-overview-example.html","webpack:///./src/assets/angular-material-examples/input-overview/input-overview-example.ts","webpack:///./src/assets/angular-material-examples/input-prefix-suffix/input-prefix-suffix-example.css","webpack:///./src/assets/angular-material-examples/input-prefix-suffix/input-prefix-suffix-example.html","webpack:///./src/assets/angular-material-examples/input-prefix-suffix/input-prefix-suffix-example.ts","webpack:///./src/assets/angular-material-examples/list-overview/list-overview-example.css","webpack:///./src/assets/angular-material-examples/list-overview/list-overview-example.html","webpack:///./src/assets/angular-material-examples/list-overview/list-overview-example.ts","webpack:///./src/assets/angular-material-examples/list-sections/list-sections-example.css","webpack:///./src/assets/angular-material-examples/list-sections/list-sections-example.html","webpack:///./src/assets/angular-material-examples/list-sections/list-sections-example.ts","webpack:///./src/assets/angular-material-examples/list-selection/list-selection-example.css","webpack:///./src/assets/angular-material-examples/list-selection/list-selection-example.html","webpack:///./src/assets/angular-material-examples/list-selection/list-selection-example.ts","webpack:///./src/assets/angular-material-examples/menu-icons/menu-icons-example.css","webpack:///./src/assets/angular-material-examples/menu-icons/menu-icons-example.html","webpack:///./src/assets/angular-material-examples/menu-icons/menu-icons-example.ts","webpack:///./src/assets/angular-material-examples/menu-overview/menu-overview-example.css","webpack:///./src/assets/angular-material-examples/menu-overview/menu-overview-example.html","webpack:///./src/assets/angular-material-examples/menu-overview/menu-overview-example.ts","webpack:///./src/assets/angular-material-examples/nested-menu/nested-menu-example.css","webpack:///./src/assets/angular-material-examples/nested-menu/nested-menu-example.html","webpack:///./src/assets/angular-material-examples/nested-menu/nested-menu-example.ts","webpack:///./src/assets/angular-material-examples/paginator-configurable/paginator-configurable-example.css","webpack:///./src/assets/angular-material-examples/paginator-configurable/paginator-configurable-example.html","webpack:///./src/assets/angular-material-examples/paginator-configurable/paginator-configurable-example.ts","webpack:///./src/assets/angular-material-examples/paginator-overview/paginator-overview-example.css","webpack:///./src/assets/angular-material-examples/paginator-overview/paginator-overview-example.html","webpack:///./src/assets/angular-material-examples/paginator-overview/paginator-overview-example.ts","webpack:///./src/assets/angular-material-examples/progress-bar-buffer/progress-bar-buffer-example.css","webpack:///./src/assets/angular-material-examples/progress-bar-buffer/progress-bar-buffer-example.html","webpack:///./src/assets/angular-material-examples/progress-bar-buffer/progress-bar-buffer-example.ts","webpack:///./src/assets/angular-material-examples/progress-bar-configurable/progress-bar-configurable-example.css","webpack:///./src/assets/angular-material-examples/progress-bar-configurable/progress-bar-configurable-example.html","webpack:///./src/assets/angular-material-examples/progress-bar-configurable/progress-bar-configurable-example.ts","webpack:///./src/assets/angular-material-examples/progress-bar-determinate/progress-bar-determinate-example.css","webpack:///./src/assets/angular-material-examples/progress-bar-determinate/progress-bar-determinate-example.html","webpack:///./src/assets/angular-material-examples/progress-bar-determinate/progress-bar-determinate-example.ts","webpack:///./src/assets/angular-material-examples/progress-bar-indeterminate/progress-bar-indeterminate-example.css","webpack:///./src/assets/angular-material-examples/progress-bar-indeterminate/progress-bar-indeterminate-example.html","webpack:///./src/assets/angular-material-examples/progress-bar-indeterminate/progress-bar-indeterminate-example.ts","webpack:///./src/assets/angular-material-examples/progress-bar-query/progress-bar-query-example.css","webpack:///./src/assets/angular-material-examples/progress-bar-query/progress-bar-query-example.html","webpack:///./src/assets/angular-material-examples/progress-bar-query/progress-bar-query-example.ts","webpack:///./src/assets/angular-material-examples/progress-spinner-configurable/progress-spinner-configurable-example.css","webpack:///./src/assets/angular-material-examples/progress-spinner-configurable/progress-spinner-configurable-example.html","webpack:///./src/assets/angular-material-examples/progress-spinner-configurable/progress-spinner-configurable-example.ts","webpack:///./src/assets/angular-material-examples/progress-spinner-overview/progress-spinner-overview-example.css","webpack:///./src/assets/angular-material-examples/progress-spinner-overview/progress-spinner-overview-example.html","webpack:///./src/assets/angular-material-examples/progress-spinner-overview/progress-spinner-overview-example.ts","webpack:///./src/assets/angular-material-examples/radio-ng-model/radio-ng-model-example.css","webpack:///./src/assets/angular-material-examples/radio-ng-model/radio-ng-model-example.html","webpack:///./src/assets/angular-material-examples/radio-ng-model/radio-ng-model-example.ts","webpack:///./src/assets/angular-material-examples/radio-overview/radio-overview-example.css","webpack:///./src/assets/angular-material-examples/radio-overview/radio-overview-example.html","webpack:///./src/assets/angular-material-examples/radio-overview/radio-overview-example.ts","webpack:///./src/assets/angular-material-examples/select-custom-trigger/select-custom-trigger-example.css","webpack:///./src/assets/angular-material-examples/select-custom-trigger/select-custom-trigger-example.html","webpack:///./src/assets/angular-material-examples/select-custom-trigger/select-custom-trigger-example.ts","webpack:///./src/assets/angular-material-examples/select-disabled/select-disabled-example.css","webpack:///./src/assets/angular-material-examples/select-disabled/select-disabled-example.html","webpack:///./src/assets/angular-material-examples/select-disabled/select-disabled-example.ts","webpack:///./src/assets/angular-material-examples/select-error-state-matcher/select-error-state-matcher-example.css","webpack:///./src/assets/angular-material-examples/select-error-state-matcher/select-error-state-matcher-example.html","webpack:///./src/assets/angular-material-examples/select-error-state-matcher/select-error-state-matcher-example.ts","webpack:///./src/assets/angular-material-examples/select-form/select-form-example.css","webpack:///./src/assets/angular-material-examples/select-form/select-form-example.html","webpack:///./src/assets/angular-material-examples/select-form/select-form-example.ts","webpack:///./src/assets/angular-material-examples/select-hint-error/select-hint-error-example.css","webpack:///./src/assets/angular-material-examples/select-hint-error/select-hint-error-example.html","webpack:///./src/assets/angular-material-examples/select-hint-error/select-hint-error-example.ts","webpack:///./src/assets/angular-material-examples/select-multiple/select-multiple-example.css","webpack:///./src/assets/angular-material-examples/select-multiple/select-multiple-example.html","webpack:///./src/assets/angular-material-examples/select-multiple/select-multiple-example.ts","webpack:///./src/assets/angular-material-examples/select-no-ripple/select-no-ripple-example.css","webpack:///./src/assets/angular-material-examples/select-no-ripple/select-no-ripple-example.html","webpack:///./src/assets/angular-material-examples/select-no-ripple/select-no-ripple-example.ts","webpack:///./src/assets/angular-material-examples/select-optgroup/select-optgroup-example.css","webpack:///./src/assets/angular-material-examples/select-optgroup/select-optgroup-example.html","webpack:///./src/assets/angular-material-examples/select-optgroup/select-optgroup-example.ts","webpack:///./src/assets/angular-material-examples/select-overview/select-overview-example.css","webpack:///./src/assets/angular-material-examples/select-overview/select-overview-example.html","webpack:///./src/assets/angular-material-examples/select-overview/select-overview-example.ts","webpack:///./src/assets/angular-material-examples/select-panel-class/select-panel-class-example.css","webpack:///./src/assets/angular-material-examples/select-panel-class/select-panel-class-example.html","webpack:///./src/assets/angular-material-examples/select-panel-class/select-panel-class-example.ts","webpack:///./src/assets/angular-material-examples/select-reset/select-reset-example.css","webpack:///./src/assets/angular-material-examples/select-reset/select-reset-example.html","webpack:///./src/assets/angular-material-examples/select-reset/select-reset-example.ts","webpack:///./src/assets/angular-material-examples/select-value-binding/select-value-binding-example.css","webpack:///./src/assets/angular-material-examples/select-value-binding/select-value-binding-example.html","webpack:///./src/assets/angular-material-examples/select-value-binding/select-value-binding-example.ts","webpack:///./src/assets/angular-material-examples/sidenav-autosize/sidenav-autosize-example.css","webpack:///./src/assets/angular-material-examples/sidenav-autosize/sidenav-autosize-example.html","webpack:///./src/assets/angular-material-examples/sidenav-autosize/sidenav-autosize-example.ts","webpack:///./src/assets/angular-material-examples/sidenav-backdrop/sidenav-backdrop-example.css","webpack:///./src/assets/angular-material-examples/sidenav-backdrop/sidenav-backdrop-example.html","webpack:///./src/assets/angular-material-examples/sidenav-backdrop/sidenav-backdrop-example.ts","webpack:///./src/assets/angular-material-examples/sidenav-disable-close/sidenav-disable-close-example.css","webpack:///./src/assets/angular-material-examples/sidenav-disable-close/sidenav-disable-close-example.html","webpack:///./src/assets/angular-material-examples/sidenav-disable-close/sidenav-disable-close-example.ts","webpack:///./src/assets/angular-material-examples/sidenav-drawer-overview/sidenav-drawer-overview-example.css","webpack:///./src/assets/angular-material-examples/sidenav-drawer-overview/sidenav-drawer-overview-example.html","webpack:///./src/assets/angular-material-examples/sidenav-drawer-overview/sidenav-drawer-overview-example.ts","webpack:///./src/assets/angular-material-examples/sidenav-fixed/sidenav-fixed-example.css","webpack:///./src/assets/angular-material-examples/sidenav-fixed/sidenav-fixed-example.html","webpack:///./src/assets/angular-material-examples/sidenav-fixed/sidenav-fixed-example.ts","webpack:///./src/assets/angular-material-examples/sidenav-mode/sidenav-mode-example.css","webpack:///./src/assets/angular-material-examples/sidenav-mode/sidenav-mode-example.html","webpack:///./src/assets/angular-material-examples/sidenav-mode/sidenav-mode-example.ts","webpack:///./src/assets/angular-material-examples/sidenav-open-close/sidenav-open-close-example.css","webpack:///./src/assets/angular-material-examples/sidenav-open-close/sidenav-open-close-example.html","webpack:///./src/assets/angular-material-examples/sidenav-open-close/sidenav-open-close-example.ts","webpack:///./src/assets/angular-material-examples/sidenav-overview/sidenav-overview-example.css","webpack:///./src/assets/angular-material-examples/sidenav-overview/sidenav-overview-example.html","webpack:///./src/assets/angular-material-examples/sidenav-overview/sidenav-overview-example.ts","webpack:///./src/assets/angular-material-examples/sidenav-position/sidenav-position-example.css","webpack:///./src/assets/angular-material-examples/sidenav-position/sidenav-position-example.html","webpack:///./src/assets/angular-material-examples/sidenav-position/sidenav-position-example.ts","webpack:///./src/assets/angular-material-examples/sidenav-responsive/sidenav-responsive-example.css","webpack:///./src/assets/angular-material-examples/sidenav-responsive/sidenav-responsive-example.html","webpack:///./src/assets/angular-material-examples/sidenav-responsive/sidenav-responsive-example.ts","webpack:///./src/assets/angular-material-examples/slide-toggle-configurable/slide-toggle-configurable-example.css","webpack:///./src/assets/angular-material-examples/slide-toggle-configurable/slide-toggle-configurable-example.html","webpack:///./src/assets/angular-material-examples/slide-toggle-configurable/slide-toggle-configurable-example.ts","webpack:///./src/assets/angular-material-examples/slide-toggle-forms/slide-toggle-forms-example.css","webpack:///./src/assets/angular-material-examples/slide-toggle-forms/slide-toggle-forms-example.html","webpack:///./src/assets/angular-material-examples/slide-toggle-forms/slide-toggle-forms-example.ts","webpack:///./src/assets/angular-material-examples/slide-toggle-overview/slide-toggle-overview-example.css","webpack:///./src/assets/angular-material-examples/slide-toggle-overview/slide-toggle-overview-example.html","webpack:///./src/assets/angular-material-examples/slide-toggle-overview/slide-toggle-overview-example.ts","webpack:///./src/assets/angular-material-examples/slider-configurable/slider-configurable-example.css","webpack:///./src/assets/angular-material-examples/slider-configurable/slider-configurable-example.html","webpack:///./src/assets/angular-material-examples/slider-configurable/slider-configurable-example.ts","webpack:///./src/assets/angular-material-examples/slider-formatting/slider-formatting-example.css","webpack:///./src/assets/angular-material-examples/slider-formatting/slider-formatting-example.html","webpack:///./src/assets/angular-material-examples/slider-formatting/slider-formatting-example.ts","webpack:///./src/assets/angular-material-examples/slider-overview/slider-overview-example.css","webpack:///./src/assets/angular-material-examples/slider-overview/slider-overview-example.html","webpack:///./src/assets/angular-material-examples/slider-overview/slider-overview-example.ts","webpack:///./src/assets/angular-material-examples/snack-bar-component/snack-bar-component-example-snack.html","webpack:///./src/assets/angular-material-examples/snack-bar-component/snack-bar-component-example.html","webpack:///./src/assets/angular-material-examples/snack-bar-component/snack-bar-component-example.ts","webpack:///./src/assets/angular-material-examples/snack-bar-overview/snack-bar-overview-example.css","webpack:///./src/assets/angular-material-examples/snack-bar-overview/snack-bar-overview-example.html","webpack:///./src/assets/angular-material-examples/snack-bar-overview/snack-bar-overview-example.ts","webpack:///./src/assets/angular-material-examples/snack-bar-position/snack-bar-position-example.html","webpack:///./src/assets/angular-material-examples/snack-bar-position/snack-bar-position-example.ts","webpack:///./src/assets/angular-material-examples/sort-overview/sort-overview-example.css","webpack:///./src/assets/angular-material-examples/sort-overview/sort-overview-example.html","webpack:///./src/assets/angular-material-examples/sort-overview/sort-overview-example.ts","webpack:///./src/assets/angular-material-examples/stepper-editable/stepper-editable-example.css","webpack:///./src/assets/angular-material-examples/stepper-editable/stepper-editable-example.html","webpack:///./src/assets/angular-material-examples/stepper-editable/stepper-editable-example.ts","webpack:///./src/assets/angular-material-examples/stepper-optional/stepper-optional-example.css","webpack:///./src/assets/angular-material-examples/stepper-optional/stepper-optional-example.html","webpack:///./src/assets/angular-material-examples/stepper-optional/stepper-optional-example.ts","webpack:///./src/assets/angular-material-examples/stepper-overview/stepper-overview-example.css","webpack:///./src/assets/angular-material-examples/stepper-overview/stepper-overview-example.html","webpack:///./src/assets/angular-material-examples/stepper-overview/stepper-overview-example.ts","webpack:///./src/assets/angular-material-examples/stepper-vertical/stepper-vertical-example.css","webpack:///./src/assets/angular-material-examples/stepper-vertical/stepper-vertical-example.html","webpack:///./src/assets/angular-material-examples/stepper-vertical/stepper-vertical-example.ts","webpack:///./src/assets/angular-material-examples/tab-group-async/tab-group-async-example.css","webpack:///./src/assets/angular-material-examples/tab-group-async/tab-group-async-example.html","webpack:///./src/assets/angular-material-examples/tab-group-async/tab-group-async-example.ts","webpack:///./src/assets/angular-material-examples/tab-group-basic/tab-group-basic-example.css","webpack:///./src/assets/angular-material-examples/tab-group-basic/tab-group-basic-example.html","webpack:///./src/assets/angular-material-examples/tab-group-basic/tab-group-basic-example.ts","webpack:///./src/assets/angular-material-examples/tab-group-custom-label/tab-group-custom-label-example.css","webpack:///./src/assets/angular-material-examples/tab-group-custom-label/tab-group-custom-label-example.html","webpack:///./src/assets/angular-material-examples/tab-group-custom-label/tab-group-custom-label-example.ts","webpack:///./src/assets/angular-material-examples/tab-group-dynamic-height/tab-group-dynamic-height-example.css","webpack:///./src/assets/angular-material-examples/tab-group-dynamic-height/tab-group-dynamic-height-example.html","webpack:///./src/assets/angular-material-examples/tab-group-dynamic-height/tab-group-dynamic-height-example.ts","webpack:///./src/assets/angular-material-examples/tab-group-dynamic/tab-group-dynamic-example.css","webpack:///./src/assets/angular-material-examples/tab-group-dynamic/tab-group-dynamic-example.html","webpack:///./src/assets/angular-material-examples/tab-group-dynamic/tab-group-dynamic-example.ts","webpack:///./src/assets/angular-material-examples/tab-group-header-below/tab-group-header-below-example.css","webpack:///./src/assets/angular-material-examples/tab-group-header-below/tab-group-header-below-example.html","webpack:///./src/assets/angular-material-examples/tab-group-header-below/tab-group-header-below-example.ts","webpack:///./src/assets/angular-material-examples/tab-group-lazy-loaded/tab-group-lazy-loaded-example.css","webpack:///./src/assets/angular-material-examples/tab-group-lazy-loaded/tab-group-lazy-loaded-example.html","webpack:///./src/assets/angular-material-examples/tab-group-lazy-loaded/tab-group-lazy-loaded-example.ts","webpack:///./src/assets/angular-material-examples/tab-group-stretched/tab-group-stretched-example.css","webpack:///./src/assets/angular-material-examples/tab-group-stretched/tab-group-stretched-example.html","webpack:///./src/assets/angular-material-examples/tab-group-stretched/tab-group-stretched-example.ts","webpack:///./src/assets/angular-material-examples/tab-group-theme/tab-group-theme-example.css","webpack:///./src/assets/angular-material-examples/tab-group-theme/tab-group-theme-example.html","webpack:///./src/assets/angular-material-examples/tab-group-theme/tab-group-theme-example.ts","webpack:///./src/assets/angular-material-examples/tab-nav-bar-basic/tab-nav-bar-basic-example.css","webpack:///./src/assets/angular-material-examples/tab-nav-bar-basic/tab-nav-bar-basic-example.html","webpack:///./src/assets/angular-material-examples/tab-nav-bar-basic/tab-nav-bar-basic-example.ts","webpack:///./src/assets/angular-material-examples/table-basic-flex/table-basic-flex-example.css","webpack:///./src/assets/angular-material-examples/table-basic-flex/table-basic-flex-example.html","webpack:///./src/assets/angular-material-examples/table-basic-flex/table-basic-flex-example.ts","webpack:///./src/assets/angular-material-examples/table-basic/table-basic-example.css","webpack:///./src/assets/angular-material-examples/table-basic/table-basic-example.html","webpack:///./src/assets/angular-material-examples/table-basic/table-basic-example.ts","webpack:///./src/assets/angular-material-examples/table-dynamic-columns/table-dynamic-columns-example.css","webpack:///./src/assets/angular-material-examples/table-dynamic-columns/table-dynamic-columns-example.html","webpack:///./src/assets/angular-material-examples/table-dynamic-columns/table-dynamic-columns-example.ts","webpack:///./src/assets/angular-material-examples/table-expandable-rows/table-expandable-rows-example.css","webpack:///./src/assets/angular-material-examples/table-expandable-rows/table-expandable-rows-example.html","webpack:///./src/assets/angular-material-examples/table-expandable-rows/table-expandable-rows-example.ts","webpack:///./src/assets/angular-material-examples/table-filtering/table-filtering-example.css","webpack:///./src/assets/angular-material-examples/table-filtering/table-filtering-example.html","webpack:///./src/assets/angular-material-examples/table-filtering/table-filtering-example.ts","webpack:///./src/assets/angular-material-examples/table-footer-row/table-footer-row-example.css","webpack:///./src/assets/angular-material-examples/table-footer-row/table-footer-row-example.html","webpack:///./src/assets/angular-material-examples/table-footer-row/table-footer-row-example.ts","webpack:///./src/assets/angular-material-examples/table-http/table-http-example.css","webpack:///./src/assets/angular-material-examples/table-http/table-http-example.html","webpack:///./src/assets/angular-material-examples/table-http/table-http-example.ts","webpack:///./src/assets/angular-material-examples/table-multiple-header-footer/table-multiple-header-footer-example.css","webpack:///./src/assets/angular-material-examples/table-multiple-header-footer/table-multiple-header-footer-example.html","webpack:///./src/assets/angular-material-examples/table-multiple-header-footer/table-multiple-header-footer-example.ts","webpack:///./src/assets/angular-material-examples/table-overview/table-overview-example.css","webpack:///./src/assets/angular-material-examples/table-overview/table-overview-example.html","webpack:///./src/assets/angular-material-examples/table-overview/table-overview-example.ts","webpack:///./src/assets/angular-material-examples/table-pagination/table-pagination-example.css","webpack:///./src/assets/angular-material-examples/table-pagination/table-pagination-example.html","webpack:///./src/assets/angular-material-examples/table-pagination/table-pagination-example.ts","webpack:///./src/assets/angular-material-examples/table-row-context/table-row-context-example.css","webpack:///./src/assets/angular-material-examples/table-row-context/table-row-context-example.html","webpack:///./src/assets/angular-material-examples/table-row-context/table-row-context-example.ts","webpack:///./src/assets/angular-material-examples/table-selection/table-selection-example.css","webpack:///./src/assets/angular-material-examples/table-selection/table-selection-example.html","webpack:///./src/assets/angular-material-examples/table-selection/table-selection-example.ts","webpack:///./src/assets/angular-material-examples/table-sorting/table-sorting-example.css","webpack:///./src/assets/angular-material-examples/table-sorting/table-sorting-example.html","webpack:///./src/assets/angular-material-examples/table-sorting/table-sorting-example.ts","webpack:///./src/assets/angular-material-examples/table-sticky-columns/table-sticky-columns-example.css","webpack:///./src/assets/angular-material-examples/table-sticky-columns/table-sticky-columns-example.html","webpack:///./src/assets/angular-material-examples/table-sticky-columns/table-sticky-columns-example.ts","webpack:///./src/assets/angular-material-examples/table-sticky-complex-flex/table-sticky-complex-flex-example.css","webpack:///./src/assets/angular-material-examples/table-sticky-complex-flex/table-sticky-complex-flex-example.html","webpack:///./src/assets/angular-material-examples/table-sticky-complex-flex/table-sticky-complex-flex-example.ts","webpack:///./src/assets/angular-material-examples/table-sticky-complex/table-sticky-complex-example.css","webpack:///./src/assets/angular-material-examples/table-sticky-complex/table-sticky-complex-example.html","webpack:///./src/assets/angular-material-examples/table-sticky-complex/table-sticky-complex-example.ts","webpack:///./src/assets/angular-material-examples/table-sticky-footer/table-sticky-footer-example.css","webpack:///./src/assets/angular-material-examples/table-sticky-footer/table-sticky-footer-example.html","webpack:///./src/assets/angular-material-examples/table-sticky-footer/table-sticky-footer-example.ts","webpack:///./src/assets/angular-material-examples/table-sticky-header/table-sticky-header-example.css","webpack:///./src/assets/angular-material-examples/table-sticky-header/table-sticky-header-example.html","webpack:///./src/assets/angular-material-examples/table-sticky-header/table-sticky-header-example.ts","webpack:///./src/assets/angular-material-examples/text-field-autofill-directive/text-field-autofill-directive-example.css","webpack:///./src/assets/angular-material-examples/text-field-autofill-directive/text-field-autofill-directive-example.html","webpack:///./src/assets/angular-material-examples/text-field-autofill-directive/text-field-autofill-directive-example.ts","webpack:///./src/assets/angular-material-examples/text-field-autofill-monitor/text-field-autofill-monitor-example.css","webpack:///./src/assets/angular-material-examples/text-field-autofill-monitor/text-field-autofill-monitor-example.html","webpack:///./src/assets/angular-material-examples/text-field-autofill-monitor/text-field-autofill-monitor-example.ts","webpack:///./src/assets/angular-material-examples/text-field-autosize-textarea/text-field-autosize-textarea-example.css","webpack:///./src/assets/angular-material-examples/text-field-autosize-textarea/text-field-autosize-textarea-example.html","webpack:///./src/assets/angular-material-examples/text-field-autosize-textarea/text-field-autosize-textarea-example.ts","webpack:///./src/assets/angular-material-examples/toolbar-multirow/toolbar-multirow-example.css","webpack:///./src/assets/angular-material-examples/toolbar-multirow/toolbar-multirow-example.html","webpack:///./src/assets/angular-material-examples/toolbar-multirow/toolbar-multirow-example.ts","webpack:///./src/assets/angular-material-examples/toolbar-overview/toolbar-overview-example.css","webpack:///./src/assets/angular-material-examples/toolbar-overview/toolbar-overview-example.html","webpack:///./src/assets/angular-material-examples/toolbar-overview/toolbar-overview-example.ts","webpack:///./src/assets/angular-material-examples/tooltip-auto-hide/tooltip-auto-hide-example.css","webpack:///./src/assets/angular-material-examples/tooltip-auto-hide/tooltip-auto-hide-example.html","webpack:///./src/assets/angular-material-examples/tooltip-auto-hide/tooltip-auto-hide-example.ts","webpack:///./src/assets/angular-material-examples/tooltip-custom-class/tooltip-custom-class-example.css","webpack:///./src/assets/angular-material-examples/tooltip-custom-class/tooltip-custom-class-example.html","webpack:///./src/assets/angular-material-examples/tooltip-custom-class/tooltip-custom-class-example.ts","webpack:///./src/assets/angular-material-examples/tooltip-delay/tooltip-delay-example.css","webpack:///./src/assets/angular-material-examples/tooltip-delay/tooltip-delay-example.html","webpack:///./src/assets/angular-material-examples/tooltip-delay/tooltip-delay-example.ts","webpack:///./src/assets/angular-material-examples/tooltip-disabled/tooltip-disabled-example.css","webpack:///./src/assets/angular-material-examples/tooltip-disabled/tooltip-disabled-example.html","webpack:///./src/assets/angular-material-examples/tooltip-disabled/tooltip-disabled-example.ts","webpack:///./src/assets/angular-material-examples/tooltip-manual/tooltip-manual-example.css","webpack:///./src/assets/angular-material-examples/tooltip-manual/tooltip-manual-example.html","webpack:///./src/assets/angular-material-examples/tooltip-manual/tooltip-manual-example.ts","webpack:///./src/assets/angular-material-examples/tooltip-message/tooltip-message-example.css","webpack:///./src/assets/angular-material-examples/tooltip-message/tooltip-message-example.html","webpack:///./src/assets/angular-material-examples/tooltip-message/tooltip-message-example.ts","webpack:///./src/assets/angular-material-examples/tooltip-modified-defaults/tooltip-modified-defaults-example.css","webpack:///./src/assets/angular-material-examples/tooltip-modified-defaults/tooltip-modified-defaults-example.html","webpack:///./src/assets/angular-material-examples/tooltip-modified-defaults/tooltip-modified-defaults-example.ts","webpack:///./src/assets/angular-material-examples/tooltip-overview/tooltip-overview-example.css","webpack:///./src/assets/angular-material-examples/tooltip-overview/tooltip-overview-example.html","webpack:///./src/assets/angular-material-examples/tooltip-overview/tooltip-overview-example.ts","webpack:///./src/assets/angular-material-examples/tooltip-position/tooltip-position-example.css","webpack:///./src/assets/angular-material-examples/tooltip-position/tooltip-position-example.html","webpack:///./src/assets/angular-material-examples/tooltip-position/tooltip-position-example.ts","webpack:///./src/assets/angular-material-examples/tree-checklist/tree-checklist-example.css","webpack:///./src/assets/angular-material-examples/tree-checklist/tree-checklist-example.html","webpack:///./src/assets/angular-material-examples/tree-checklist/tree-checklist-example.ts","webpack:///./src/assets/angular-material-examples/tree-dynamic/tree-dynamic-example.css","webpack:///./src/assets/angular-material-examples/tree-dynamic/tree-dynamic-example.html","webpack:///./src/assets/angular-material-examples/tree-dynamic/tree-dynamic-example.ts","webpack:///./src/assets/angular-material-examples/tree-flat-overview/tree-flat-overview-example.css","webpack:///./src/assets/angular-material-examples/tree-flat-overview/tree-flat-overview-example.html","webpack:///./src/assets/angular-material-examples/tree-flat-overview/tree-flat-overview-example.ts","webpack:///./src/assets/angular-material-examples/tree-loadmore/tree-loadmore-example.css","webpack:///./src/assets/angular-material-examples/tree-loadmore/tree-loadmore-example.html","webpack:///./src/assets/angular-material-examples/tree-loadmore/tree-loadmore-example.ts","webpack:///./src/assets/angular-material-examples/tree-nested-overview/tree-nested-overview-example.css","webpack:///./src/assets/angular-material-examples/tree-nested-overview/tree-nested-overview-example.html","webpack:///./src/assets/angular-material-examples/tree-nested-overview/tree-nested-overview-example.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;GAMG;AACwC;AAK3C;IAAA;IA+DA,CAAC;IA3DG;;;;;OAKG;IACH,oCAAQ,GAAR,UAAS,IAAY;QAEjB,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAM,cAAc,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,MAAM,CAAC,cAAc,CAAC;IAC1B,CAAC;IAED;;;;;OAKG;IACK,mDAAuB,GAA/B,UAAgC,IAAY;QAExC,qDAAqD;QACrD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAEnD,yBAAyB;QACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;QAEtC,mBAAmB;QACnB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAEnD,+CAA+C;QAC/C,IAAM,SAAS,GAAG,MAAM,CAAC,WAAW,IAAI,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC;QAC3E,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,GAAG,IAAI,CAAC;QAE3C,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;QAE3B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEzC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACnE,CAAC;IAED;;;;OAIG;IACK,uCAAW,GAAnB;QAEI,EAAE,CAAC,CAAE,IAAI,CAAC,QAAS,CAAC,CACpB,CAAC;YACG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,CAAC;IACL,CAAC;IA9DQ,iBAAiB;QAH7B,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;OACW,iBAAiB,CA+D7B;IAAD,wBAAC;CAAA;AA/D6B;;;;;;;;;;;;ACZ9B,w9BAAw9B,OAAO,4jB;;;;;;;;;;;ACA/9B,+DAA+D,qBAAqB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzB;AACZ;AAClB;AACY;AAE2C;AAOtF;IASI;;;;OAIG;IACH,0CACY,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAGvC,2BAA2B;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,4CAAO,EAAE,CAAC;IACzC,CAAC;IAED;;OAEG;IACH,mDAAQ,GAAR;QAAA,iBAUC;QARG,IAAI,CAAC,eAAe,CAAC,MAAM;aACtB,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACrC,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,IAAM,MAAM,GAAG,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACzC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClE,KAAI,CAAC,QAAQ,GAAG,mGAAa,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;OAEG;IACH,sDAAW,GAAX;QAEI,qCAAqC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;IA7CQ,gCAAgC;QAL5C,+DAAS,CAAC;YACP,QAAQ,EAAK,kBAAkB;;;SAGlC,CAAC;yCAgB+B,8DAAc;OAflC,gCAAgC,CA8C5C;IAAD,uCAAC;CAAA;AA9C4C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZJ;AACc;AAEA;AACM;AACY;AAEW;AACC;AACqC;AAChB;AAE1G,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAM,EAAE;QACZ,QAAQ,EAAE;YACN;gBACI,IAAI,EAAO,KAAK;gBAChB,SAAS,EAAE,uIAAgC;aAC9C;SACJ;KACJ;CACJ,CAAC;AAmBF;IAAA;IAEA,CAAC;IAFY,6BAA6B;QAjBzC,8DAAQ,CAAC;YACN,YAAY,EAAK;gBACT,kGAAY;gBAChB,uIAAgC;gBAChC,uHAAsB;aACzB;YACD,OAAO,EAAU;gBACb,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAE7B,iGAAc;gBAEd,oEAAgB;gBAChB,0EAAmB;gBACnB,sFAAgB;aACnB;YACD,eAAe,EAAE,kGAAY;SAChC,CAAC;OACW,6BAA6B,CAEzC;IAAD,oCAAC;CAAA;AAFyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCsI;AAChD;AACH;AACM;AACN;AACZ;AACuB;AACH;AAC7B;AACN;AACS;AACK;AACmB;AACZ;AAClB;AACS;AACH;AACG;AACe;AACN;AACA;AACG;AACH;AACE;AACF;AACM;AACK;AACd;AACA;AACsB;AACZ;AACgB;AACA;AACpB;AACA;AACT;AACwC;AACtC;AACH;AACY;AACc;AACjB;AACH;AACG;AACd;AACM;AAC4B;AACrC;AACN;AACA;AACY;AACc;AACjB;AACA;AACG;AACZ;AACS;AACN;AACiC;AACZ;AACE;AACkB;AACH;AACM;AACxB;AACiC;AACZ;AACjC;AACC;AACoB;AACjB;AAC+B;AAC3C;AACiB;AACL;AACE;AACF;AACA;AACQ;AACjB;AACuB;AACX;AAC0B;AACrB;AACS;AACL;AACZ;AACgC;AACxB;AACd;AACS;AACf;AACY;AACf;AACY;AACM;AACT;AACS;AACA;AACA;AACA;AACiB;AACjB;AACK;AACR;AACN;AACG;AACgC;AAC1B;AACD;AACgB;AACrB;AACqD;AACzD;AACM;AACU;AACN;AACsC;AACT;AACQ;AACd;AACJ;AACF;AACH;AACtC;AACwB;AACc;AACM;AAC7B;AACH;AACiB;AACL;AACM;AACH;AACH;AACA;AACD;AACsC;AACN;AACG;AACxC;AACN;AACiB;AACd;AACoB;AACD;AACV;AACJ;AACA;AACoB;AACd;AACoB;AACN;AACH;AACL;AACZ;AACK;AACC;AACS;AACX;AACH;AACE;AACe;AACA;AACoB;AAChC;AACS;AACA;AACc;AACjB;AACA;AAErH,IAAM,aAAa,GAAG;IACzB,cAAc,EAAM;QAChB,uBAAuB;QACvB,uCAAuC;QACvC,sBAAsB;QACtB,qBAAqB;QACrB,uBAAuB;QACvB,qBAAqB;KACxB;IACD,OAAO,EAAa;QAChB,gBAAgB;KACnB;IACD,cAAc,EAAM;QAChB,uBAAuB;KAC1B;IACD,QAAQ,EAAY;QAChB,iBAAiB;QACjB,cAAc;KACjB;IACD,eAAe,EAAK;QAChB,wBAAwB;QACxB,yBAAyB;KAC5B;IACD,MAAM,EAAc;QAChB,eAAe;QACf,YAAY;KACf;IACD,wBAAwB;IACxB,yBAAyB;IACzB,8BAA8B;IAC9B,uBAAuB;IACvB,KAAK;IACL,wBAAwB;IACxB,wBAAwB;IACxB,KAAK;IACL,UAAU,EAAU;QAChB,mBAAmB;QACnB,uBAAuB;KAC1B;IACD,OAAO,EAAa;QAChB,gBAAgB;QAChB,oBAAoB;QACpB,aAAa;QACb,eAAe;KAClB;IACD,YAAY,EAAQ;QAChB,qBAAqB;QACrB,gBAAgB;QAChB,kBAAkB;QAClB,0BAA0B;QAC1B,wBAAwB;QACxB,qBAAqB;QACrB,mBAAmB;QACnB,mBAAmB;QACnB,oBAAoB;QACpB,mBAAmB;QACnB,oBAAoB;QACpB,mBAAmB;QACnB,uBAAuB;QACvB,kBAAkB;QAClB,kBAAkB;QAClB,4BAA4B;KAC/B;IACD,QAAQ,EAAY;QAChB,iBAAiB;QACjB,gBAAgB;QAChB,aAAa;QACb,iBAAiB;KACpB;IACD,SAAS,EAAW;QAChB,kBAAkB;KACrB;IACD,WAAW,EAAS;QAChB,oBAAoB;KACvB;IACD,iB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","file":"main-angular-material-elements-angular-material-elements-module.js","sourcesContent":["/**\r\n * This class is based on the code in the following projects:\r\n * https://github.com/zenorocha/select\r\n * https://github.com/zenorocha/clipboard.js/\r\n *\r\n * Both released under MIT license - © Zeno Rocha\r\n */\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FuseCopierService\r\n{\r\n    private textarea: HTMLTextAreaElement;\r\n\r\n    /**\r\n     * Copy the text value to the clipboard\r\n     *\r\n     * @param {string} text\r\n     * @returns {boolean}\r\n     */\r\n    copyText(text: string): boolean\r\n    {\r\n        this.createTextareaAndSelect(text);\r\n\r\n        const copySuccessful = document.execCommand('copy');\r\n        this._removeFake();\r\n\r\n        return copySuccessful;\r\n    }\r\n\r\n    /**\r\n     * Creates a hidden textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     *\r\n     * @param {string} text\r\n     */\r\n    private createTextareaAndSelect(text: string): void\r\n    {\r\n        // Create a fake element to hold the contents to copy\r\n        this.textarea = document.createElement('textarea');\r\n\r\n        // Prevent zooming on iOS\r\n        this.textarea.style.fontSize = '12pt';\r\n\r\n        // Hide the element\r\n        this.textarea.classList.add('cdk-visually-hidden');\r\n\r\n        // Move element to the same position vertically\r\n        const yPosition = window.pageYOffset || document.documentElement.scrollTop;\r\n        this.textarea.style.top = yPosition + 'px';\r\n\r\n        this.textarea.setAttribute('readonly', '');\r\n        this.textarea.value = text;\r\n\r\n        document.body.appendChild(this.textarea);\r\n\r\n        this.textarea.select();\r\n        this.textarea.setSelectionRange(0, this.textarea.value.length);\r\n    }\r\n\r\n    /**\r\n     * Remove the text area from the DOM\r\n     *\r\n     * @private\r\n     */\r\n    private _removeFake(): void\r\n    {\r\n        if ( this.textarea )\r\n        {\r\n            document.body.removeChild(this.textarea);\r\n            this.textarea = null;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"page-layout simple fullwidth angular-material-elements\\\">\\r\\n\\r\\n    <!-- HEADER -->\\r\\n    <div class=\\\"header mat-accent-bg p-24 h-160\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.gt-xs=\\\"row\\\"\\r\\n         fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.gt-xs=\\\"column\\\" fxLayoutAlign.gt-xs=\\\"center start\\\">\\r\\n            <div class=\\\"black-fg\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                <mat-icon class=\\\"secondary-text s-18\\\">home</mat-icon>\\r\\n                <mat-icon class=\\\"secondary-text s-16\\\">chevron_right</mat-icon>\\r\\n                <span class=\\\"secondary-text\\\">Components</span>\\r\\n                <mat-icon class=\\\"secondary-text s-16\\\">chevron_right</mat-icon>\\r\\n                <span class=\\\"secondary-text\\\">Angular Material Elements</span>\\r\\n            </div>\\r\\n            <div class=\\\"h2 mt-16\\\">{{title}}</div>\\r\\n        </div>\\r\\n\\r\\n        <a mat-raised-button class=\\\"reference-button mat-white-bg mt-16 mt-sm-0\\\" href=\\\"https://material.angular.io/\\\"\\r\\n           target=\\\"_blank\\\">\\r\\n            <mat-icon class=\\\"mr-8\\\">link</mat-icon>\\r\\n            <span>Reference</span>\\r\\n        </a>\\r\\n    </div>\\r\\n    <!-- / HEADER -->\\r\\n\\r\\n    <!-- CONTENT -->\\r\\n    <div class=\\\"content p-24\\\">\\r\\n        <div *ngFor=\\\"let example of examples\\\">\\r\\n            <example-viewer [example]=\\\"example\\\"></example-viewer>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \":host .angular-material-elements > .content {\\n  max-width: 960px; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { COMPONENT_MAP } from 'app/main/angular-material-elements/example-components';\r\n\r\n@Component({\r\n    selector   : 'angular-material',\r\n    templateUrl: './angular-material-elements.component.html',\r\n    styleUrls  : ['./angular-material-elements.component.scss']\r\n})\r\nexport class AngularMaterialElementsComponent implements OnInit, OnDestroy\r\n{\r\n    id: string;\r\n    title: string;\r\n    examples: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._activatedRoute.params\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(params => {\r\n                this.id = params['id'];\r\n                const _title = this.id.replace('-', ' ');\r\n                this.title = _title.charAt(0).toUpperCase() + _title.substring(1);\r\n                this.examples = COMPONENT_MAP[this.id];\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseHighlightModule } from '@fuse/components/index';\r\nimport { FuseWidgetModule } from '@fuse/components/widget/widget.module';\r\n\r\nimport { MaterialModule } from 'app/main/angular-material-elements/material.module';\r\nimport { EXAMPLE_LIST } from 'app/main/angular-material-elements/example-components';\r\nimport { AngularMaterialElementsComponent } from 'app/main/angular-material-elements/angular-material-elements.component';\r\nimport { ExampleViewerComponent } from 'app/main/angular-material-elements/example-viewer/example-viewer';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path    : '',\r\n        children: [\r\n            {\r\n                path     : ':id',\r\n                component: AngularMaterialElementsComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations   : [\r\n        [...EXAMPLE_LIST],\r\n        AngularMaterialElementsComponent,\r\n        ExampleViewerComponent\r\n    ],\r\n    imports        : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MaterialModule,\r\n\r\n        FuseSharedModule,\r\n        FuseHighlightModule,\r\n        FuseWidgetModule\r\n    ],\r\n    entryComponents: EXAMPLE_LIST,\r\n})\r\nexport class AngularMaterialElementsModule\r\n{\r\n}\r\n\r\n","import { AutocompleteAutoActiveFirstOptionExample } from 'assets/angular-material-examples/autocomplete-auto-active-first-option/autocomplete-auto-active-first-option-example';\r\nimport { AutocompleteDisplayExample } from 'assets/angular-material-examples/autocomplete-display/autocomplete-display-example';\r\nimport { AutocompleteFilterExample } from 'assets/angular-material-examples/autocomplete-filter/autocomplete-filter-example';\r\nimport { AutocompleteOverviewExample } from 'assets/angular-material-examples/autocomplete-overview/autocomplete-overview-example';\r\nimport { AutocompleteSimpleExample } from 'assets/angular-material-examples/autocomplete-simple/autocomplete-simple-example';\r\nimport { ButtonOverviewExample } from 'assets/angular-material-examples/button-overview/button-overview-example';\r\nimport { ButtonToggleExclusiveExample } from 'assets/angular-material-examples/button-toggle-exclusive/button-toggle-exclusive-example';\r\nimport { ButtonToggleOverviewExample } from 'assets/angular-material-examples/button-toggle-overview/button-toggle-overview-example';\r\nimport { ButtonTypesExample } from 'assets/angular-material-examples/button-types/button-types-example';\r\nimport { CardFancyExample } from 'assets/angular-material-examples/card-fancy/card-fancy-example';\r\nimport { CardOverviewExample } from 'assets/angular-material-examples/card-overview/card-overview-example';\r\nimport { CdkTableBasicExample } from 'assets/angular-material-examples/cdk-table-basic/cdk-table-basic-example';\r\nimport { CheckboxConfigurableExample } from 'assets/angular-material-examples/checkbox-configurable/checkbox-configurable-example';\r\nimport { CheckboxOverviewExample } from 'assets/angular-material-examples/checkbox-overview/checkbox-overview-example';\r\nimport { ChipsInputExample } from 'assets/angular-material-examples/chips-input/chips-input-example';\r\nimport { ChipsOverviewExample } from 'assets/angular-material-examples/chips-overview/chips-overview-example';\r\nimport { ChipsStackedExample } from 'assets/angular-material-examples/chips-stacked/chips-stacked-example';\r\nimport { DatepickerApiExample } from 'assets/angular-material-examples/datepicker-api/datepicker-api-example';\r\nimport { DatepickerDisabledExample } from 'assets/angular-material-examples/datepicker-disabled/datepicker-disabled-example';\r\nimport { DatepickerEventsExample } from 'assets/angular-material-examples/datepicker-events/datepicker-events-example';\r\nimport { DatepickerFilterExample } from 'assets/angular-material-examples/datepicker-filter/datepicker-filter-example';\r\nimport { DatepickerFormatsExample } from 'assets/angular-material-examples/datepicker-formats/datepicker-formats-example';\r\nimport { DatepickerLocaleExample } from 'assets/angular-material-examples/datepicker-locale/datepicker-locale-example';\r\nimport { DatepickerMinMaxExample } from 'assets/angular-material-examples/datepicker-min-max/datepicker-min-max-example';\r\nimport { DatepickerMomentExample } from 'assets/angular-material-examples/datepicker-moment/datepicker-moment-example';\r\nimport { DatepickerOverviewExample } from 'assets/angular-material-examples/datepicker-overview/datepicker-overview-example';\r\nimport { DatepickerStartViewExample } from 'assets/angular-material-examples/datepicker-start-view/datepicker-start-view-example';\r\nimport { DatepickerTouchExample } from 'assets/angular-material-examples/datepicker-touch/datepicker-touch-example';\r\nimport { DatepickerValueExample } from 'assets/angular-material-examples/datepicker-value/datepicker-value-example';\r\nimport { DialogContentExampleDialog, DialogContentExample } from 'assets/angular-material-examples/dialog-content/dialog-content-example';\r\nimport { DialogDataExampleDialog, DialogDataExample } from 'assets/angular-material-examples/dialog-data/dialog-data-example';\r\nimport { DialogElementsExampleDialog, DialogElementsExample } from 'assets/angular-material-examples/dialog-elements/dialog-elements-example';\r\nimport { DialogOverviewExampleDialog, DialogOverviewExample } from 'assets/angular-material-examples/dialog-overview/dialog-overview-example';\r\nimport { ElevationOverviewExample } from 'assets/angular-material-examples/elevation-overview/elevation-overview-example';\r\nimport { ExpansionOverviewExample } from 'assets/angular-material-examples/expansion-overview/expansion-overview-example';\r\nimport { ExpansionStepsExample } from 'assets/angular-material-examples/expansion-steps/expansion-steps-example';\r\nimport { MyTelInput, FormFieldCustomControlExample } from 'assets/angular-material-examples/form-field-custom-control/form-field-custom-control-example';\r\nimport { FormFieldErrorExample } from 'assets/angular-material-examples/form-field-error/form-field-error-example';\r\nimport { FormFieldHintExample } from 'assets/angular-material-examples/form-field-hint/form-field-hint-example';\r\nimport { FormFieldOverviewExample } from 'assets/angular-material-examples/form-field-overview/form-field-overview-example';\r\nimport { FormFieldPrefixSuffixExample } from 'assets/angular-material-examples/form-field-prefix-suffix/form-field-prefix-suffix-example';\r\nimport { FormFieldThemingExample } from 'assets/angular-material-examples/form-field-theming/form-field-theming-example';\r\nimport { GridListDynamicExample } from 'assets/angular-material-examples/grid-list-dynamic/grid-list-dynamic-example';\r\nimport { GridListOverviewExample } from 'assets/angular-material-examples/grid-list-overview/grid-list-overview-example';\r\nimport { IconOverviewExample } from 'assets/angular-material-examples/icon-overview/icon-overview-example';\r\nimport { InputClearableExample } from 'assets/angular-material-examples/input-clearable/input-clearable-example';\r\nimport { InputErrorStateMatcherExample } from 'assets/angular-material-examples/input-error-state-matcher/input-error-state-matcher-example';\r\nimport { InputErrorsExample } from 'assets/angular-material-examples/input-errors/input-errors-example';\r\nimport { InputFormExample } from 'assets/angular-material-examples/input-form/input-form-example';\r\nimport { InputHintExample } from 'assets/angular-material-examples/input-hint/input-hint-example';\r\nimport { InputOverviewExample } from 'assets/angular-material-examples/input-overview/input-overview-example';\r\nimport { InputPrefixSuffixExample } from 'assets/angular-material-examples/input-prefix-suffix/input-prefix-suffix-example';\r\nimport { ListOverviewExample } from 'assets/angular-material-examples/list-overview/list-overview-example';\r\nimport { ListSectionsExample } from 'assets/angular-material-examples/list-sections/list-sections-example';\r\nimport { ListSelectionExample } from 'assets/angular-material-examples/list-selection/list-selection-example';\r\nimport { MenuIconsExample } from 'assets/angular-material-examples/menu-icons/menu-icons-example';\r\nimport { MenuOverviewExample } from 'assets/angular-material-examples/menu-overview/menu-overview-example';\r\nimport { NestedMenuExample } from 'assets/angular-material-examples/nested-menu/nested-menu-example';\r\nimport { PaginatorConfigurableExample } from 'assets/angular-material-examples/paginator-configurable/paginator-configurable-example';\r\nimport { PaginatorOverviewExample } from 'assets/angular-material-examples/paginator-overview/paginator-overview-example';\r\nimport { ProgressBarBufferExample } from 'assets/angular-material-examples/progress-bar-buffer/progress-bar-buffer-example';\r\nimport { ProgressBarConfigurableExample } from 'assets/angular-material-examples/progress-bar-configurable/progress-bar-configurable-example';\r\nimport { ProgressBarDeterminateExample } from 'assets/angular-material-examples/progress-bar-determinate/progress-bar-determinate-example';\r\nimport { ProgressBarIndeterminateExample } from 'assets/angular-material-examples/progress-bar-indeterminate/progress-bar-indeterminate-example';\r\nimport { ProgressBarQueryExample } from 'assets/angular-material-examples/progress-bar-query/progress-bar-query-example';\r\nimport { ProgressSpinnerConfigurableExample } from 'assets/angular-material-examples/progress-spinner-configurable/progress-spinner-configurable-example';\r\nimport { ProgressSpinnerOverviewExample } from 'assets/angular-material-examples/progress-spinner-overview/progress-spinner-overview-example';\r\nimport { RadioNgModelExample } from 'assets/angular-material-examples/radio-ng-model/radio-ng-model-example';\r\nimport { RadioOverviewExample } from 'assets/angular-material-examples/radio-overview/radio-overview-example';\r\nimport { SelectCustomTriggerExample } from 'assets/angular-material-examples/select-custom-trigger/select-custom-trigger-example';\r\nimport { SelectDisabledExample } from 'assets/angular-material-examples/select-disabled/select-disabled-example';\r\nimport { SelectErrorStateMatcherExample } from 'assets/angular-material-examples/select-error-state-matcher/select-error-state-matcher-example';\r\nimport { SelectFormExample } from 'assets/angular-material-examples/select-form/select-form-example';\r\nimport { SelectHintErrorExample } from 'assets/angular-material-examples/select-hint-error/select-hint-error-example';\r\nimport { SelectMultipleExample } from 'assets/angular-material-examples/select-multiple/select-multiple-example';\r\nimport { SelectNoRippleExample } from 'assets/angular-material-examples/select-no-ripple/select-no-ripple-example';\r\nimport { SelectOptgroupExample } from 'assets/angular-material-examples/select-optgroup/select-optgroup-example';\r\nimport { SelectOverviewExample } from 'assets/angular-material-examples/select-overview/select-overview-example';\r\nimport { SelectPanelClassExample } from 'assets/angular-material-examples/select-panel-class/select-panel-class-example';\r\nimport { SelectResetExample } from 'assets/angular-material-examples/select-reset/select-reset-example';\r\nimport { SelectValueBindingExample } from 'assets/angular-material-examples/select-value-binding/select-value-binding-example';\r\nimport { SidenavOverviewExample } from 'assets/angular-material-examples/sidenav-overview/sidenav-overview-example';\r\nimport { SlideToggleConfigurableExample } from 'assets/angular-material-examples/slide-toggle-configurable/slide-toggle-configurable-example';\r\nimport { SlideToggleFormsExample } from 'assets/angular-material-examples/slide-toggle-forms/slide-toggle-forms-example';\r\nimport { SlideToggleOverviewExample } from 'assets/angular-material-examples/slide-toggle-overview/slide-toggle-overview-example';\r\nimport { SliderConfigurableExample } from 'assets/angular-material-examples/slider-configurable/slider-configurable-example';\r\nimport { SliderOverviewExample } from 'assets/angular-material-examples/slider-overview/slider-overview-example';\r\nimport { PizzaPartyComponent, SnackBarComponentExample } from 'assets/angular-material-examples/snack-bar-component/snack-bar-component-example';\r\nimport { SnackBarOverviewExample } from 'assets/angular-material-examples/snack-bar-overview/snack-bar-overview-example';\r\nimport { SortOverviewExample } from 'assets/angular-material-examples/sort-overview/sort-overview-example';\r\nimport { StepperOverviewExample } from 'assets/angular-material-examples/stepper-overview/stepper-overview-example';\r\nimport { TableBasicExample } from 'assets/angular-material-examples/table-basic/table-basic-example';\r\nimport { TableFilteringExample } from 'assets/angular-material-examples/table-filtering/table-filtering-example';\r\nimport { TableHttpExample } from 'assets/angular-material-examples/table-http/table-http-example';\r\nimport { TableOverviewExample } from 'assets/angular-material-examples/table-overview/table-overview-example';\r\nimport { TablePaginationExample } from 'assets/angular-material-examples/table-pagination/table-pagination-example';\r\nimport { TableSortingExample } from 'assets/angular-material-examples/table-sorting/table-sorting-example';\r\nimport { ToolbarMultirowExample } from 'assets/angular-material-examples/toolbar-multirow/toolbar-multirow-example';\r\nimport { ToolbarOverviewExample } from 'assets/angular-material-examples/toolbar-overview/toolbar-overview-example';\r\nimport { TooltipOverviewExample } from 'assets/angular-material-examples/tooltip-overview/tooltip-overview-example';\r\nimport { TooltipPositionExample } from 'assets/angular-material-examples/tooltip-position/tooltip-position-example';\r\nimport { DatepickerCustomIconExample } from 'assets/angular-material-examples/datepicker-custom-icon/datepicker-custom-icon-example';\r\nimport { SidenavAutosizeExample } from 'assets/angular-material-examples/sidenav-autosize/sidenav-autosize-example';\r\nimport { SnackBarPositionExample } from 'assets/angular-material-examples/snack-bar-position/snack-bar-position-example';\r\nimport { TableSelectionExample } from 'assets/angular-material-examples/table-selection/table-selection-example';\r\nimport { TooltipDelayExample } from 'assets/angular-material-examples/tooltip-delay/tooltip-delay-example';\r\nimport { TooltipManualExample } from 'assets/angular-material-examples/tooltip-manual/tooltip-manual-example';\r\nimport { TooltipModifiedDefaultsExample } from 'assets/angular-material-examples/tooltip-modified-defaults/tooltip-modified-defaults-example';\r\nimport { DividerOverviewExample } from 'assets/angular-material-examples/divider-overview/divider-overview-example';\r\nimport { FormFieldLabelExample } from 'assets/angular-material-examples/form-field-label/form-field-label-example';\r\nimport { AutocompleteOptgroupExample } from 'assets/angular-material-examples/autocomplete-optgroup/autocomplete-optgroup-example';\r\nimport { BadgeOverviewExample } from 'assets/angular-material-examples/badge-overview/badge-overview-example';\r\nimport { BottomSheetOverviewExample, BottomSheetOverviewExampleSheet } from 'assets/angular-material-examples/bottom-sheet-overview/bottom-sheet-overview-example';\r\nimport { CdkTreeFlatExample } from 'assets/angular-material-examples/cdk-tree-flat/cdk-tree-flat-example';\r\nimport { CdkTreeNestedExample } from 'assets/angular-material-examples/cdk-tree-nested/cdk-tree-nested-example';\r\nimport { ChipsAutocompleteExample } from 'assets/angular-material-examples/chips-autocomplete/chips-autocomplete-example';\r\nimport { DatepickerColorExample } from 'assets/angular-material-examples/datepicker-color/datepicker-color-example';\r\nimport { DatepickerCustomHeaderExample, ExampleHeader } from 'assets/angular-material-examples/datepicker-custom-header/datepicker-custom-header-example';\r\nimport { DatepickerViewsSelectionExample } from 'assets/angular-material-examples/datepicker-views-selection/datepicker-views-selection-example';\r\nimport { ExpansionExpandCollapseAllExample } from 'assets/angular-material-examples/expansion-expand-collapse-all/expansion-expand-collapse-all-example';\r\nimport { FocusMonitorDirectivesExample } from 'assets/angular-material-examples/focus-monitor-directives/focus-monitor-directives-example';\r\nimport { FocusMonitorFocusViaExample } from 'assets/angular-material-examples/focus-monitor-focus-via/focus-monitor-focus-via-example';\r\nimport { FocusMonitorOverviewExample } from 'assets/angular-material-examples/focus-monitor-overview/focus-monitor-overview-example';\r\nimport { FormFieldAppearanceExample } from 'assets/angular-material-examples/form-field-appearance/form-field-appearance-example';\r\nimport { IconSvgExample } from 'assets/angular-material-examples/icon-svg/icon-svg-example';\r\nimport { SidenavBackdropExample } from 'assets/angular-material-examples/sidenav-backdrop/sidenav-backdrop-example';\r\nimport { SidenavDisableCloseExample } from 'assets/angular-material-examples/sidenav-disable-close/sidenav-disable-close-example';\r\nimport { SidenavDrawerOverviewExample } from 'assets/angular-material-examples/sidenav-drawer-overview/sidenav-drawer-overview-example';\r\nimport { SidenavFixedExample } from 'assets/angular-material-examples/sidenav-fixed/sidenav-fixed-example';\r\nimport { SidenavModeExample } from 'assets/angular-material-examples/sidenav-mode/sidenav-mode-example';\r\nimport { SidenavOpenCloseExample } from 'assets/angular-material-examples/sidenav-open-close/sidenav-open-close-example';\r\nimport { SidenavPositionExample } from 'assets/angular-material-examples/sidenav-position/sidenav-position-example';\r\nimport { SidenavResponsiveExample } from 'assets/angular-material-examples/sidenav-responsive/sidenav-responsive-example';\r\nimport { SliderFormattingExample } from 'assets/angular-material-examples/slider-formatting/slider-formatting-example';\r\nimport { StepperEditableExample } from 'assets/angular-material-examples/stepper-editable/stepper-editable-example';\r\nimport { StepperOptionalExample } from 'assets/angular-material-examples/stepper-optional/stepper-optional-example';\r\nimport { TableFooterRowExample } from 'assets/angular-material-examples/table-footer-row/table-footer-row-example';\r\nimport { TextFieldAutofillDirectiveExample } from 'assets/angular-material-examples/text-field-autofill-directive/text-field-autofill-directive-example';\r\nimport { TextFieldAutofillMonitorExample } from 'assets/angular-material-examples/text-field-autofill-monitor/text-field-autofill-monitor-example';\r\nimport { TextFieldAutosizeTextareaExample } from 'assets/angular-material-examples/text-field-autosize-textarea/text-field-autosize-textarea-example';\r\nimport { TreeChecklistExample } from 'assets/angular-material-examples/tree-checklist/tree-checklist-example';\r\nimport { TreeDynamicExample } from 'assets/angular-material-examples/tree-dynamic/tree-dynamic-example';\r\nimport { TreeFlatOverviewExample } from 'assets/angular-material-examples/tree-flat-overview/tree-flat-overview-example';\r\nimport { TreeLoadmoreExample } from 'assets/angular-material-examples/tree-loadmore/tree-loadmore-example';\r\nimport { TreeNestedOverviewExample } from 'assets/angular-material-examples/tree-nested-overview/tree-nested-overview-example';\r\nimport { CdkTableBasicFlexExample } from 'assets/angular-material-examples/cdk-table-basic-flex/cdk-table-basic-flex-example';\r\nimport { StepperVerticalExample } from 'assets/angular-material-examples/stepper-vertical/stepper-vertical-example';\r\nimport { TabGroupBasicExample } from 'assets/angular-material-examples/tab-group-basic/tab-group-basic-example';\r\nimport { TabGroupAsyncExample } from 'assets/angular-material-examples/tab-group-async/tab-group-async-example';\r\nimport { TabGroupCustomLabelExample } from 'assets/angular-material-examples/tab-group-custom-label/tab-group-custom-label-example';\r\nimport { TabGroupDynamicExample } from 'assets/angular-material-examples/tab-group-dynamic/tab-group-dynamic-example';\r\nimport { TabGroupDynamicHeightExample } from 'assets/angular-material-examples/tab-group-dynamic-height/tab-group-dynamic-height-example';\r\nimport { TabGroupHeaderBelowExample } from 'assets/angular-material-examples/tab-group-header-below/tab-group-header-below-example';\r\nimport { TabGroupLazyLoadedExample } from 'assets/angular-material-examples/tab-group-lazy-loaded/tab-group-lazy-loaded-example';\r\nimport { TabGroupStretchedExample } from 'assets/angular-material-examples/tab-group-stretched/tab-group-stretched-example';\r\nimport { TabGroupThemeExample } from 'assets/angular-material-examples/tab-group-theme/tab-group-theme-example';\r\nimport { TabNavBarBasicExample } from 'assets/angular-material-examples/tab-nav-bar-basic/tab-nav-bar-basic-example';\r\nimport { TooltipAutoHideExample } from 'assets/angular-material-examples/tooltip-auto-hide/tooltip-auto-hide-example';\r\nimport { TooltipCustomClassExample } from 'assets/angular-material-examples/tooltip-custom-class/tooltip-custom-class-example';\r\nimport { TooltipDisabledExample } from 'assets/angular-material-examples/tooltip-disabled/tooltip-disabled-example';\r\nimport { TooltipMessageExample } from 'assets/angular-material-examples/tooltip-message/tooltip-message-example';\r\nimport { TableBasicFlexExample } from 'assets/angular-material-examples/table-basic-flex/table-basic-flex-example';\r\nimport { TableDynamicColumnsExample } from 'assets/angular-material-examples/table-dynamic-columns/table-dynamic-columns-example';\r\nimport { TableExpandableRowsExample } from 'assets/angular-material-examples/table-expandable-rows/table-expandable-rows-example';\r\nimport { TableMultipleHeaderFooterExample } from 'assets/angular-material-examples/table-multiple-header-footer/table-multiple-header-footer-example';\r\nimport { TableRowContextExample } from 'assets/angular-material-examples/table-row-context/table-row-context-example';\r\nimport { TableStickyColumnsExample } from 'assets/angular-material-examples/table-sticky-columns/table-sticky-columns-example';\r\nimport { TableStickyComplexExample } from 'assets/angular-material-examples/table-sticky-complex/table-sticky-complex-example';\r\nimport { TableStickyComplexFlexExample } from 'assets/angular-material-examples/table-sticky-complex-flex/table-sticky-complex-flex-example';\r\nimport { TableStickyFooterExample } from 'assets/angular-material-examples/table-sticky-footer/table-sticky-footer-example';\r\nimport { TableStickyHeaderExample } from 'assets/angular-material-examples/table-sticky-header/table-sticky-header-example';\r\n\r\nexport const COMPONENT_MAP = {\r\n    'autocomplete'    : [\r\n        'autocomplete-overview',\r\n        'autocomplete-auto-active-first-option',\r\n        'autocomplete-display',\r\n        'autocomplete-filter',\r\n        'autocomplete-optgroup',\r\n        'autocomplete-simple'\r\n    ],\r\n    'badge'           : [\r\n        'badge-overview'\r\n    ],\r\n    'bottom-sheet'    : [\r\n        'bottom-sheet-overview'\r\n    ],\r\n    'button'          : [\r\n        'button-overview',\r\n        'button-types'\r\n    ],\r\n    'button-toggle'   : [\r\n        'button-toggle-overview',\r\n        'button-toggle-exclusive'\r\n    ],\r\n    'card'            : [\r\n        'card-overview',\r\n        'card-fancy'\r\n    ],\r\n    // 'cdk-table'       : [\r\n    //     'cdk-table-basic',\r\n    //     'cdk-table-basic-flex',\r\n    //     'cdk-table-flat'\r\n    // ],\r\n    // 'cdk-tree'        : [\r\n    //     'cdk-tree-nested'\r\n    // ],\r\n    'checkbox'        : [\r\n        'checkbox-overview',\r\n        'checkbox-configurable'\r\n    ],\r\n    'chips'           : [\r\n        'chips-overview',\r\n        'chips-autocomplete',\r\n        'chips-input',\r\n        'chips-stacked'\r\n    ],\r\n    'datepicker'      : [\r\n        'datepicker-overview',\r\n        'datepicker-api',\r\n        'datepicker-color',\r\n        'datepicker-custom-header',\r\n        'datepicker-custom-icon',\r\n        'datepicker-disabled',\r\n        'datepicker-events',\r\n        'datepicker-filter',\r\n        'datepicker-formats',\r\n        'datepicker-locale',\r\n        'datepicker-min-max',\r\n        'datepicker-moment',\r\n        'datepicker-start-view',\r\n        'datepicker-touch',\r\n        'datepicker-value',\r\n        'datepicker-views-selection'\r\n    ],\r\n    'dialog'          : [\r\n        'dialog-overview',\r\n        'dialog-content',\r\n        'dialog-data',\r\n        'dialog-elements'\r\n    ],\r\n    'divider'         : [\r\n        'divider-overview'\r\n    ],\r\n    'elevation'       : [\r\n        'elevation-overview'\r\n    ],\r\n    'expansion-panel' : [\r\n        'expansion-overview',\r\n        'expansion-expand-collapse-all',\r\n        'expansion-steps'\r\n    ],\r\n    // 'focus-monitor'   : [\r\n    //     'focus-monitor-overview',\r\n    //     'focus-monitor-directives',\r\n    //     'focus-monitor-focus-via'\r\n    // ],\r\n    'form-field'      : [\r\n        'form-field-overview',\r\n        'form-field-appearance',\r\n        'form-field-custom-control',\r\n        'form-field-error',\r\n        'form-field-hint',\r\n        'form-field-label',\r\n        'form-field-prefix-suffix',\r\n        'form-field-theming'\r\n    ],\r\n    'grid-list'       : [\r\n        'grid-list-overview',\r\n        'grid-list-dynamic'\r\n    ],\r\n    'icon'            : [\r\n        'icon-overview',\r\n        'icon-svg'\r\n    ],\r\n    'input'           : [\r\n        'input-overview',\r\n        'input-clearable',\r\n        'input-error-state-matcher',\r\n        'input-errors',\r\n        'input-form',\r\n        'input-hint',\r\n        'input-prefix-suffix'\r\n    ],\r\n    'list'            : [\r\n        'list-overview',\r\n        'list-sections',\r\n        'list-selection'\r\n    ],\r\n    'menu'            : [\r\n        'menu-overview',\r\n        'menu-icons',\r\n        'nested-menu'\r\n    ],\r\n    'paginator'       : [\r\n        'paginator-overview',\r\n        'paginator-configurable'\r\n    ],\r\n    'progress-bar'    : [\r\n        'progress-bar-buffer',\r\n        'progress-bar-configurable',\r\n        'progress-bar-determinate',\r\n        'progress-bar-indeterminate',\r\n        'progress-bar-query'\r\n    ],\r\n    'progress-spinner': [\r\n        'progress-spinner-overview',\r\n        'progress-spinner-configurable'\r\n    ],\r\n    'radio-button'    : [\r\n        'radio-overview',\r\n        'radio-ng-model'\r\n    ],\r\n    'select'          : [\r\n        'select-overview',\r\n        'select-custom-trigger',\r\n        'select-disabled',\r\n        'select-error-state-matcher',\r\n        'select-form',\r\n        'select-hint-error',\r\n        'select-multiple',\r\n        'select-no-ripple',\r\n        'select-optgroup',\r\n        'select-panel-class',\r\n        'select-reset',\r\n        'select-value-binding'\r\n    ],\r\n    'sidenav'         : [\r\n        // 'sidenav-overview',\r\n        'sidenav-drawer-overview',\r\n        'sidenav-autosize',\r\n        'sidenav-backdrop'\r\n        // 'sidenav-disable-close',\r\n        // 'sidenav-fixed',\r\n        // 'sidenav-mode',\r\n        // 'sidenav-open-close',\r\n        // 'sidenav-position',\r\n        // 'sidenav-responsive'\r\n    ],\r\n    'slide-toggle'    : [\r\n        'slide-toggle-overview',\r\n        'slide-toggle-configurable',\r\n        'slide-toggle-forms'\r\n    ],\r\n    'slider'          : [\r\n        'slider-overview',\r\n        'slider-configurable',\r\n        'slider-formatting'\r\n    ],\r\n    'snackbar'        : [\r\n        'snack-bar-overview',\r\n        'snack-bar-position'\r\n    ],\r\n    'sort-header'     : [\r\n        'sort-overview'\r\n    ],\r\n    'stepper'         : [\r\n        'stepper-overview',\r\n        'stepper-editable',\r\n        'stepper-optional',\r\n        'stepper-vertical'\r\n    ],\r\n    'table'           : [\r\n        'table-overview',\r\n        'table-basic',\r\n        'table-basic-flex',\r\n        'table-dynamic-columns',\r\n        'table-expandable-rows',\r\n        'table-filtering',\r\n        'table-footer-row',\r\n        'table-http',\r\n        'table-multiple-header-footer',\r\n        'table-pagination',\r\n        'table-row-context',\r\n        'table-selection',\r\n        'table-sorting',\r\n        'table-sticky-columns',\r\n        'table-sticky-complex',\r\n        'table-sticky-complex-flex',\r\n        'table-sticky-header',\r\n        'table-sticky-footer',\r\n    ],\r\n    'tabs'            : [\r\n        'tab-group-basic',\r\n        'tab-group-async',\r\n        'tab-group-custom-label',\r\n        'tab-group-dynamic',\r\n        'tab-group-dynamic-height',\r\n        'tab-group-header-below',\r\n        'tab-group-lazy-loaded',\r\n        'tab-group-stretched',\r\n        'tab-group-theme',\r\n        'tab-nav-bar-basic'\r\n    ],\r\n    'text-field'      : [\r\n        'text-field-autofill-directive',\r\n        'text-field-autofill-monitor',\r\n        'text-field-autosize-textarea'\r\n    ],\r\n    'toolbar'         : [\r\n        'toolbar-overview',\r\n        'toolbar-multirow'\r\n    ],\r\n    'tooltip'         : [\r\n        'tooltip-overview',\r\n        'tooltip-auto-hide',\r\n        'tooltip-custom-class',\r\n        'tooltip-delay',\r\n        'tooltip-disabled',\r\n        'tooltip-manual',\r\n        'tooltip-message',\r\n        'tooltip-modified-defaults',\r\n        'tooltip-position'\r\n    ],\r\n    'tree'            : [\r\n        'tree-flat-overview',\r\n        'tree-nested-overview',\r\n        'tree-checklist',\r\n        'tree-dynamic',\r\n        'tree-loadmore'\r\n    ]\r\n};\r\n\r\nexport const EXAMPLE_COMPONENTS = {\r\n    'autocomplete-auto-active-first-option': {\r\n        title    : 'Highlight the first autocomplete option',\r\n        component: AutocompleteAutoActiveFirstOptionExample\r\n    },\r\n    'autocomplete-display'                 : {\r\n        title    : 'Display value autocomplete',\r\n        component: AutocompleteDisplayExample\r\n    },\r\n    'autocomplete-filter'                  : {\r\n        title    : 'Filter autocomplete',\r\n        component: AutocompleteFilterExample\r\n    },\r\n    'autocomplete-optgroup'                : {\r\n        title    : 'Option groups autocomplete',\r\n        component: AutocompleteOptgroupExample\r\n    },\r\n    'autocomplete-overview'                : {\r\n        title    : 'Autocomplete overview',\r\n        component: AutocompleteOverviewExample\r\n    },\r\n    'autocomplete-simple'                  : {\r\n        title    : 'Simple autocomplete',\r\n        component: AutocompleteSimpleExample\r\n    },\r\n    'badge-overview'                       : {\r\n        title    : 'Badge overview',\r\n        component: BadgeOverviewExample\r\n    },\r\n    'bottom-sheet-overview'                : {\r\n        title          : 'Bottom Sheet Overview',\r\n        component      : BottomSheetOverviewExample,\r\n        additionalFiles: ['bottom-sheet-overview-example-sheet.html'],\r\n        selectorName   : 'BottomSheetOverviewExample, BottomSheetOverviewExampleSheet'\r\n    },\r\n    'button-overview'                      : {\r\n        title    : 'Basic buttons',\r\n        component: ButtonOverviewExample\r\n    },\r\n    'button-toggle-exclusive'              : {\r\n        title    : 'Exclusive selection',\r\n        component: ButtonToggleExclusiveExample\r\n    },\r\n    'button-toggle-overview'               : {\r\n        title    : 'Basic button-toggles',\r\n        component: ButtonToggleOverviewExample\r\n    },\r\n    'button-types'                         : {\r\n        title    : 'Button varieties',\r\n        component: ButtonTypesExample\r\n    },\r\n    'card-fancy'                           : {\r\n        title    : 'Card with multiple sections',\r\n        component: CardFancyExample\r\n    },\r\n    'card-overview'                        : {\r\n        title    : 'Basic cards',\r\n        component: CardOverviewExample\r\n    },\r\n    'cdk-table-basic'                      : {\r\n        title    : 'Basic CDK data-table',\r\n        component: CdkTableBasicExample\r\n    },\r\n    'cdk-table-basic-flex'                 : {\r\n        title    : 'Basic use of `<cdk-table>` (uses display flex)',\r\n        component: CdkTableBasicFlexExample\r\n    },\r\n    'cdk-tree-flat'                        : {\r\n        title    : 'Tree with flat nodes',\r\n        component: CdkTreeFlatExample\r\n    },\r\n    'cdk-tree-nested'                      : {\r\n        title    : 'Tree with nested nodes',\r\n        component: CdkTreeNestedExample\r\n    },\r\n    'checkbox-configurable'                : {\r\n        title    : 'Configurable checkbox',\r\n        component: CheckboxConfigurableExample\r\n    },\r\n    'checkbox-overview'                    : {\r\n        title    : 'Basic checkboxes',\r\n        component: CheckboxOverviewExample\r\n    },\r\n    'chips-autocomplete'                   : {\r\n        title    : 'Chips Autocomplete',\r\n        component: ChipsAutocompleteExample\r\n    },\r\n    'chips-input'                          : {\r\n        title    : 'Chips with input',\r\n        component: ChipsInputExample\r\n    },\r\n    'chips-overview'                       : {\r\n        title    : 'Basic chips',\r\n        component: ChipsOverviewExample\r\n    },\r\n    'chips-stacked'                        : {\r\n        title    : 'Stacked chips',\r\n        component: ChipsStackedExample\r\n    },\r\n    'datepicker-api'                       : {\r\n        title    : 'Datepicker open method',\r\n        component: DatepickerApiExample\r\n    },\r\n    'datepicker-color'                     : {\r\n        title    : 'Datepicker palette colors',\r\n        component: DatepickerColorExample\r\n    },\r\n    'datepicker-custom-header'             : {\r\n        title       : 'Datepicker with custom calendar header',\r\n        component   : DatepickerCustomHeaderExample,\r\n        selectorName: 'DatepickerCustomHeaderExample, ExampleHeader'\r\n    },\r\n    'datepicker-custom-icon'               : {\r\n        title    : 'Datepicker with custom icon',\r\n        component: DatepickerCustomIconExample\r\n    },\r\n    'datepicker-disabled'                  : {\r\n        title    : 'Disabled datepicker',\r\n        component: DatepickerDisabledExample\r\n    },\r\n    'datepicker-events'                    : {\r\n        title    : 'Datepicker input and change events',\r\n        component: DatepickerEventsExample\r\n    },\r\n    'datepicker-filter'                    : {\r\n        title    : 'Datepicker with filter validation',\r\n        component: DatepickerFilterExample\r\n    },\r\n    'datepicker-formats'                   : {\r\n        title    : 'Datepicker with custom formats',\r\n        component: DatepickerFormatsExample\r\n    },\r\n    'datepicker-locale'                    : {\r\n        title    : 'Datepicker with different locale',\r\n        component: DatepickerLocaleExample\r\n    },\r\n    'datepicker-min-max'                   : {\r\n        title    : 'Datepicker with min & max validation',\r\n        component: DatepickerMinMaxExample\r\n    },\r\n    'datepicker-moment'                    : {\r\n        title    : 'Datepicker that uses Moment.js dates',\r\n        component: DatepickerMomentExample\r\n    },\r\n    'datepicker-overview'                  : {\r\n        title    : 'Basic datepicker',\r\n        component: DatepickerOverviewExample\r\n    },\r\n    'datepicker-start-view'                : {\r\n        title    : 'Datepicker start date',\r\n        component: DatepickerStartViewExample\r\n    },\r\n    'datepicker-touch'                     : {\r\n        title    : 'Datepicker touch UI',\r\n        component: DatepickerTouchExample\r\n    },\r\n    'datepicker-value'                     : {\r\n        title    : 'Datepicker selected value',\r\n        component: DatepickerValueExample\r\n    },\r\n    'datepicker-views-selection'           : {\r\n        title    : 'Datepicker emulating a Year and month picker',\r\n        component: DatepickerViewsSelectionExample\r\n    },\r\n    'dialog-content'                       : {\r\n        title          : 'Dialog with header, scrollable content and actions',\r\n        component      : DialogContentExample,\r\n        additionalFiles: ['dialog-content-example-dialog.html'],\r\n        selectorName   : 'DialogContentExample, DialogContentExampleDialog'\r\n    },\r\n    'dialog-data'                          : {\r\n        title          : 'Injecting data when opening a dialog',\r\n        component      : DialogDataExample,\r\n        additionalFiles: ['dialog-data-example-dialog.html'],\r\n        selectorName   : 'DialogDataExample, DialogDataExampleDialog'\r\n    },\r\n    'dialog-elements'                      : {\r\n        title          : 'Dialog elements',\r\n        component      : DialogElementsExample,\r\n        additionalFiles: ['dialog-elements-example-dialog.html'],\r\n        selectorName   : 'DialogElementsExample, DialogElementsExampleDialog'\r\n    },\r\n    'dialog-overview'                      : {\r\n        title          : 'Dialog Overview',\r\n        component      : DialogOverviewExample,\r\n        additionalFiles: ['dialog-overview-example-dialog.html'],\r\n        selectorName   : 'DialogOverviewExample, DialogOverviewExampleDialog'\r\n    },\r\n    'divider-overview'                     : {\r\n        title    : 'Basic divider',\r\n        component: DividerOverviewExample\r\n    },\r\n    'elevation-overview'                   : {\r\n        title    : 'Elevation CSS classes',\r\n        component: ElevationOverviewExample\r\n    },\r\n    'expansion-expand-collapse-all'        : {\r\n        title    : 'Accordion with expand/collapse all toggles',\r\n        component: ExpansionExpandCollapseAllExample\r\n    },\r\n    'expansion-overview'                   : {\r\n        title    : 'Basic expansion panel',\r\n        component: ExpansionOverviewExample\r\n    },\r\n    'expansion-steps'                      : {\r\n        title    : 'Expansion panel as accordion',\r\n        component: ExpansionStepsExample\r\n    },\r\n    'focus-monitor-directives'             : {\r\n        title    : 'Monitoring focus with FocusMonitor',\r\n        component: FocusMonitorDirectivesExample\r\n    },\r\n    'focus-monitor-focus-via'              : {\r\n        title    : 'Focusing with a specific FocusOrigin',\r\n        component: FocusMonitorFocusViaExample\r\n    },\r\n    'focus-monitor-overview'               : {\r\n        title    : 'Monitoring focus with FocusMonitor',\r\n        component: FocusMonitorOverviewExample\r\n    },\r\n    'form-field-appearance'                : {\r\n        title    : 'Form field appearance variants',\r\n        component: FormFieldAppearanceExample\r\n    },\r\n    'form-field-custom-control'            : {\r\n        title          : 'Form field with custom telephone number input control.',\r\n        component      : FormFieldCustomControlExample,\r\n        additionalFiles: ['form-field-custom-control-example.html'],\r\n        selectorName   : 'FormFieldCustomControlExample, MyTelInput'\r\n    },\r\n    'form-field-error'                     : {\r\n        title    : 'Form field with error messages',\r\n        component: FormFieldErrorExample\r\n    },\r\n    'form-field-hint'                      : {\r\n        title    : 'Form field with hints',\r\n        component: FormFieldHintExample\r\n    },\r\n    'form-field-label'                     : {\r\n        title    : 'Form field with label',\r\n        component: FormFieldLabelExample\r\n    },\r\n    'form-field-overview'                  : {\r\n        title    : 'Simple form field',\r\n        component: FormFieldOverviewExample\r\n    },\r\n    'form-field-prefix-suffix'             : {\r\n        title    : 'Form field with prefix & suffix',\r\n        component: FormFieldPrefixSuffixExample\r\n    },\r\n    'form-field-theming'                   : {\r\n        title    : 'Form field theming',\r\n        component: FormFieldThemingExample\r\n    },\r\n    'grid-list-dynamic'                    : {\r\n        title    : 'Dynamic grid-list',\r\n        component: GridListDynamicExample\r\n    },\r\n    'grid-list-overview'                   : {\r\n        title    : 'Basic grid-list',\r\n        component: GridListOverviewExample\r\n    },\r\n    'icon-overview'                        : {\r\n        title    : 'Basic icons',\r\n        component: IconOverviewExample\r\n    },\r\n    'icon-svg'                             : {\r\n        title    : 'SVG icons',\r\n        component: IconSvgExample\r\n    },\r\n    'input-clearable'                      : {\r\n        title    : 'Input with a clear button',\r\n        component: InputClearableExample\r\n    },\r\n    'input-error-state-matcher'            : {\r\n        title    : 'Input with a custom ErrorStateMatcher',\r\n        component: InputErrorStateMatcherExample\r\n    },\r\n    'input-errors'                         : {\r\n        title    : 'Input with error messages',\r\n        component: InputErrorsExample\r\n    },\r\n    'input-form'                           : {\r\n        title    : 'Inputs in a form',\r\n        component: InputFormExample\r\n    },\r\n    'input-hint'                           : {\r\n        title    : 'Input with hints',\r\n        component: InputHintExample\r\n    },\r\n    'input-overview'                       : {\r\n        title    : 'Basic Inputs',\r\n        component: InputOverviewExample\r\n    },\r\n    'input-prefix-suffix'                  : {\r\n        title    : 'Inputs with prefixes and suffixes',\r\n        component: InputPrefixSuffixExample\r\n    },\r\n    'list-overview'                        : {\r\n        title    : 'Basic list',\r\n        component: ListOverviewExample\r\n    },\r\n    'list-sections'                        : {\r\n        title    : 'List with sections',\r\n        component: ListSectionsExample\r\n    },\r\n    'list-selection'                       : {\r\n        title    : 'List with selection',\r\n        component: ListSelectionExample\r\n    },\r\n    'menu-icons'                           : {\r\n        title    : 'Menu with icons',\r\n        component: MenuIconsExample\r\n    },\r\n    'menu-overview'                        : {\r\n        title    : 'Basic menu',\r\n        component: MenuOverviewExample\r\n    },\r\n    'nested-menu'                          : {\r\n        title    : 'Nested menu',\r\n        component: NestedMenuExample\r\n    },\r\n    'paginator-configurable'               : {\r\n        title    : 'Configurable paginator',\r\n        component: PaginatorConfigurableExample\r\n    },\r\n    'paginator-overview'                   : {\r\n        title    : 'Paginator',\r\n        component: PaginatorOverviewExample\r\n    },\r\n    'progress-bar-buffer'                  : {\r\n        title    : 'Buffer progress-bar',\r\n        component: ProgressBarBufferExample\r\n    },\r\n    'progress-bar-configurable'            : {\r\n        title    : 'Configurable progress-bar',\r\n        component: ProgressBarConfigurableExample\r\n    },\r\n    'progress-bar-determinate'             : {\r\n        title    : 'Determinate progress-bar',\r\n        component: ProgressBarDeterminateExample\r\n    },\r\n    'progress-bar-indeterminate'           : {\r\n        title    : 'Indeterminate progress-bar',\r\n        component: ProgressBarIndeterminateExample\r\n    },\r\n    'progress-bar-query'                   : {\r\n        title    : 'Query progress-bar',\r\n        component: ProgressBarQueryExample\r\n    },\r\n    'progress-spinner-configurable'        : {\r\n        title    : 'Configurable progress spinner',\r\n        component: ProgressSpinnerConfigurableExample\r\n    },\r\n    'progress-spinner-overview'            : {\r\n        title    : 'Basic progress-spinner',\r\n        component: ProgressSpinnerOverviewExample\r\n    },\r\n    'radio-ng-model'                       : {\r\n        title    : 'Radios with ngModel',\r\n        component: RadioNgModelExample\r\n    },\r\n    'radio-overview'                       : {\r\n        title    : 'Basic radios',\r\n        component: RadioOverviewExample\r\n    },\r\n    'select-custom-trigger'                : {\r\n        title    : 'Select with custom trigger text',\r\n        component: SelectCustomTriggerExample\r\n    },\r\n    'select-disabled'                      : {\r\n        title    : 'Disabled select',\r\n        component: SelectDisabledExample\r\n    },\r\n    'select-error-state-matcher'           : {\r\n        title    : 'Select with a custom ErrorStateMatcher',\r\n        component: SelectErrorStateMatcherExample\r\n    },\r\n    'select-form'                          : {\r\n        title    : 'Select in a form',\r\n        component: SelectFormExample\r\n    },\r\n    'select-hint-error'                    : {\r\n        title    : 'Select with form field features',\r\n        component: SelectHintErrorExample\r\n    },\r\n    'select-multiple'                      : {\r\n        title    : 'Select with multiple selection',\r\n        component: SelectMultipleExample\r\n    },\r\n    'select-no-ripple'                     : {\r\n        title    : 'Select with no option ripple',\r\n        component: SelectNoRippleExample\r\n    },\r\n    'select-optgroup'                      : {\r\n        title    : 'Select with option groups',\r\n        component: SelectOptgroupExample\r\n    },\r\n    'select-overview'                      : {\r\n        title    : 'Basic select',\r\n        component: SelectOverviewExample\r\n    },\r\n    'select-panel-class'                   : {\r\n        title    : 'Select with custom panel styling',\r\n        component: SelectPanelClassExample\r\n    },\r\n    'select-reset'                         : {\r\n        title    : 'Select with reset option',\r\n        component: SelectResetExample\r\n    },\r\n    'select-value-binding'                 : {\r\n        title    : 'Select with 2-way value binding',\r\n        component: SelectValueBindingExample\r\n    },\r\n    'sidenav-autosize'                     : {\r\n        title    : 'Autosize sidenav',\r\n        component: SidenavAutosizeExample\r\n    },\r\n    'sidenav-backdrop'                     : {\r\n        title    : 'Drawer with explicit backdrop setting',\r\n        component: SidenavBackdropExample\r\n    },\r\n    'sidenav-disable-close'                : {\r\n        title    : 'Sidenav with custom escape and backdrop click behavior',\r\n        component: SidenavDisableCloseExample\r\n    },\r\n    'sidenav-drawer-overview'              : {\r\n        title    : 'Basic drawer',\r\n        component: SidenavDrawerOverviewExample\r\n    },\r\n    'sidenav-fixed'                        : {\r\n        title    : 'Fixed sidenav',\r\n        component: SidenavFixedExample\r\n    },\r\n    'sidenav-mode'                         : {\r\n        title    : 'Sidenav with configurable mode',\r\n        component: SidenavModeExample\r\n    },\r\n    'sidenav-open-close'                   : {\r\n        title    : 'Sidenav open & close behavior',\r\n        component: SidenavOpenCloseExample\r\n    },\r\n    'sidenav-overview'                     : {\r\n        title    : 'Basic sidenav',\r\n        component: SidenavOverviewExample\r\n    },\r\n    'sidenav-position'                     : {\r\n        title    : 'Implicit main content with two sidenavs',\r\n        component: SidenavPositionExample\r\n    },\r\n    'sidenav-responsive'                   : {\r\n        title    : 'Responsive sidenav',\r\n        component: SidenavResponsiveExample\r\n    },\r\n    'slide-toggle-configurable'            : {\r\n        title    : 'Configurable slide-toggle',\r\n        component: SlideToggleConfigurableExample\r\n    },\r\n    'slide-toggle-forms'                   : {\r\n        title    : 'Slide-toggle with forms',\r\n        component: SlideToggleFormsExample\r\n    },\r\n    'slide-toggle-overview'                : {\r\n        title    : 'Basic slide-toggles',\r\n        component: SlideToggleOverviewExample\r\n    },\r\n    'slider-configurable'                  : {\r\n        title    : 'Configurable slider',\r\n        component: SliderConfigurableExample\r\n    },\r\n    'slider-formatting'                    : {\r\n        title    : 'Slider with custom thumb label formatting.',\r\n        component: SliderFormattingExample\r\n    },\r\n    'slider-overview'                      : {\r\n        title    : 'Basic slider',\r\n        component: SliderOverviewExample\r\n    },\r\n    'snack-bar-component'                  : {\r\n        title          : 'Snack-bar with a custom component',\r\n        component      : SnackBarComponentExample,\r\n        additionalFiles: ['snack-bar-component-example-snack.html'],\r\n        selectorName   : 'SnackBarComponentExample, PizzaPartyComponent'\r\n    },\r\n    'snack-bar-overview'                   : {\r\n        title    : 'Basic snack-bar',\r\n        component: SnackBarOverviewExample\r\n    },\r\n    'snack-bar-position'                   : {\r\n        title    : 'Snack-bar with configurable position',\r\n        component: SnackBarPositionExample\r\n    },\r\n    'sort-overview'                        : {\r\n        title    : 'Sorting overview',\r\n        component: SortOverviewExample\r\n    },\r\n    'stepper-editable'                     : {\r\n        title    : 'Stepper with editable steps',\r\n        component: StepperEditableExample\r\n    },\r\n    'stepper-optional'                     : {\r\n        title    : 'Stepper with optional steps',\r\n        component: StepperOptionalExample\r\n    },\r\n    'stepper-overview'                     : {\r\n        title    : 'Stepper overview',\r\n        component: StepperOverviewExample\r\n    },\r\n    'stepper-vertical'                     : {\r\n        title    : 'Stepper vertical',\r\n        component: StepperVerticalExample\r\n    },\r\n    'table-basic'                          : {\r\n        title    : 'Basic table',\r\n        component: TableBasicExample\r\n    },\r\n    'table-basic-flex'                          : {\r\n        title    : 'Basic use of `<mat-table>` (uses display flex)',\r\n        component: TableBasicFlexExample\r\n    },\r\n    'table-dynamic-columns'                          : {\r\n        title    : 'Table dynamically changing the columns displayed',\r\n        component: TableDynamicColumnsExample\r\n    },\r\n    'table-expandable-rows'                          : {\r\n        title    : 'Table with expandable rows',\r\n        component: TableExpandableRowsExample\r\n    },\r\n    'table-filtering'                      : {\r\n        title    : 'Table with filtering',\r\n        component: TableFilteringExample\r\n    },\r\n    'table-footer-row'                     : {\r\n        title    : 'Footer row table',\r\n        component: TableFooterRowExample\r\n    },\r\n    'table-http'                           : {\r\n        title    : 'Table retrieving data through HTTP',\r\n        component: TableHttpExample\r\n    },\r\n    'table-multiple-header-footer'                           : {\r\n        title    : 'Table with multiple header and footer rows',\r\n        component: TableMultipleHeaderFooterExample\r\n    },\r\n    'table-overview'                       : {\r\n        title    : 'Data table with sorting, pagination, and filtering.',\r\n        component: TableOverviewExample\r\n    },\r\n    'table-pagination'                     : {\r\n        title    : 'Table with pagination',\r\n        component: TablePaginationExample\r\n    },\r\n    'table-row-context'                     : {\r\n        title    : 'Table showing each row context properties',\r\n        component: TableRowContextExample\r\n    },\r\n    'table-selection'                      : {\r\n        title    : 'Table with selection',\r\n        component: TableSelectionExample\r\n    },\r\n    'table-sorting'                        : {\r\n        title    : 'Table with sorting',\r\n        component: TableSortingExample\r\n    },\r\n    'table-sticky-columns'                        : {\r\n        title    : 'Table with a sticky columns',\r\n        component: TableStickyColumnsExample\r\n    },\r\n    'table-sticky-complex'                        : {\r\n        title    : 'Tables with toggle-able sticky headers, footers, and columns',\r\n        component: TableStickyComplexExample\r\n    },\r\n    'table-sticky-complex-flex'                        : {\r\n        title    : 'Flex-layout tables with toggle-able sticky headers, footers, and columns',\r\n        component: TableStickyComplexFlexExample\r\n    },\r\n    'table-sticky-footer'                        : {\r\n        title    : 'Table with a sticky footer',\r\n        component: TableStickyFooterExample\r\n    },\r\n    'table-sticky-header'                        : {\r\n        title    : 'Table with sticky header',\r\n        component: TableStickyHeaderExample\r\n    },\r\n    'tab-group-basic'                      : {\r\n        title    : 'Basic use of the tab group',\r\n        component: TabGroupBasicExample\r\n    },\r\n    'tab-group-async'                      : {\r\n        title    : 'Tab group with asynchronously loading tab contents',\r\n        component: TabGroupAsyncExample\r\n    },\r\n    'tab-group-custom-label'               : {\r\n        title    : 'Using tabs with a custom label template',\r\n        component: TabGroupCustomLabelExample\r\n    },\r\n    'tab-group-dynamic'                    : {\r\n        title    : 'Tab group with dynamically changing tabs',\r\n        component: TabGroupDynamicExample\r\n    },\r\n    'tab-group-dynamic-height'             : {\r\n        title    : 'Tab group with dynamic height based on tab contents',\r\n        component: TabGroupDynamicHeightExample\r\n    },\r\n    'tab-group-header-below'               : {\r\n        title    : 'Tab group with the headers on the bottom',\r\n        component: TabGroupHeaderBelowExample\r\n    },\r\n    'tab-group-lazy-loaded'                : {\r\n        title    : 'Tab group where the tab content is loaded lazily (when activated)',\r\n        component: TabGroupLazyLoadedExample\r\n    },\r\n    'tab-group-stretched'                  : {\r\n        title    : 'Tab group with stretched labels',\r\n        component: TabGroupStretchedExample\r\n    },\r\n    'tab-group-theme'                      : {\r\n        title    : 'Customizing the theme options on the tab group',\r\n        component: TabGroupThemeExample\r\n    },\r\n    'tab-nav-bar-basic'                    : {\r\n        title    : 'Basic use of the tab nav bar',\r\n        component: TabNavBarBasicExample\r\n    },\r\n    'text-field-autofill-directive'        : {\r\n        title    : 'Monitoring autofill state with cdkAutofill',\r\n        component: TextFieldAutofillDirectiveExample\r\n    },\r\n    'text-field-autofill-monitor'          : {\r\n        title    : 'Monitoring autofill state with AutofillMonitor',\r\n        component: TextFieldAutofillMonitorExample\r\n    },\r\n    'text-field-autosize-textarea'         : {\r\n        title    : 'Auto-resizing textarea',\r\n        component: TextFieldAutosizeTextareaExample\r\n    },\r\n    'toolbar-multirow'                     : {\r\n        title    : 'Multi-row toolbar',\r\n        component: ToolbarMultirowExample\r\n    },\r\n    'toolbar-overview'                     : {\r\n        title    : 'Basic toolbar',\r\n        component: ToolbarOverviewExample\r\n    },\r\n    'tooltip-auto-hide'                        : {\r\n        title    : 'Tooltip that demonstrates auto-hiding when it clips out of its scrolling container',\r\n        component: TooltipAutoHideExample\r\n    },\r\n    'tooltip-custom-class'                        : {\r\n        title    : 'Tooltip that can have a custom class applied',\r\n        component: TooltipCustomClassExample\r\n    },\r\n    'tooltip-delay'                        : {\r\n        title    : 'Tooltip with a show and hide delay',\r\n        component: TooltipDelayExample\r\n    },\r\n    'tooltip-disabled'                        : {\r\n        title    : 'Tooltip that can be disabled',\r\n        component: TooltipDisabledExample\r\n    },\r\n    'tooltip-manual'                       : {\r\n        title    : 'Tooltip that can be manually shown/hidden',\r\n        component: TooltipManualExample\r\n    },\r\n    'tooltip-message'                       : {\r\n        title    : 'Tooltip with a changing message',\r\n        component: TooltipMessageExample\r\n    },\r\n    'tooltip-modified-defaults'            : {\r\n        title    : 'Tooltip with a show and hide delay',\r\n        component: TooltipModifiedDefaultsExample\r\n    },\r\n    'tooltip-overview'                     : {\r\n        title    : 'Basic tooltip',\r\n        component: TooltipOverviewExample\r\n    },\r\n    'tooltip-position'                     : {\r\n        title    : 'Tooltip with custom position',\r\n        component: TooltipPositionExample\r\n    },\r\n    'tree-checklist'                       : {\r\n        title    : 'Tree with checkboxes',\r\n        component: TreeChecklistExample\r\n    },\r\n    'tree-dynamic'                         : {\r\n        title    : 'Tree with dynamic data',\r\n        component: TreeDynamicExample\r\n    },\r\n    'tree-flat-overview'                   : {\r\n        title    : 'Tree with flat nodes',\r\n        component: TreeFlatOverviewExample\r\n    },\r\n    'tree-loadmore'                        : {\r\n        title    : 'Tree with partially loaded data',\r\n        component: TreeLoadmoreExample\r\n    },\r\n    'tree-nested-overview'                 : {\r\n        title    : 'Tree with nested nodes',\r\n        component: TreeNestedOverviewExample\r\n    }\r\n};\r\n\r\nexport const EXAMPLE_LIST = [\r\n    AutocompleteAutoActiveFirstOptionExample,\r\n    AutocompleteDisplayExample,\r\n    AutocompleteFilterExample,\r\n    AutocompleteOptgroupExample,\r\n    AutocompleteOverviewExample,\r\n    AutocompleteSimpleExample,\r\n    BadgeOverviewExample,\r\n    BottomSheetOverviewExample, BottomSheetOverviewExampleSheet,\r\n    ButtonOverviewExample,\r\n    ButtonToggleExclusiveExample,\r\n    ButtonToggleOverviewExample,\r\n    ButtonTypesExample,\r\n    CardFancyExample,\r\n    CardOverviewExample,\r\n    CdkTableBasicExample,\r\n    CdkTableBasicFlexExample,\r\n    CdkTreeFlatExample,\r\n    CdkTreeNestedExample,\r\n    CheckboxConfigurableExample,\r\n    CheckboxOverviewExample,\r\n    ChipsAutocompleteExample,\r\n    ChipsInputExample,\r\n    ChipsOverviewExample,\r\n    ChipsStackedExample,\r\n    DatepickerApiExample,\r\n    DatepickerColorExample,\r\n    DatepickerCustomHeaderExample, ExampleHeader,\r\n    DatepickerCustomIconExample,\r\n    DatepickerDisabledExample,\r\n    DatepickerEventsExample,\r\n    DatepickerFilterExample,\r\n    DatepickerFormatsExample,\r\n    DatepickerLocaleExample,\r\n    DatepickerMinMaxExample,\r\n    DatepickerMomentExample,\r\n    DatepickerOverviewExample,\r\n    DatepickerStartViewExample,\r\n    DatepickerTouchExample,\r\n    DatepickerValueExample,\r\n    DatepickerViewsSelectionExample,\r\n    DialogContentExample, DialogContentExampleDialog,\r\n    DialogDataExample, DialogDataExampleDialog,\r\n    DialogElementsExample, DialogElementsExampleDialog,\r\n    DialogOverviewExample, DialogOverviewExampleDialog,\r\n    DividerOverviewExample,\r\n    ElevationOverviewExample,\r\n    ExpansionExpandCollapseAllExample,\r\n    ExpansionOverviewExample,\r\n    ExpansionStepsExample,\r\n    FocusMonitorDirectivesExample,\r\n    FocusMonitorFocusViaExample,\r\n    FocusMonitorOverviewExample,\r\n    FormFieldAppearanceExample,\r\n    FormFieldCustomControlExample, MyTelInput,\r\n    FormFieldErrorExample,\r\n    FormFieldHintExample,\r\n    FormFieldLabelExample,\r\n    FormFieldOverviewExample,\r\n    FormFieldPrefixSuffixExample,\r\n    FormFieldThemingExample,\r\n    GridListDynamicExample,\r\n    GridListOverviewExample,\r\n    IconOverviewExample,\r\n    IconSvgExample,\r\n    InputClearableExample,\r\n    InputErrorStateMatcherExample,\r\n    InputErrorsExample,\r\n    InputFormExample,\r\n    InputHintExample,\r\n    InputOverviewExample,\r\n    InputPrefixSuffixExample,\r\n    ListOverviewExample,\r\n    ListSectionsExample,\r\n    ListSelectionExample,\r\n    MenuIconsExample,\r\n    MenuOverviewExample,\r\n    NestedMenuExample,\r\n    PaginatorConfigurableExample,\r\n    PaginatorOverviewExample,\r\n    ProgressBarBufferExample,\r\n    ProgressBarConfigurableExample,\r\n    ProgressBarDeterminateExample,\r\n    ProgressBarIndeterminateExample,\r\n    ProgressBarQueryExample,\r\n    ProgressSpinnerConfigurableExample,\r\n    ProgressSpinnerOverviewExample,\r\n    RadioNgModelExample,\r\n    RadioOverviewExample,\r\n    SelectCustomTriggerExample,\r\n    SelectDisabledExample,\r\n    SelectErrorStateMatcherExample,\r\n    SelectFormExample,\r\n    SelectHintErrorExample,\r\n    SelectMultipleExample,\r\n    SelectNoRippleExample,\r\n    SelectOptgroupExample,\r\n    SelectOverviewExample,\r\n    SelectPanelClassExample,\r\n    SelectResetExample,\r\n    SelectValueBindingExample,\r\n    SidenavAutosizeExample,\r\n    SidenavBackdropExample,\r\n    SidenavDisableCloseExample,\r\n    SidenavDrawerOverviewExample,\r\n    SidenavFixedExample,\r\n    SidenavModeExample,\r\n    SidenavOpenCloseExample,\r\n    SidenavOverviewExample,\r\n    SidenavPositionExample,\r\n    SidenavResponsiveExample,\r\n    SlideToggleConfigurableExample,\r\n    SlideToggleFormsExample,\r\n    SlideToggleOverviewExample,\r\n    SliderConfigurableExample,\r\n    SliderFormattingExample,\r\n    SliderOverviewExample,\r\n    SnackBarComponentExample, PizzaPartyComponent,\r\n    SnackBarOverviewExample,\r\n    SnackBarPositionExample,\r\n    SortOverviewExample,\r\n    StepperEditableExample,\r\n    StepperOptionalExample,\r\n    StepperOverviewExample,\r\n    StepperVerticalExample,\r\n    TableBasicExample,\r\n    TableBasicFlexExample,\r\n    TableDynamicColumnsExample,\r\n    TableExpandableRowsExample,\r\n    TableFilteringExample,\r\n    TableFooterRowExample,\r\n    TableHttpExample,\r\n    TableMultipleHeaderFooterExample,\r\n    TableOverviewExample,\r\n    TablePaginationExample,\r\n    TableRowContextExample,\r\n    TableSelectionExample,\r\n    TableSortingExample,\r\n    TableStickyColumnsExample,\r\n    TableStickyComplexExample,\r\n    TableStickyComplexFlexExample,\r\n    TableStickyFooterExample,\r\n    TableStickyHeaderExample,\r\n    TabGroupBasicExample,\r\n    TabGroupAsyncExample,\r\n    TabGroupCustomLabelExample,\r\n    TabGroupDynamicExample,\r\n    TabGroupDynamicHeightExample,\r\n    TabGroupHeaderBelowExample,\r\n    TabGroupLazyLoadedExample,\r\n    TabGroupStretchedExample,\r\n    TabGroupStretchedExample,\r\n    TabGroupThemeExample,\r\n    TabNavBarBasicExample,\r\n    TextFieldAutofillDirectiveExample,\r\n    TextFieldAutofillMonitorExample,\r\n    TextFieldAutosizeTextareaExample,\r\n    ToolbarMultirowExample,\r\n    ToolbarOverviewExample,\r\n    TooltipAutoHideExample,\r\n    TooltipCustomClassExample,\r\n    TooltipDelayExample,\r\n    TooltipDisabledExample,\r\n    TooltipManualExample,\r\n    TooltipMessageExample,\r\n    TooltipModifiedDefaultsExample,\r\n    TooltipOverviewExample,\r\n    TooltipPositionExample,\r\n    TreeChecklistExample,\r\n    TreeDynamicExample,\r\n    TreeFlatOverviewExample,\r\n    TreeLoadmoreExample,\r\n    TreeNestedOverviewExample\r\n];\r\n","module.exports = \"<div class=\\\"example-viewer-wrapper mat-white-bg mat-elevation-z2\\\">\\r\\n\\r\\n    <div class=\\\"example-viewer-header\\\">\\r\\n\\r\\n        <div class=\\\"example-viewer-title\\\">{{exampleData?.title}}</div>\\r\\n\\r\\n        <button mat-icon-button type=\\\"button\\\" (click)=\\\"toggleSourceView()\\\"\\r\\n                [matTooltip]=\\\"'View source'\\\">\\r\\n            <mat-icon>\\r\\n                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" fit=\\\"\\\"\\r\\n                     preserveAspectRatio=\\\"xMidYMid meet\\\" focusable=\\\"false\\\">\\r\\n                    <path fill=\\\"none\\\" d=\\\"M0 0h24v24H0V0z\\\"></path>\\r\\n                    <path\\r\\n                        d=\\\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\\\"></path>\\r\\n                </svg>\\r\\n            </mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"example-viewer-source\\\" [fxShow]=\\\"showSource\\\">\\r\\n\\r\\n        <mat-tab-group [(selectedIndex)]=\\\"selectedIndex\\\">\\r\\n            <mat-tab label=\\\"HTML\\\"></mat-tab>\\r\\n            <mat-tab label=\\\"TS\\\"></mat-tab>\\r\\n            <mat-tab label=\\\"CSS\\\"></mat-tab>\\r\\n        </mat-tab-group>\\r\\n        <div class=\\\"tab-content\\\">\\r\\n            <section class=\\\"tab\\\" *ngIf=\\\"selectedIndex === 0\\\"\\r\\n                     [@animate]=\\\"{value:'*',params:{opacity:'0',duration:'200ms'}}\\\">\\r\\n                <button mat-icon-button type=\\\"button\\\" class=\\\"example-source-copy\\\"\\r\\n                        title=\\\"Copy example source\\\" aria-label=\\\"Copy example source to clipboard\\\"\\r\\n                        (click)=\\\"copySource(htmlView.el.nativeElement.innerText)\\\">\\r\\n                    <mat-icon>content_copy</mat-icon>\\r\\n                </button>\\r\\n                <fuse-highlight lang=\\\"html\\\"\\r\\n                                [path]=\\\"'/assets/angular-material-examples/'+example+'/'+example+'-example.html'\\\">\\r\\n                </fuse-highlight>\\r\\n            </section>\\r\\n\\r\\n            <section class=\\\"tab\\\" *ngIf=\\\"selectedIndex === 1\\\"\\r\\n                     [@animate]=\\\"{value:'*',params:{opacity:'0',duration:'200ms'}}\\\">\\r\\n                <button mat-icon-button type=\\\"button\\\" class=\\\"example-source-copy\\\"\\r\\n                        title=\\\"Copy example source\\\" aria-label=\\\"Copy example source to clipboard\\\"\\r\\n                        (click)=\\\"copySource(tsView.el.nativeElement.innerText)\\\">\\r\\n                    <mat-icon>content_copy</mat-icon>\\r\\n                </button>\\r\\n                <fuse-highlight lang=\\\"typescript\\\"\\r\\n                                [path]=\\\"'/assets/angular-material-examples/'+example+'/'+example+'-example.ts'\\\">\\r\\n                </fuse-highlight>\\r\\n            </section>\\r\\n\\r\\n            <section class=\\\"tab\\\" *ngIf=\\\"selectedIndex === 2\\\"\\r\\n                     [@animate]=\\\"{value:'*',params:{opacity:'0',duration:'200ms'}}\\\">\\r\\n                <button mat-icon-button type=\\\"button\\\" class=\\\"example-source-copy\\\"\\r\\n                        title=\\\"Copy example source\\\" aria-label=\\\"Copy example source to clipboard\\\"\\r\\n                        (click)=\\\"copySource(cssView.el.nativeElement.innerText)\\\">\\r\\n                    <mat-icon>content_copy</mat-icon>\\r\\n                </button>\\r\\n                <fuse-highlight lang=\\\"css\\\"\\r\\n                                [path]=\\\"'/assets/angular-material-examples/'+example+'/'+example+'-example.css'\\\">\\r\\n                </fuse-highlight>\\r\\n            </section>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"example-viewer-body\\\" [fxHide]=\\\"showSource\\\">\\r\\n        <!--<ng-template [cdkPortalOutlet]=\\\"selectedPortal\\\"></ng-template>-->\\r\\n        <!--<ng-template [cdkPortalOutlet]=\\\"selectedPortal\\\"></ng-template>-->\\r\\n        <div #previewContainer></div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nexample-viewer {\\n  display: block;\\n  padding: 24px 0; }\\nexample-viewer .example-viewer-wrapper {\\n    border: 1px solid rgba(0, 0, 0, 0.03);\\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12);\\n    margin: 4px; }\\nexample-viewer .example-viewer-wrapper h3 {\\n      margin-top: 10px; }\\nexample-viewer .example-viewer-header {\\n    align-content: center;\\n    align-items: center;\\n    display: flex;\\n    justify-content: center;\\n    padding: 8px 20px;\\n    color: rgba(0, 0, 0, 0.54);\\n    background: rgba(0, 0, 0, 0.03);\\n    flex: 1 1 auto; }\\nexample-viewer .example-viewer-header .example-viewer-title {\\n      flex: 1 1 auto; }\\nexample-viewer .example-viewer-source .tab-content {\\n    background: #263238; }\\nexample-viewer .example-viewer-source .tab-content .tab {\\n      position: relative; }\\nexample-viewer .example-viewer-source .tab-content .tab .example-source-copy {\\n        position: absolute;\\n        top: 8px;\\n        display: none;\\n        right: 8px; }\\nexample-viewer .example-viewer-source .tab-content .tab .example-source-copy mat-icon {\\n          color: rgba(255, 255, 255, 0.87); }\\nexample-viewer .example-viewer-source .tab-content .tab:hover .example-source-copy {\\n        display: inline-block; }\\nexample-viewer .example-viewer-source .tab-content .tab .example-source {\\n        display: flex;\\n        padding: 0;\\n        margin: 0;\\n        min-height: 150px;\\n        border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\nexample-viewer .example-viewer-source .tab-content .tab .example-source > pre {\\n          width: 100%; }\\nexample-viewer .example-viewer-body {\\n    padding: 24px; }\\n\"","import { AfterViewInit, Component, ComponentFactoryResolver, ComponentRef, Input, OnDestroy, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport 'prismjs/components/prism-scss';\r\nimport 'prismjs/components/prism-typescript';\r\n\r\nimport { fuseAnimations } from '@fuse/animations/index';\r\nimport { FuseCopierService } from '@fuse/services/copier.service';\r\n\r\nimport { EXAMPLE_COMPONENTS } from 'app/main/angular-material-elements/example-components';\r\n\r\nexport interface LiveExample\r\n{\r\n    title: string;\r\n    component: any;\r\n    additionalFiles?: string[];\r\n    selectorName?: string;\r\n}\r\n\r\n@Component({\r\n    selector     : 'example-viewer',\r\n    templateUrl  : './example-viewer.html',\r\n    styleUrls    : ['./example-viewer.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ExampleViewerComponent implements AfterViewInit, OnDestroy\r\n{\r\n    _example: string;\r\n    exampleData: LiveExample;\r\n    showSource: boolean;\r\n    previewRef: ComponentRef<any>;\r\n    selectedIndex: number;\r\n\r\n    @ViewChild('previewContainer', {read: ViewContainerRef})\r\n    private _previewContainer: ViewContainerRef;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {MatSnackBar} _matSnackBar\r\n     * @param {FuseCopierService} _fuseCopierService\r\n     * @param {ComponentFactoryResolver} _componentFactoryResolver\r\n     */\r\n    constructor(\r\n        private _matSnackBar: MatSnackBar,\r\n        private _fuseCopierService: FuseCopierService,\r\n        private _componentFactoryResolver: ComponentFactoryResolver\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.selectedIndex = 0;\r\n        this.showSource = false;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Container\r\n     *\r\n     * @param {ViewContainerRef} value\r\n     */\r\n    set container(value: ViewContainerRef)\r\n    {\r\n        this._previewContainer = value;\r\n    }\r\n\r\n    get container(): ViewContainerRef\r\n    {\r\n        return this._previewContainer;\r\n    }\r\n\r\n    /**\r\n     * Example\r\n     *\r\n     * @param {string} example\r\n     */\r\n    @Input()\r\n    set example(example: string)\r\n    {\r\n        if ( example && EXAMPLE_COMPONENTS[example] )\r\n        {\r\n            this._example = example;\r\n            this.exampleData = EXAMPLE_COMPONENTS[example];\r\n        }\r\n        else\r\n        {\r\n            console.log('MISSING EXAMPLE: ', example);\r\n        }\r\n    }\r\n\r\n    get example(): string\r\n    {\r\n        return this._example;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * After view init\r\n     */\r\n    ngAfterViewInit(): void\r\n    {\r\n        setTimeout(() => {\r\n            const cmpFactory = this._componentFactoryResolver.resolveComponentFactory(this.exampleData.component);\r\n            this.previewRef = this._previewContainer.createComponent(cmpFactory);\r\n        }, 0);\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        if ( this.previewRef )\r\n        {\r\n            this.previewRef.destroy();\r\n        }\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Toggle source view\r\n     */\r\n    toggleSourceView(): void\r\n    {\r\n        this.showSource = !this.showSource;\r\n    }\r\n\r\n    /**\r\n     * Copy the source\r\n     *\r\n     * @param {string} text\r\n     */\r\n    copySource(text: string): void\r\n    {\r\n        if ( this._fuseCopierService.copyText(text) )\r\n        {\r\n            this._matSnackBar.open('Code copied', '', {duration: 2500});\r\n        }\r\n        else\r\n        {\r\n            this._matSnackBar.open('Copy failed. Please try again!', '', {duration: 2500});\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport {\r\n    MatAutocompleteModule, MatBadgeModule, MatBottomSheetModule, MatButtonModule,\r\n    MatButtonToggleModule, MatCardModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule,\r\n    MatDialogModule, MatDividerModule, MatExpansionModule, MatFormFieldModule, MatGridListModule,\r\n    MatIconModule, MatInputModule, MatListModule, MatMenuModule, MatPaginatorModule,\r\n    MatProgressBarModule, MatProgressSpinnerModule, MatRadioModule, MatRippleModule, MatSelectModule,\r\n    MatSidenavModule, MatSliderModule, MatSlideToggleModule, MatSnackBarModule, MatSortModule,\r\n    MatStepperModule, MatTableModule, MatTabsModule, MatToolbarModule, MatTooltipModule, MatTreeModule\r\n} from '@angular/material';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatMomentDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSlideToggleModule,\r\n        MatSliderModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatStepperModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule\r\n    ],\r\n    exports: [\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatMomentDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSlideToggleModule,\r\n        MatSliderModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatStepperModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule\r\n    ]\r\n})\r\nexport class MaterialModule\r\n{\r\n}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n    <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\r\\n      <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">\\r\\n        {{ option }}\\r\\n      </mat-option>\\r\\n    </mat-autocomplete>\\r\\n  </mat-form-field>\\r\\n</form>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\n/**\r\n * @title Highlight the first autocomplete option\r\n */\r\n@Component({\r\n  selector: 'autocomplete-auto-active-first-option-example',\r\n  templateUrl: 'autocomplete-auto-active-first-option-example.html',\r\n  styleUrls: ['autocomplete-auto-active-first-option-example.css']\r\n})\r\nexport class AutocompleteAutoActiveFirstOptionExample implements OnInit {\r\n  myControl: FormControl = new FormControl();\r\n  options = ['One', 'Two', 'Three'];\r\n  filteredOptions: Observable<string[]>;\r\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(val => this.filter(val))\r\n    );\r\n  }\r\n\r\n  filter(val: string): string[] {\r\n    return this.options.filter(option => option.toLowerCase().indexOf(val.toLowerCase()) === 0);\r\n  }\r\n\r\n}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input type=\\\"text\\\" placeholder=\\\"Assignee\\\" aria-label=\\\"Assignee\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\r\\n      <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">\\r\\n        {{ option.name }}\\r\\n      </mat-option>\\r\\n    </mat-autocomplete>\\r\\n  </mat-form-field>\\r\\n</form>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\nexport class User {\r\n  constructor(public name: string) { }\r\n}\r\n\r\n/**\r\n * @title Display value autocomplete\r\n */\r\n@Component({\r\n  selector: 'autocomplete-display-example',\r\n  templateUrl: 'autocomplete-display-example.html',\r\n  styleUrls: ['autocomplete-display-example.css']\r\n})\r\nexport class AutocompleteDisplayExample implements OnInit {\r\n\r\n  myControl = new FormControl();\r\n\r\n  options = [\r\n    new User('Mary'),\r\n    new User('Shelley'),\r\n    new User('Igor')\r\n  ];\r\n\r\n  filteredOptions: Observable<User[]>;\r\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.myControl.valueChanges\r\n      .pipe(\r\n        startWith<string | User>(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this.filter(name) : this.options.slice())\r\n      );\r\n  }\r\n\r\n  filter(name: string): User[] {\r\n    return this.options.filter(option =>\r\n      option.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n\r\n  displayFn(user?: User): string | undefined {\r\n    return user ? user.name : undefined;\r\n  }\r\n\r\n}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n      <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">\\r\\n        {{ option }}\\r\\n      </mat-option>\\r\\n    </mat-autocomplete>\\r\\n  </mat-form-field>\\r\\n</form>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\n/**\r\n * @title Filter autocomplete\r\n */\r\n@Component({\r\n  selector: 'autocomplete-filter-example',\r\n  templateUrl: 'autocomplete-filter-example.html',\r\n  styleUrls: ['autocomplete-filter-example.css']\r\n})\r\nexport class AutocompleteFilterExample implements OnInit {\r\n\r\n  myControl: FormControl = new FormControl();\r\n\r\n  options = [\r\n    'One',\r\n    'Two',\r\n    'Three'\r\n  ];\r\n\r\n  filteredOptions: Observable<string[]>;\r\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.myControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(val => this.filter(val))\r\n      );\r\n  }\r\n\r\n  filter(val: string): string[] {\r\n    return this.options.filter(option =>\r\n      option.toLowerCase().includes(val.toLowerCase()));\r\n  }\r\n\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<form [formGroup]=\\\"stateForm\\\">\\r\\n  <mat-form-field>\\r\\n    <input type=\\\"text\\\" matInput placeholder=\\\"States Group\\\" formControlName=\\\"stateGroup\\\" required [matAutocomplete]=\\\"autoGroup\\\"/>\\r\\n      <mat-autocomplete #autoGroup=\\\"matAutocomplete\\\">\\r\\n        <mat-optgroup *ngFor=\\\"let group of stateGroupOptions | async\\\" [label]=\\\"group.letter\\\">\\r\\n          <mat-option *ngFor=\\\"let name of group.names\\\" [value]=\\\"name\\\">\\r\\n            {{ name }}\\r\\n          </mat-option>\\r\\n      </mat-optgroup>\\r\\n    </mat-autocomplete>\\r\\n  </mat-form-field> \\r\\n</form>  \\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormGroup, FormBuilder} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {startWith, map} from 'rxjs/operators';\r\n\r\nexport interface StateGroup {\r\n  letter: string;\r\n  names: string[];\r\n}\r\n\r\n/**\r\n * @title Option groups autocomplete\r\n */\r\n@Component({\r\n  templateUrl: './autocomplete-optgroup-example.html',\r\n  styleUrls: ['./autocomplete-optgroup-example.css'],\r\n})\r\n\r\nexport class AutocompleteOptgroupExample implements OnInit {\r\n  stateForm: FormGroup = this.fb.group({\r\n    stateGroup: '',\r\n  });\r\n\r\n  stateGroups: StateGroup[] = [{\r\n    letter: 'A',\r\n    names: ['Alabama', 'Alaska', 'Arizona', 'Arkansas']\r\n  }, {\r\n    letter: 'C',\r\n    names: ['California', 'Colorado', 'Connecticut']\r\n  }, {\r\n    letter: 'D',\r\n    names: ['Delaware']\r\n  }, {\r\n    letter: 'F',\r\n    names: ['Florida']\r\n  }, {\r\n    letter: 'G',\r\n    names: ['Georgia']\r\n  }, {\r\n    letter: 'H',\r\n    names: ['Hawaii']\r\n  }, {\r\n    letter: 'I',\r\n    names: ['Idaho', 'Illinois', 'Indiana', 'Iowa']\r\n  }, {\r\n    letter: 'K',\r\n    names: ['Kansas', 'Kentucky']\r\n  }, {\r\n    letter: 'L',\r\n    names: ['Louisiana']\r\n  }, {\r\n    letter: 'M',\r\n    names: ['Maine', 'Maryland', 'Massachusetts', 'Michigan',\r\n      'Minnesota', 'Mississippi', 'Missouri', 'Montana']\r\n  }, {\r\n    letter: 'N',\r\n    names: ['Nebraska', 'Nevada', 'New Hampshire', 'New Jersey',\r\n      'New Mexico', 'New York', 'North Carolina', 'North Dakota']\r\n  }, {\r\n    letter: 'O',\r\n    names: ['Ohio', 'Oklahoma', 'Oregon']\r\n  }, {\r\n    letter: 'P',\r\n    names: ['Pennsylvania']\r\n  }, {\r\n    letter: 'R',\r\n    names: ['Rhode Island']\r\n  }, {\r\n    letter: 'S',\r\n    names: ['South Carolina', 'South Dakota']\r\n  }, {\r\n    letter: 'T',\r\n    names: ['Tennessee', 'Texas']\r\n  }, {\r\n    letter: 'U',\r\n    names: ['Utah']\r\n  }, {\r\n    letter: 'V',\r\n    names: ['Vermont', 'Virginia']\r\n  }, {\r\n    letter: 'W',\r\n    names: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\r\n  }];\r\n\r\n  stateGroupOptions: Observable<StateGroup[]>;\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.stateGroupOptions = this.stateForm.get('stateGroup')!.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(val => this.filterGroup(val))\r\n      );\r\n  }\r\n\r\n  filterGroup(val: string): StateGroup[] {\r\n    if (val) {\r\n      return this.stateGroups\r\n        .map(group => ({ letter: group.letter, names: this._filter(group.names, val) }))\r\n        .filter(group => group.names.length > 0);\r\n    }\r\n\r\n    return this.stateGroups;\r\n  }\r\n\r\n  private _filter(opt: string[], val: string) {\r\n    const filterValue = val.toLowerCase();\r\n    return opt.filter(item => item.toLowerCase().startsWith(filterValue));\r\n  }\r\n}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"State\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"stateCtrl\\\">\\r\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n      <mat-option *ngFor=\\\"let state of filteredStates | async\\\" [value]=\\\"state.name\\\">\\r\\n        <img style=\\\"vertical-align:middle;\\\" aria-hidden src=\\\"{{state.flag}}\\\" height=\\\"25\\\" />\\r\\n        <span>{{ state.name }}</span> |\\r\\n        <small>Population: {{state.population}}</small>\\r\\n      </mat-option>\\r\\n    </mat-autocomplete>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <br />\\r\\n\\r\\n  <mat-slide-toggle\\r\\n    [checked]=\\\"stateCtrl.disabled\\\"\\r\\n    (change)=\\\"stateCtrl.disabled ? stateCtrl.enable() : stateCtrl.disable()\\\">\\r\\n    Disable Input?\\r\\n  </mat-slide-toggle>\\r\\n</form>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\nexport class State {\r\n  constructor(public name: string, public population: string, public flag: string) { }\r\n}\r\n\r\n/**\r\n * @title Autocomplete overview\r\n */\r\n@Component({\r\n  selector: 'autocomplete-overview-example',\r\n  templateUrl: 'autocomplete-overview-example.html',\r\n  styleUrls: ['autocomplete-overview-example.css']\r\n})\r\nexport class AutocompleteOverviewExample {\r\n  stateCtrl: FormControl;\r\n  filteredStates: Observable<any[]>;\r\n\r\n  states: State[] = [\r\n    {\r\n      name: 'Arkansas',\r\n      population: '2.978M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\r\n    },\r\n    {\r\n      name: 'California',\r\n      population: '39.14M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\r\n    },\r\n    {\r\n      name: 'Florida',\r\n      population: '20.27M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\r\n    },\r\n    {\r\n      name: 'Texas',\r\n      population: '27.47M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    this.stateCtrl = new FormControl();\r\n    this.filteredStates = this.stateCtrl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(state => state ? this.filterStates(state) : this.states.slice())\r\n      );\r\n  }\r\n\r\n  filterStates(name: string) {\r\n    return this.states.filter(state =>\r\n      state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n\r\n}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n      <mat-option *ngFor=\\\"let option of options\\\" [value]=\\\"option\\\">\\r\\n        {{ option }}\\r\\n      </mat-option>\\r\\n    </mat-autocomplete>\\r\\n  </mat-form-field>\\r\\n</form>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n/**\r\n * @title Simple autocomplete\r\n */\r\n@Component({\r\n  selector: 'autocomplete-simple-example',\r\n  templateUrl: 'autocomplete-simple-example.html',\r\n  styleUrls: ['autocomplete-simple-example.css']\r\n})\r\nexport class AutocompleteSimpleExample {\r\n\r\n  myControl: FormControl = new FormControl();\r\n\r\n  options = [\r\n    'One',\r\n    'Two',\r\n    'Three'\r\n   ];\r\n\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<p>\\r\\n  <span matBadge=\\\"4\\\" matBadgeOverlap=\\\"false\\\">Text with a badge</span>\\r\\n</p>\\r\\n\\r\\n<p>\\r\\n  Button with a badge on the left\\r\\n  <button mat-raised-button color=\\\"primary\\\"\\r\\n      matBadge=\\\"8\\\" matBadgePosition=\\\"before\\\" matBadgeColor=\\\"accent\\\">\\r\\n    Action\\r\\n  </button>\\r\\n</p>\\r\\n\\r\\n<p>\\r\\n  Icon with a badge\\r\\n  <mat-icon matBadge=\\\"15\\\" matBadgeColor=\\\"warn\\\">home</mat-icon>\\r\\n</p>\\r\\n\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n\r\n/**\r\n * @title Badge overview\r\n */\r\n@Component({\r\n  selector: 'badge-overview-example',\r\n  templateUrl: 'badge-overview-example.html',\r\n  styleUrls: ['badge-overview-example.css']\r\n})\r\nexport class BadgeOverviewExample { }\r\n","module.exports = \"<mat-nav-list>\\r\\n  <a href=\\\"https://keep.google.com/\\\" mat-list-item (click)=\\\"openLink($event)\\\">\\r\\n    <span mat-line>Google Keep</span>\\r\\n    <span mat-line>Add to a note</span>\\r\\n  </a>\\r\\n\\r\\n  <a href=\\\"https://docs.google.com/\\\" mat-list-item (click)=\\\"openLink($event)\\\">\\r\\n    <span mat-line>Google Docs</span>\\r\\n    <span mat-line>Embed in a document</span>\\r\\n  </a>\\r\\n\\r\\n  <a href=\\\"https://plus.google.com/\\\" mat-list-item (click)=\\\"openLink($event)\\\">\\r\\n    <span mat-line>Google Plus</span>\\r\\n    <span mat-line>Share with your friends</span>\\r\\n  </a>\\r\\n\\r\\n  <a href=\\\"https://hangouts.google.com/\\\" mat-list-item (click)=\\\"openLink($event)\\\">\\r\\n    <span mat-line>Google Hangouts</span>\\r\\n    <span mat-line>Show to your coworkers</span>\\r\\n  </a>\\r\\n</mat-nav-list>\\r\\n\"","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<p>You have receive a file called \\\"cat-picture.jpeg\\\".</p>\\r\\n\\r\\n<button mat-raised-button (click)=\\\"openBottomSheet()\\\">Open file</button>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MatBottomSheet, MatBottomSheetRef} from '@angular/material';\r\n\r\n/**\r\n * @title Bottom Sheet Overview\r\n */\r\n@Component({\r\n  selector: 'bottom-sheet-overview-example',\r\n  templateUrl: 'bottom-sheet-overview-example.html',\r\n  styleUrls: ['bottom-sheet-overview-example.css'],\r\n})\r\nexport class BottomSheetOverviewExample {\r\n  constructor(private bottomSheet: MatBottomSheet) {}\r\n\r\n  openBottomSheet(): void {\r\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'bottom-sheet-overview-example-sheet',\r\n  templateUrl: 'bottom-sheet-overview-example-sheet.html',\r\n})\r\nexport class BottomSheetOverviewExampleSheet {\r\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\r\n\r\n  openLink(event: MouseEvent): void {\r\n    this.bottomSheetRef.dismiss();\r\n    event.preventDefault();\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-button>Click me!</button>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic buttons\r\n */\r\n@Component({\r\n  selector: 'button-overview-example',\r\n  templateUrl: 'button-overview-example.html',\r\n  styleUrls: ['button-overview-example.css'],\r\n})\r\nexport class ButtonOverviewExample {}\r\n","module.exports = \".example-selected-value {\\r\\n  margin: 15px 0;\\r\\n}\\r\\n\"","module.exports = \"<mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\">\\r\\n  <mat-button-toggle value=\\\"left\\\">\\r\\n    <mat-icon>format_align_left</mat-icon>\\r\\n  </mat-button-toggle>\\r\\n  <mat-button-toggle value=\\\"center\\\">\\r\\n    <mat-icon>format_align_center</mat-icon>\\r\\n  </mat-button-toggle>\\r\\n  <mat-button-toggle value=\\\"right\\\">\\r\\n    <mat-icon>format_align_right</mat-icon>\\r\\n  </mat-button-toggle>\\r\\n  <mat-button-toggle value=\\\"justify\\\" disabled>\\r\\n    <mat-icon>format_align_justify</mat-icon>\\r\\n  </mat-button-toggle>\\r\\n</mat-button-toggle-group>\\r\\n<div class=\\\"example-selected-value\\\">Selected value: {{group.value}}</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Exclusive selection\r\n */\r\n@Component({\r\n  selector: 'button-toggle-exclusive-example',\r\n  templateUrl: 'button-toggle-exclusive-example.html',\r\n  styleUrls: ['button-toggle-exclusive-example.css'],\r\n})\r\nexport class ButtonToggleExclusiveExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-button-toggle-group name=\\\"fontStyle\\\" aria-label=\\\"Font Style\\\">\\r\\n  <mat-button-toggle value=\\\"bold\\\">Bold</mat-button-toggle>\\r\\n  <mat-button-toggle value=\\\"italic\\\">Italic</mat-button-toggle>\\r\\n  <mat-button-toggle value=\\\"underline\\\">Underline</mat-button-toggle>\\r\\n</mat-button-toggle-group>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic button-toggles\r\n */\r\n@Component({\r\n  selector: 'button-toggle-overview-example',\r\n  templateUrl: 'button-toggle-overview-example.html',\r\n  styleUrls: ['button-toggle-overview-example.css'],\r\n})\r\nexport class ButtonToggleOverviewExample {}\r\n","module.exports = \".example-button-row {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: space-around;\\r\\n}\\r\\n\"","module.exports = \"<h3>Basic Buttons</h3>\\r\\n<div class=\\\"button-row\\\">\\r\\n  <button mat-button>Basic</button>\\r\\n  <button mat-button color=\\\"primary\\\">Primary</button>\\r\\n  <button mat-button color=\\\"accent\\\">Accent</button>\\r\\n  <button mat-button color=\\\"warn\\\">Warn</button>\\r\\n  <button mat-button disabled>Disabled</button>\\r\\n  <a mat-button routerLink=\\\".\\\">Link</a>\\r\\n</div>\\r\\n\\r\\n<h3>Raised Buttons</h3>\\r\\n<div class=\\\"button-row\\\">\\r\\n  <button mat-raised-button>Basic</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\">Primary</button>\\r\\n  <button mat-raised-button color=\\\"accent\\\">Accent</button>\\r\\n  <button mat-raised-button color=\\\"warn\\\">Warn</button>\\r\\n  <button mat-raised-button disabled>Disabled</button>\\r\\n  <a mat-raised-button routerLink=\\\".\\\">Link</a>\\r\\n</div>\\r\\n\\r\\n<h3>Icon Buttons</h3>\\r\\n<div class=\\\"button-row\\\">\\r\\n  <button mat-icon-button>\\r\\n    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n  </button>\\r\\n  <button mat-icon-button color=\\\"primary\\\">\\r\\n    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n  </button>\\r\\n  <button mat-icon-button color=\\\"accent\\\">\\r\\n    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n  </button>\\r\\n  <button mat-icon-button color=\\\"warn\\\">\\r\\n    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n  </button>\\r\\n  <button mat-icon-button disabled>\\r\\n    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<h3>Fab Buttons</h3>\\r\\n<div class=\\\"button-row\\\">\\r\\n  <button mat-fab>Basic</button>\\r\\n  <button mat-fab color=\\\"primary\\\">Primary</button>\\r\\n  <button mat-fab color=\\\"accent\\\">Accent</button>\\r\\n  <button mat-fab color=\\\"warn\\\">Warn</button>\\r\\n  <button mat-fab disabled>Disabled</button>\\r\\n  <button mat-fab>\\r\\n    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n  </button>\\r\\n  <a mat-fab routerLink=\\\".\\\">Link</a>\\r\\n</div>\\r\\n\\r\\n<h3>Mini Fab Buttons</h3>\\r\\n<div class=\\\"button-row\\\">\\r\\n  <button mat-mini-fab>Basic</button>\\r\\n  <button mat-mini-fab color=\\\"primary\\\">Primary</button>\\r\\n  <button mat-mini-fab color=\\\"accent\\\">Accent</button>\\r\\n  <button mat-mini-fab color=\\\"warn\\\">Warn</button>\\r\\n  <button mat-mini-fab disabled>Disabled</button>\\r\\n  <button mat-mini-fab>\\r\\n    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n  </button>\\r\\n  <a mat-mini-fab routerLink=\\\".\\\">Link</a>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Button varieties\r\n */\r\n@Component({\r\n  selector: 'button-types-example',\r\n  templateUrl: 'button-types-example.html',\r\n  styleUrls: ['button-types-example.css'],\r\n})\r\nexport class ButtonTypesExample {}\r\n","module.exports = \".example-card {\\r\\n  max-width: 400px;\\r\\n}\\r\\n\\r\\n.example-header-image {\\r\\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n  background-size: cover;\\r\\n}\\r\\n\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\r\\n  <mat-card-header>\\r\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n    <mat-card-title>Shiba Inu</mat-card-title>\\r\\n    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\">\\r\\n  <mat-card-content>\\r\\n    <p>\\r\\n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\\r\\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\\r\\n      bred for hunting.\\r\\n    </p>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-button>LIKE</button>\\r\\n    <button mat-button>SHARE</button>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Card with multiple sections\r\n */\r\n@Component({\r\n  selector: 'card-fancy-example',\r\n  templateUrl: 'card-fancy-example.html',\r\n  styleUrls: ['card-fancy-example.css'],\r\n})\r\nexport class CardFancyExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-card>Simple card</mat-card>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic cards\r\n */\r\n@Component({\r\n  selector: 'card-overview-example',\r\n  templateUrl: 'card-overview-example.html',\r\n  styleUrls: ['card-overview-example.css'],\r\n})\r\nexport class CardOverviewExample {}\r\n","module.exports = \"/**\\r\\n * Add basic flex styling so that the cells evenly space themselves in the row.\\r\\n */\\r\\ncdk-row, cdk-header-row, cdk-footer-row {\\r\\n  display: flex;\\r\\n}\\r\\ncdk-cell, cdk-header-cell, cdk-footer-cell {\\r\\n  flex: 1;\\r\\n}\\r\\n\"","module.exports = \"<cdk-table [dataSource]=\\\"dataSource\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container cdkColumnDef=\\\"position\\\">\\r\\n    <cdk-header-cell *cdkHeaderCellDef> No. </cdk-header-cell>\\r\\n    <cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.position}} </cdk-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container cdkColumnDef=\\\"name\\\">\\r\\n    <cdk-header-cell *cdkHeaderCellDef> Name </cdk-header-cell>\\r\\n    <cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.name}} </cdk-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container cdkColumnDef=\\\"weight\\\">\\r\\n    <cdk-header-cell *cdkHeaderCellDef> Weight </cdk-header-cell>\\r\\n    <cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.weight}} </cdk-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Symbol Column -->\\r\\n  <ng-container cdkColumnDef=\\\"symbol\\\">\\r\\n    <cdk-header-cell *cdkHeaderCellDef> Symbol </cdk-header-cell>\\r\\n    <cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.symbol}} </cdk-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></cdk-header-row>\\r\\n  <cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></cdk-row>\\r\\n</cdk-table>\\r\\n\"","import {DataSource} from '@angular/cdk/collections';\r\nimport {Component} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\n\r\n/**\r\n * @title Basic use of `<cdk-table>` (uses display flex)\r\n */\r\n@Component({\r\n  selector: 'cdk-table-basic-flex-example',\r\n  styleUrls: ['cdk-table-basic-flex-example.css'],\r\n  templateUrl: 'cdk-table-basic-flex-example.html',\r\n})\r\nexport class CdkTableBasicFlexExample {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = new ExampleDataSource();\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n\r\n/**\r\n * Data source to provide what data should be rendered in the table. Note that the data source\r\n * can retrieve its data in any way. In this case, the data source is provided a reference\r\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\r\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\r\n * should be rendered.\r\n */\r\nexport class ExampleDataSource extends DataSource<PeriodicElement> {\r\n  /** Stream of data that is provided to the table. */\r\n  data: BehaviorSubject<PeriodicElement[]> = new BehaviorSubject<PeriodicElement[]>(ELEMENT_DATA);\r\n\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<PeriodicElement[]> {\r\n    return this.data;\r\n  }\r\n\r\n  disconnect() {}\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nth {\\r\\n  text-align: left;\\r\\n}\\r\\n\"","module.exports = \"<table cdk-table [dataSource]=\\\"dataSource\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container cdkColumnDef=\\\"position\\\">\\r\\n    <th cdk-header-cell *cdkHeaderCellDef> No. </th>\\r\\n    <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container cdkColumnDef=\\\"name\\\">\\r\\n    <th cdk-header-cell *cdkHeaderCellDef> Name </th>\\r\\n    <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container cdkColumnDef=\\\"weight\\\">\\r\\n    <th cdk-header-cell *cdkHeaderCellDef> Weight </th>\\r\\n    <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.weight}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Symbol Column -->\\r\\n  <ng-container cdkColumnDef=\\\"symbol\\\">\\r\\n    <th cdk-header-cell *cdkHeaderCellDef> Symbol </th>\\r\\n    <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\"","import {DataSource} from '@angular/cdk/collections';\r\nimport {Component} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\n\r\n/**\r\n * @title Basic CDK data-table\r\n */\r\n@Component({\r\n  selector: 'cdk-table-basic-example',\r\n  styleUrls: ['cdk-table-basic-example.css'],\r\n  templateUrl: 'cdk-table-basic-example.html',\r\n})\r\nexport class CdkTableBasicExample {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = new ExampleDataSource();\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n\r\n/**\r\n * Data source to provide what data should be rendered in the table. Note that the data source\r\n * can retrieve its data in any way. In this case, the data source is provided a reference\r\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\r\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\r\n * should be rendered.\r\n */\r\nexport class ExampleDataSource extends DataSource<PeriodicElement> {\r\n  /** Stream of data that is provided to the table. */\r\n  data: BehaviorSubject<PeriodicElement[]> = new BehaviorSubject<PeriodicElement[]>(ELEMENT_DATA);\r\n\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<PeriodicElement[]> {\r\n    return this.data;\r\n  }\r\n\r\n  disconnect() {}\r\n}\r\n","module.exports = \".demo-tree-node {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\"","module.exports = \"<cdk-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\r\\n  <cdk-tree-node *cdkTreeNodeDef=\\\"let node\\\" cdkTreeNodePadding class=\\\"demo-tree-node\\\">\\r\\n    <button mat-icon-button disabled></button>\\r\\n    {{node.filename}}:  {{node.type}}\\r\\n  </cdk-tree-node>\\r\\n  <cdk-tree-node *cdkTreeNodeDef=\\\"let node; when: hasChild\\\" cdkTreeNodePadding class=\\\"demo-tree-node\\\">\\r\\n    <button mat-icon-button [attr.aria-label]=\\\"'toggle ' + node.filename\\\" cdkTreeNodeToggle>\\r\\n      <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n      </mat-icon>\\r\\n    </button>\\r\\n    {{node.filename}}:  {{node.type}}\\r\\n  </cdk-tree-node>\\r\\n</cdk-tree>\\r\\n\"","import {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {Component, Injectable} from '@angular/core';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\nimport {BehaviorSubject, Observable, of as observableOf} from 'rxjs';\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a filename, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n  children: FileNode[];\r\n  filename: string;\r\n  type: any;\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n  filename: string;\r\n  type: any;\r\n  level: number;\r\n  expandable: boolean;\r\n}\r\n\r\n/**\r\n * The file structure tree data in string. The data could be parsed into a Json object\r\n */\r\nconst TREE_DATA = `\r\n  {\r\n    \"Documents\": {\r\n      \"angular\": {\r\n        \"src\": {\r\n          \"core\": \"ts\",\r\n          \"compiler\": \"ts\"\r\n        }\r\n      },\r\n      \"material2\": {\r\n        \"src\": {\r\n          \"button\": \"ts\",\r\n          \"checkbox\": \"ts\",\r\n          \"input\": \"ts\"\r\n        }\r\n      }\r\n    },\r\n    \"Downloads\": {\r\n        \"Tutorial\": \"html\",\r\n        \"November\": \"pdf\",\r\n        \"October\": \"pdf\"\r\n    },\r\n    \"Pictures\": {\r\n        \"Sun\": \"png\",\r\n        \"Woods\": \"jpg\",\r\n        \"Photo Booth Library\": {\r\n          \"Contents\": \"dir\",\r\n          \"Pictures\": \"dir\"\r\n        }\r\n    },\r\n    \"Applications\": {\r\n        \"Chrome\": \"app\",\r\n        \"Calendar\": \"app\",\r\n        \"Webstorm\": \"app\"\r\n    }\r\n}`;\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n * For a directory, it has filename and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange: BehaviorSubject<FileNode[]> = new BehaviorSubject<FileNode[]>([]);\r\n\r\n  get data(): FileNode[] { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    // Parse the string to json object.\r\n    const dataObject = JSON.parse(TREE_DATA);\r\n\r\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObject, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `FileNode`.\r\n   */\r\n  buildFileTree(value: any, level: number): FileNode[] {\r\n    let data: any[] = [];\r\n    for (let k in value) {\r\n      let v = value[k];\r\n      let node = new FileNode();\r\n      node.filename = `${k}`;\r\n      if (v === null || v === undefined) {\r\n        // no action\r\n      } else if (typeof v === 'object') {\r\n        node.children = this.buildFileTree(v, level + 1);\r\n      } else {\r\n        node.type = v;\r\n      }\r\n      data.push(node);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'cdk-tree-flat-example',\r\n  templateUrl: 'cdk-tree-flat-example.html',\r\n  styleUrls: ['cdk-tree-flat-example.css'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class CdkTreeFlatExample {\r\n\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n\r\n  constructor(database: FileDatabase) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\r\n      this._isExpandable, this._getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n    database.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n    });\r\n  }\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    let flatNode = new FileFlatNode();\r\n    flatNode.filename = node.filename;\r\n    flatNode.type = node.type;\r\n    flatNode.level = level;\r\n    flatNode.expandable = !!node.children;\r\n    return flatNode;\r\n  }\r\n\r\n  private _getLevel = (node: FileFlatNode) => { return node.level; };\r\n\r\n  private _isExpandable = (node: FileFlatNode) => { return node.expandable; };\r\n\r\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => {\r\n    return observableOf(node.children);\r\n  }\r\n\r\n  hasChild = (_: number, _nodeData: FileFlatNode) => { return _nodeData.expandable; };\r\n}\r\n","module.exports = \".example-tree-invisible {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.example-tree ul,\\r\\n.example-tree li {\\r\\n  margin-top: 0;\\r\\n  margin-bottom: 0;\\r\\n  list-style-type: none;\\r\\n}\\r\\n\\r\\n.example-tree-node {\\r\\n  display: block;\\r\\n  padding-left: 40px;\\r\\n}\\r\\n\"","module.exports = \"<cdk-tree [dataSource]=\\\"nestedDataSource\\\" [treeControl]=\\\"nestedTreeControl\\\">\\r\\n  <cdk-nested-tree-node *cdkTreeNodeDef=\\\"let node\\\" class=\\\"example-tree-node\\\">\\r\\n    <button mat-icon-button disabled></button>\\r\\n    {{node.filename}}:  {{node.type}}\\r\\n  </cdk-nested-tree-node>\\r\\n  <cdk-nested-tree-node *cdkTreeNodeDef=\\\"let node; when: hasNestedChild\\\" class=\\\"example-tree-node\\\">\\r\\n    <button mat-icon-button [attr.aria-label]=\\\"'toggle ' + node.filename\\\" cdkTreeNodeToggle>\\r\\n      <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n        {{nestedTreeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n      </mat-icon>\\r\\n    </button>\\r\\n    {{node.filename}}:  {{node.type}}\\r\\n    <div [class.example-tree-invisible]=\\\"!nestedTreeControl.isExpanded(node)\\\">\\r\\n      <ng-container cdkTreeNodeOutlet></ng-container>\\r\\n    </div>\\r\\n  </cdk-nested-tree-node>\\r\\n</cdk-tree>\\r\\n\"","import {NestedTreeControl} from '@angular/cdk/tree';\r\nimport {Component, Injectable} from '@angular/core';\r\nimport {MatTreeNestedDataSource} from '@angular/material/tree';\r\nimport {BehaviorSubject, of as observableOf} from 'rxjs';\r\n\r\n/**\r\n * Json node data with nested structure. Each node has a filename and a value or a list of children\r\n */\r\nexport class FileNode {\r\n  children: FileNode[];\r\n  filename: string;\r\n  type: any;\r\n}\r\n\r\n/**\r\n * The Json tree data in string. The data could be parsed into Json object\r\n */\r\nconst TREE_DATA = `\r\n  {\r\n    \"Documents\": {\r\n      \"angular\": {\r\n        \"src\": {\r\n          \"core\": \"ts\",\r\n          \"compiler\": \"ts\"\r\n        }\r\n      },\r\n      \"material2\": {\r\n        \"src\": {\r\n          \"button\": \"ts\",\r\n          \"checkbox\": \"ts\",\r\n          \"input\": \"ts\"\r\n        }\r\n      }\r\n    },\r\n    \"Downloads\": {\r\n        \"Tutorial\": \"html\",\r\n        \"November\": \"pdf\",\r\n        \"October\": \"pdf\"\r\n    },\r\n    \"Pictures\": {\r\n        \"Sun\": \"png\",\r\n        \"Woods\": \"jpg\",\r\n        \"Photo Booth Library\": {\r\n          \"Contents\": \"dir\",\r\n          \"Pictures\": \"dir\"\r\n        }\r\n    },\r\n    \"Applications\": {\r\n        \"Chrome\": \"app\",\r\n        \"Calendar\": \"app\",\r\n        \"Webstorm\": \"app\"\r\n    }\r\n  }`;\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n * For a directory, it has filename and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange: BehaviorSubject<FileNode[]> = new BehaviorSubject<FileNode[]>([]);\r\n\r\n  get data(): FileNode[] { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    // Parse the string to json object.\r\n    const dataObject = JSON.parse(TREE_DATA);\r\n\r\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObject, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `FileNode`.\r\n   */\r\n  buildFileTree(value: any, level: number): FileNode[] {\r\n    let data: any[] = [];\r\n    for (let k in value) {\r\n      let v = value[k];\r\n      let node = new FileNode();\r\n      node.filename = `${k}`;\r\n      if (v === null || v === undefined) {\r\n        // no action\r\n      } else if (typeof v === 'object') {\r\n        node.children = this.buildFileTree(v, level + 1);\r\n      } else {\r\n        node.type = v;\r\n      }\r\n      data.push(node);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Tree with nested nodes\r\n */\r\n@Component({\r\n  selector: 'cdk-tree-nested-example',\r\n  templateUrl: 'cdk-tree-nested-example.html',\r\n  styleUrls: ['cdk-tree-nested-example.css'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class CdkTreeNestedExample {\r\n  nestedTreeControl: NestedTreeControl<FileNode>;\r\n\r\n  nestedDataSource: MatTreeNestedDataSource<FileNode>;\r\n\r\n  constructor(database: FileDatabase) {\r\n    this.nestedTreeControl = new NestedTreeControl<FileNode>(this._getChildren);\r\n    this.nestedDataSource = new MatTreeNestedDataSource();\r\n\r\n    database.dataChange.subscribe(data => this.nestedDataSource.data = data);\r\n  }\r\n\r\n  private _getChildren = (node: FileNode) => { return observableOf(node.children); };\r\n\r\n  hasNestedChild = (_: number, nodeData: FileNode) => {return !(nodeData.type); };\r\n}\r\n","module.exports = \".example-h2 {\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\n.example-section {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n.example-margin {\\r\\n  margin: 0 10px;\\r\\n}\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <mat-card-content>\\r\\n    <h2 class=\\\"example-h2\\\">Checkbox configuration</h2>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\">Checked</mat-checkbox>\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"indeterminate\\\">Indeterminate</mat-checkbox>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <label class=\\\"example-margin\\\">Align:</label>\\r\\n      <mat-radio-group [(ngModel)]=\\\"labelPosition\\\">\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"after\\\">After</mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"before\\\">Before</mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Disabled</mat-checkbox>\\r\\n    </section>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card class=\\\"result\\\">\\r\\n  <mat-card-content>\\r\\n    <h2 class=\\\"example-h2\\\">Result</h2>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-checkbox\\r\\n          class=\\\"example-margin\\\"\\r\\n          [(ngModel)]=\\\"checked\\\"\\r\\n          [(indeterminate)]=\\\"indeterminate\\\"\\r\\n          [labelPosition]=\\\"labelPosition\\\"\\r\\n          [disabled]=\\\"disabled\\\">\\r\\n        I'm a checkbox\\r\\n      </mat-checkbox>\\r\\n    </section>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Configurable checkbox\r\n */\r\n@Component({\r\n  selector: 'checkbox-configurable-example',\r\n  templateUrl: 'checkbox-configurable-example.html',\r\n  styleUrls: ['checkbox-configurable-example.css'],\r\n})\r\nexport class CheckboxConfigurableExample {\r\n  checked = false;\r\n  indeterminate = false;\r\n  labelPosition = 'after';\r\n  disabled = false;\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-checkbox>Check me!</mat-checkbox>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic checkboxes\r\n */\r\n@Component({\r\n  selector: 'checkbox-overview-example',\r\n  templateUrl: 'checkbox-overview-example.html',\r\n  styleUrls: ['checkbox-overview-example.css'],\r\n})\r\nexport class CheckboxOverviewExample {}\r\n","module.exports = \".demo-chip-list {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field class=\\\"demo-chip-list\\\">\\r\\n  <mat-chip-list #chipList>\\r\\n    <mat-chip\\r\\n      *ngFor=\\\"let fruit of fruits\\\"\\r\\n      [selectable]=\\\"selectable\\\"\\r\\n      [removable]=\\\"removable\\\"\\r\\n      (removed)=\\\"remove(fruit)\\\">\\r\\n      {{fruit}}\\r\\n      <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n    </mat-chip>\\r\\n    <input\\r\\n      placeholder=\\\"New fruit...\\\"\\r\\n      #fruitInput\\r\\n      [formControl]=\\\"fruitCtrl\\\"\\r\\n      [matAutocomplete]=\\\"auto\\\"\\r\\n      [matChipInputFor]=\\\"chipList\\\"\\r\\n      [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n      [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n      (matChipInputTokenEnd)=\\\"add($event)\\\"\\r\\n    />\\r\\n  </mat-chip-list>\\r\\n  <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n    <mat-option *ngFor=\\\"let fruit of filteredFruits | async\\\" [value]=\\\"fruit\\\">\\r\\n      {{ fruit }}\\r\\n    </mat-option>\\r\\n  </mat-autocomplete>\\r\\n</mat-form-field>\\r\\n\"","import {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {Component, ElementRef, ViewChild} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MatAutocompleteSelectedEvent, MatChipInputEvent} from '@angular/material';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\n/**\r\n * @title Chips Autocomplete\r\n */\r\n@Component({\r\n  selector: 'chips-autocomplete-example',\r\n  templateUrl: 'chips-autocomplete-example.html',\r\n  styleUrls: ['chips-autocomplete-example.css']\r\n})\r\nexport class ChipsAutocompleteExample {\r\n  visible: boolean = true;\r\n  selectable: boolean = true;\r\n  removable: boolean = true;\r\n  addOnBlur: boolean = false;\r\n\r\n  separatorKeysCodes = [ENTER, COMMA];\r\n\r\n  fruitCtrl = new FormControl();\r\n\r\n  filteredFruits: Observable<any[]>;\r\n\r\n  fruits = [\r\n    'Lemon',\r\n  ];\r\n\r\n  allFruits = [\r\n    'Apple',\r\n    'Lemon',\r\n    'Lime',\r\n    'Orange',\r\n    'Strawberry'\r\n  ];\r\n\r\n  @ViewChild('fruitInput') fruitInput: ElementRef;\r\n\r\n  constructor() {\r\n    this.filteredFruits = this.fruitCtrl.valueChanges.pipe(\r\n        startWith(null),\r\n        map((fruit: string | null) => fruit ? this.filter(fruit) : this.allFruits.slice()));\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    // Add our fruit\r\n    if ((value || '').trim()) {\r\n      this.fruits.push(value.trim());\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n\r\n    this.fruitCtrl.setValue(null);\r\n  }\r\n\r\n  remove(fruit: any): void {\r\n    const index = this.fruits.indexOf(fruit);\r\n\r\n    if (index >= 0) {\r\n      this.fruits.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  filter(name: string) {\r\n    return this.allFruits.filter(fruit =>\r\n        fruit.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.fruits.push(event.option.viewValue);\r\n    this.fruitInput.nativeElement.value = '';\r\n    this.fruitCtrl.setValue(null);\r\n  }\r\n}\r\n","module.exports = \".demo-chip-list {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field class=\\\"demo-chip-list\\\">\\r\\n  <mat-chip-list #chipList>\\r\\n    <mat-chip *ngFor=\\\"let fruit of fruits\\\" [selectable]=\\\"selectable\\\"\\r\\n             [removable]=\\\"removable\\\" (removed)=\\\"remove(fruit)\\\">\\r\\n      {{fruit.name}}\\r\\n      <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n    </mat-chip>\\r\\n    <input placeholder=\\\"New fruit...\\\"\\r\\n           [matChipInputFor]=\\\"chipList\\\"\\r\\n           [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n           [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n           (matChipInputTokenEnd)=\\\"add($event)\\\" />\\r\\n  </mat-chip-list>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MatChipInputEvent} from '@angular/material';\r\nimport {ENTER, COMMA} from '@angular/cdk/keycodes';\r\n\r\n/**\r\n * @title Chips with input\r\n */\r\n@Component({\r\n  selector: 'chips-input-example',\r\n  templateUrl: 'chips-input-example.html',\r\n  styleUrls: ['chips-input-example.css']\r\n})\r\nexport class ChipsInputExample {\r\n  visible: boolean = true;\r\n  selectable: boolean = true;\r\n  removable: boolean = true;\r\n  addOnBlur: boolean = true;\r\n\r\n  // Enter, comma\r\n  separatorKeysCodes = [ENTER, COMMA];\r\n\r\n  fruits = [\r\n    { name: 'Lemon' },\r\n    { name: 'Lime' },\r\n    { name: 'Apple' },\r\n  ];\r\n\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    let input = event.input;\r\n    let value = event.value;\r\n\r\n    // Add our fruit\r\n    if ((value || '').trim()) {\r\n      this.fruits.push({ name: value.trim() });\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n\r\n  remove(fruit: any): void {\r\n    let index = this.fruits.indexOf(fruit);\r\n\r\n    if (index >= 0) {\r\n      this.fruits.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-chip-list>\\r\\n  <mat-chip>One fish</mat-chip>\\r\\n  <mat-chip>Two fish</mat-chip>\\r\\n  <mat-chip color=\\\"primary\\\" selected=\\\"true\\\">Primary fish</mat-chip>\\r\\n  <mat-chip color=\\\"accent\\\" selected=\\\"true\\\">Accent fish</mat-chip>\\r\\n</mat-chip-list>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic chips\r\n */\r\n@Component({\r\n  selector: 'chips-overview-example',\r\n  templateUrl: 'chips-overview-example.html',\r\n  styleUrls: ['chips-overview-example.css'],\r\n})\r\nexport class ChipsOverviewExample {}\r\n","module.exports = \"mat-chip {\\r\\n  max-width: 200px;\\r\\n}\\r\\n\"","module.exports = \"<mat-chip-list class=\\\"mat-chip-list-stacked\\\">\\r\\n  <mat-chip *ngFor=\\\"let chip of availableColors\\\" selected=\\\"true\\\" [color]=\\\"chip.color\\\">\\r\\n    {{chip.name}}\\r\\n  </mat-chip>\\r\\n</mat-chip-list>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Stacked chips\r\n */\r\n@Component({\r\n  selector: 'chips-stacked-example',\r\n  templateUrl: 'chips-stacked-example.html',\r\n  styleUrls: ['chips-stacked-example.css'],\r\n})\r\nexport class ChipsStackedExample {\r\n  color: string;\r\n\r\n  availableColors = [\r\n    { name: 'none', color: '' },\r\n    { name: 'Primary', color: 'primary' },\r\n    { name: 'Accent', color: 'accent' },\r\n    { name: 'Warn', color: 'warn' }\r\n  ];\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field class=\\\"example-full-width\\\">\\r\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\r\\n  <mat-datepicker #picker></mat-datepicker>\\r\\n</mat-form-field>\\r\\n<button mat-raised-button (click)=\\\"picker.open()\\\">Open</button>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Datepicker open method */\r\n@Component({\r\n  selector: 'datepicker-api-example',\r\n  templateUrl: 'datepicker-api-example.html',\r\n  styleUrls: ['datepicker-api-example.css'],\r\n})\r\nexport class DatepickerApiExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field color=\\\"accent\\\">\\r\\n  <mat-label>Inherited calendar color</mat-label>\\r\\n  <input matInput [matDatepicker]=\\\"picker1\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker1></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field color=\\\"accent\\\">\\r\\n  <mat-label>Custom calendar color</mat-label>\\r\\n  <input matInput [matDatepicker]=\\\"picker2\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker2 color=\\\"primary\\\"></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Datepicker palette colors */\r\n@Component({\r\n  selector: 'datepicker-color-example',\r\n  templateUrl: 'datepicker-color-example.html',\r\n  styleUrls: ['datepicker-color-example.css'],\r\n})\r\nexport class DatepickerColorExample {}\r\n","module.exports = \".example-header {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  padding: 0.5em;\\r\\n}\\r\\n\\r\\n.example-header-label {\\r\\n  flex: 1;\\r\\n  height: 1em;\\r\\n  font-weight: bold;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.example-double-arrow .mat-icon {\\r\\n  margin: -22%;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-label>Custom calendar header</mat-label>\\r\\n  <input matInput [matDatepicker]=\\\"picker\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker [calendarHeaderComponent]=\\\"exampleHeader\\\"></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\"","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Host,\r\n  Inject,\r\n  OnDestroy,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {MatCalendar} from '@angular/material';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\r\nimport {Subject} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\n\r\n/** @title Datepicker with custom calendar header */\r\n@Component({\r\n  selector: 'datepicker-custom-header-example',\r\n  templateUrl: 'datepicker-custom-header-example.html',\r\n  styleUrls: ['datepicker-custom-header-example.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DatepickerCustomHeaderExample {\r\n  exampleHeader = ExampleHeader;\r\n}\r\n\r\n/** Custom header component for datepicker. */\r\n@Component({\r\n  selector: 'example-header',\r\n  template: `\r\n    <div class=\"example-header\">\r\n      <button mat-icon-button class=\"example-double-arrow\" (click)=\"previousClicked('year')\">\r\n        <mat-icon>keyboard_arrow_left</mat-icon>\r\n        <mat-icon>keyboard_arrow_left</mat-icon>\r\n      </button>\r\n      <button mat-icon-button (click)=\"previousClicked('month')\">\r\n        <mat-icon>keyboard_arrow_left</mat-icon>\r\n      </button>\r\n      <span class=\"example-header-label\">{{periodLabel}}</span>\r\n      <button mat-icon-button (click)=\"nextClicked('month')\">\r\n        <mat-icon>keyboard_arrow_right</mat-icon>\r\n      </button>\r\n      <button mat-icon-button class=\"example-double-arrow\" (click)=\"nextClicked('year')\">\r\n        <mat-icon>keyboard_arrow_right</mat-icon>\r\n        <mat-icon>keyboard_arrow_right</mat-icon>\r\n      </button>\r\n    </div>\r\n  `,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ExampleHeader<D> implements OnDestroy {\r\n  private destroyed = new Subject<void>();\r\n\r\n  constructor(@Host() private calendar: MatCalendar<D>,\r\n              private dateAdapter: DateAdapter<D>,\r\n              @Inject(MAT_DATE_FORMATS) private dateFormats: MatDateFormats,\r\n              cdr: ChangeDetectorRef) {\r\n    calendar.stateChanges\r\n        .pipe(takeUntil(this.destroyed))\r\n        .subscribe(() => cdr.markForCheck());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n\r\n  get periodLabel() {\r\n    return this.dateAdapter\r\n        .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel)\r\n        .toLocaleUpperCase();\r\n  }\r\n\r\n  previousClicked(mode: 'month' | 'year') {\r\n    this.calendar.activeDate = mode == 'month' ?\r\n        this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\r\n        this.dateAdapter.addCalendarYears(this.calendar.activeDate, -1);\r\n  }\r\n\r\n  nextClicked(mode: 'month' | 'year') {\r\n    this.calendar.activeDate = mode == 'month' ?\r\n        this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\r\n        this.dateAdapter.addCalendarYears(this.calendar.activeDate, 1);\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field class=\\\"example-full-width\\\">\\r\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\">\\r\\n    <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\r\\n  </mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Datepicker with custom icon */\r\n@Component({\r\n  selector: 'datepicker-custom-icon-example',\r\n  templateUrl: 'datepicker-custom-icon-example.html',\r\n  styleUrls: ['datepicker-custom-icon-example.css'],\r\n})\r\nexport class DatepickerCustomIconExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<p>\\r\\n  <mat-form-field>\\r\\n    <input matInput [matDatepicker]=\\\"dp1\\\" placeholder=\\\"Completely disabled\\\" disabled>\\r\\n    <mat-datepicker-toggle matSuffix [for]=\\\"dp1\\\"></mat-datepicker-toggle>\\r\\n    <mat-datepicker #dp1></mat-datepicker>\\r\\n  </mat-form-field>\\r\\n</p>\\r\\n\\r\\n<p>\\r\\n  <mat-form-field>\\r\\n    <input matInput [matDatepicker]=\\\"dp2\\\" placeholder=\\\"Popup disabled\\\">\\r\\n    <mat-datepicker-toggle matSuffix [for]=\\\"dp2\\\" disabled></mat-datepicker-toggle>\\r\\n    <mat-datepicker #dp2></mat-datepicker>\\r\\n  </mat-form-field>\\r\\n</p>\\r\\n\\r\\n<p>\\r\\n  <mat-form-field>\\r\\n    <input matInput [matDatepicker]=\\\"dp3\\\" placeholder=\\\"Input disabled\\\" disabled>\\r\\n    <mat-datepicker-toggle matSuffix [for]=\\\"dp3\\\"></mat-datepicker-toggle>\\r\\n    <mat-datepicker #dp3 disabled=\\\"false\\\"></mat-datepicker>\\r\\n  </mat-form-field>\\r\\n</p>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Disabled datepicker */\r\n@Component({\r\n  selector: 'datepicker-disabled-example',\r\n  templateUrl: 'datepicker-disabled-example.html',\r\n  styleUrls: ['datepicker-disabled-example.css'],\r\n})\r\nexport class DatepickerDisabledExample {}\r\n","module.exports = \".example-events {\\r\\n  width: 400px;\\r\\n  height: 200px;\\r\\n  border: 1px solid #555;\\r\\n  overflow: auto;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Input & change events\\\"\\r\\n         (dateInput)=\\\"addEvent('input', $event)\\\" (dateChange)=\\\"addEvent('change', $event)\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"example-events\\\">\\r\\n  <div *ngFor=\\\"let e of events\\\">{{e}}</div>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\r\n\r\n/** @title Datepicker input and change events */\r\n@Component({\r\n  selector: 'datepicker-events-example',\r\n  templateUrl: 'datepicker-events-example.html',\r\n  styleUrls: ['datepicker-events-example.css'],\r\n})\r\nexport class DatepickerEventsExample {\r\n  events: string[] = [];\r\n\r\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\r\n    this.events.push(`${type}: ${event.value}`);\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field class=\\\"example-full-width\\\">\\r\\n  <input matInput [matDatepickerFilter]=\\\"myFilter\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Datepicker with filter validation */\r\n@Component({\r\n  selector: 'datepicker-filter-example',\r\n  templateUrl: 'datepicker-filter-example.html',\r\n  styleUrls: ['datepicker-filter-example.css'],\r\n})\r\nexport class DatepickerFilterExample {\r\n  myFilter = (d: Date): boolean => {\r\n    const day = d.getDay();\r\n    // Prevent Saturday and Sunday from being selected.\r\n    return day !== 0 && day !== 6;\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Verbose datepicker\\\" [formControl]=\\\"date\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #dp></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\n\r\n// Depending on whether rollup is used, moment needs to be imported differently.\r\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\r\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\r\n// the `default as` syntax.\r\nimport * as _moment from 'moment';\r\n// tslint:disable-next-line:no-duplicate-imports\r\n// import {default as _rollupMoment} from 'moment';\r\n\r\n// const moment = _rollupMoment || _moment;\r\nconst moment = _moment;\r\n\r\n// See the Moment.js docs for the meaning of these formats:\r\n// https://momentjs.com/docs/#/displaying/format/\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'LL',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n/** @title Datepicker with custom formats */\r\n@Component({\r\n  selector: 'datepicker-formats-example',\r\n  templateUrl: 'datepicker-formats-example.html',\r\n  styleUrls: ['datepicker-formats-example.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n\r\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\r\n  ],\r\n})\r\nexport class DatepickerFormatsExample {\r\n  date = new FormControl(moment());\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Different locale\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #dp></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\\r\\n<button mat-button (click)=\\\"french()\\\">Dynamically switch to French</button>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\n\r\n/** @title Datepicker with different locale */\r\n@Component({\r\n  selector: 'datepicker-locale-example',\r\n  templateUrl: 'datepicker-locale-example.html',\r\n  styleUrls: ['datepicker-locale-example.css'],\r\n  providers: [\r\n    // The locale would typically be provided on the root module of your application. We do it at\r\n    // the component level here, due to limitations of our example generation script.\r\n    {provide: MAT_DATE_LOCALE, useValue: 'ja-JP'},\r\n\r\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\r\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\r\n    // here, due to limitations of our example generation script.\r\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\r\n  ],\r\n})\r\nexport class DatepickerLocaleExample {\r\n  constructor(private adapter: DateAdapter<any>) {}\r\n\r\n  french() {\r\n    this.adapter.setLocale('fr');\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field class=\\\"example-full-width\\\">\\r\\n  <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Datepicker with min & max validation */\r\n@Component({\r\n  selector: 'datepicker-min-max-example',\r\n  templateUrl: 'datepicker-min-max-example.html',\r\n  styleUrls: ['datepicker-min-max-example.css'],\r\n})\r\nexport class DatepickerMinMaxExample {\r\n  minDate = new Date(2000, 0, 1);\r\n  maxDate = new Date(2020, 0, 1);\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Moment.js datepicker\\\" [formControl]=\\\"date\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #dp></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\n\r\n// Depending on whether rollup is used, moment needs to be imported differently.\r\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\r\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\r\n// the `default as` syntax.\r\nimport * as _moment from 'moment';\r\n// tslint:disable-next-line:no-duplicate-imports\r\n// import {default as _rollupMoment} from 'moment';\r\n\r\n// const moment = _rollupMoment || _moment;\r\nconst moment = _moment;\r\n\r\n/** @title Datepicker that uses Moment.js dates */\r\n@Component({\r\n  selector: 'datepicker-moment-example',\r\n  templateUrl: 'datepicker-moment-example.html',\r\n  styleUrls: ['datepicker-moment-example.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\r\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\r\n    // here, due to limitations of our example generation script.\r\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\r\n  ],\r\n})\r\nexport class DatepickerMomentExample {\r\n  // Datepicker takes `Moment` objects instead of `Date` objects.\r\n  date = new FormControl(moment([2017, 0, 1]));\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Basic datepicker */\r\n@Component({\r\n  selector: 'datepicker-overview-example',\r\n  templateUrl: 'datepicker-overview-example.html',\r\n  styleUrls: ['datepicker-overview-example.css'],\r\n})\r\nexport class DatepickerOverviewExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Datepicker start date */\r\n@Component({\r\n  selector: 'datepicker-start-view-example',\r\n  templateUrl: 'datepicker-start-view-example.html',\r\n  styleUrls: ['datepicker-start-view-example.css'],\r\n})\r\nexport class DatepickerStartViewExample {\r\n  startDate = new Date(1990, 0, 1);\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field class=\\\"example-full-width\\\">\\r\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker touchUi=\\\"true\\\" #picker></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Datepicker touch UI */\r\n@Component({\r\n  selector: 'datepicker-touch-example',\r\n  templateUrl: 'datepicker-touch-example.html',\r\n  styleUrls: ['datepicker-touch-example.css'],\r\n})\r\nexport class DatepickerTouchExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Angular forms\\\" [formControl]=\\\"date\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker1></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field>\\r\\n  <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Angular forms (w/ deserialization)\\\"\\r\\n         [formControl]=\\\"serializedDate\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker2></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field>\\r\\n  <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Value binding\\\" [value]=\\\"date.value\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #picker3></mat-datepicker>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n/** @title Datepicker selected value */\r\n@Component({\r\n  selector: 'datepicker-value-example',\r\n  templateUrl: 'datepicker-value-example.html',\r\n  styleUrls: ['datepicker-value-example.css'],\r\n})\r\nexport class DatepickerValueExample {\r\n  date = new FormControl(new Date());\r\n  serializedDate = new FormControl((new Date()).toISOString());\r\n}\r\n","module.exports = \".example-month-picker .mat-calendar-period-button {\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.example-month-picker .mat-calendar-arrow {\\r\\n  display: none;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Month and Year\\\" [formControl]=\\\"date\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #dp\\r\\n                  startView=\\\"multi-year\\\"\\r\\n                  (yearSelected)=\\\"chosenYearHandler($event)\\\"\\r\\n                  (monthSelected)=\\\"chosenMonthHandler($event, dp)\\\"\\r\\n                  panelClass=\\\"example-month-picker\\\">\\r\\n  </mat-datepicker>\\r\\n</mat-form-field>\\r\\n\"","import {Component, ViewEncapsulation} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\nimport {MatDatepicker} from '@angular/material/datepicker';\r\n\r\n// Depending on whether rollup is used, moment needs to be imported differently.\r\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\r\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\r\n// the `default as` syntax.\r\nimport * as _moment from 'moment';\r\nimport { Moment } from 'moment';\r\n// tslint:disable-next-line:no-duplicate-imports\r\n// import {default as _rollupMoment, Moment} from 'moment';\r\n\r\n// const moment = _rollupMoment || _moment;\r\nconst moment = _moment;\r\n\r\n// See the Moment.js docs for the meaning of these formats:\r\n// https://momentjs.com/docs/#/displaying/format/\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'MM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n/** @title Datepicker emulating a Year and month picker */\r\n@Component({\r\n  selector: 'datepicker-views-selection-example',\r\n  templateUrl: 'datepicker-views-selection-example.html',\r\n  styleUrls: ['datepicker-views-selection-example.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n\r\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\r\n  ],\r\n})\r\nexport class DatepickerViewsSelectionExample {\r\n  date = new FormControl(moment());\r\n\r\n  chosenYearHandler(normalizedYear: Moment) {\r\n    const ctrlValue = this.date.value;\r\n    ctrlValue.year(normalizedYear.year());\r\n    this.date.setValue(ctrlValue);\r\n  }\r\n\r\n  chosenMonthHandler(normlizedMonth: Moment, datepicker: MatDatepicker<Moment>) {\r\n    const ctrlValue = this.date.value;\r\n    ctrlValue.month(normlizedMonth.month());\r\n    this.date.setValue(ctrlValue);\r\n    datepicker.close();\r\n  }\r\n}\r\n","module.exports = \"<h2 mat-dialog-title>Install Angular</h2>\\r\\n<mat-dialog-content>\\r\\n  <h3>DEVELOP ACROSS ALL PLATFORMS</h3>\\r\\n  <p>Learn one way to build applications with Angular and reuse your code and abilities to build \\r\\n    apps for any deployment target. For web, mobile web, native mobile and native desktop.</p>\\r\\n  \\r\\n  <h3>SPEED &amp; PERFORMANCE</h3>\\r\\n  <p>Achieve the maximum speed possible on the Web Platform today, and take it further, via Web \\r\\n    Workers and server-side rendering. Angular puts you in control over scalability. Meet huge data requirements \\r\\n    by building data models on RxJS, Immutable.js or another push-model.</p>\\r\\n  \\r\\n  <h3>INCREDIBLE TOOLING</h3>\\r\\n  <p>Build features quickly with simple, declarative templates. Extend the template language with your own \\r\\n    components and use a wide array of existing components. Get immediate Angular-specific help and feedback \\r\\n    with nearly every IDE and editor. All this comes together so you can focus on building amazing apps rather \\r\\n    than trying to make the code work.</p>\\r\\n  \\r\\n  <h3>LOVED BY MILLIONS</h3>\\r\\n  <p>From prototype through global deployment, Angular delivers the productivity and scalable infrastructure \\r\\n    that supports Google's largest applications.</p>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button mat-dialog-close>Cancel</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Install</button>\\r\\n</mat-dialog-actions>\\r\\n\"","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-button (click)=\\\"openDialog()\\\">Open dialog</button>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MatDialog} from '@angular/material';\r\n\r\n/**\r\n * @title Dialog with header, scrollable content and actions\r\n */\r\n@Component({\r\n  selector: 'dialog-content-example',\r\n  templateUrl: 'dialog-content-example.html',\r\n  styleUrls: ['dialog-content-example.css'],\r\n})\r\nexport class DialogContentExample {\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(DialogContentExampleDialog, {\r\n      height: '350px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-content-example-dialog',\r\n  templateUrl: 'dialog-content-example-dialog.html',\r\n})\r\nexport class DialogContentExampleDialog {}\r\n","module.exports = \"<h1 mat-dialog-title>Favorite Animal</h1>\\r\\n<div mat-dialog-content>\\r\\n  My favorite animal is:\\r\\n  <ul>\\r\\n    <li>\\r\\n      <span *ngIf=\\\"data.animal === 'panda'\\\">&#10003;</span> Panda\\r\\n    </li>\\r\\n    <li>\\r\\n      <span *ngIf=\\\"data.animal === 'unicorn'\\\">&#10003;</span> Unicorn\\r\\n    </li>\\r\\n    <li>\\r\\n      <span *ngIf=\\\"data.animal === 'lion'\\\">&#10003;</span> Lion\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\"","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-button (click)=\\\"openDialog()\\\">Open dialog</button>\\r\\n\"","import {Component, Inject} from '@angular/core';\r\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n/**\r\n * @title Injecting data when opening a dialog\r\n */\r\n@Component({\r\n  selector: 'dialog-data-example',\r\n  templateUrl: 'dialog-data-example.html',\r\n  styleUrls: ['dialog-data-example.css']\r\n})\r\nexport class DialogDataExample {\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  openDialog() {\r\n    this.dialog.open(DialogDataExampleDialog, {\r\n      data: {\r\n        animal: 'panda'\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-data-example-dialog',\r\n  templateUrl: 'dialog-data-example-dialog.html',\r\n})\r\nexport class DialogDataExampleDialog {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>Dialog with elements</h1>\\r\\n<div mat-dialog-content>This dialog showcases the title, close, content and actions elements.</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button mat-dialog-close>Close</button>\\r\\n</div>\\r\\n\"","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-button (click)=\\\"openDialog()\\\">Launch dialog</button>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MatDialog} from '@angular/material';\r\n\r\n/**\r\n * @title Dialog elements\r\n */\r\n@Component({\r\n  selector: 'dialog-elements-example',\r\n  templateUrl: 'dialog-elements-example.html',\r\n  styleUrls: ['dialog-elements-example.css'],\r\n})\r\nexport class DialogElementsExample {\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog() {\r\n    this.dialog.open(DialogElementsExampleDialog);\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'dialog-elements-example-dialog',\r\n  templateUrl: 'dialog-elements-example-dialog.html',\r\n})\r\nexport class DialogElementsExampleDialog { }\r\n","module.exports = \"<h1 mat-dialog-title>Hi {{data.name}}</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p>What's your favorite animal?</p>\\r\\n  <mat-form-field>\\r\\n    <input matInput [(ngModel)]=\\\"data.animal\\\">\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data.animal\\\" cdkFocusInitial>Ok</button>\\r\\n</div>\\r\\n\"","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<ol>\\r\\n  <li>\\r\\n    <mat-form-field>\\r\\n      <input matInput [(ngModel)]=\\\"name\\\" placeholder=\\\"What's your name?\\\">\\r\\n    </mat-form-field>\\r\\n  </li>\\r\\n  <li>\\r\\n    <button mat-raised-button (click)=\\\"openDialog()\\\">Pick one</button>\\r\\n  </li>\\r\\n  <li *ngIf=\\\"animal\\\">\\r\\n    You chose: <i>{{animal}}</i>\\r\\n  </li>\\r\\n</ol>\\r\\n\"","import {Component, Inject} from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n/**\r\n * @title Dialog Overview\r\n */\r\n@Component({\r\n  selector: 'dialog-overview-example',\r\n  templateUrl: 'dialog-overview-example.html',\r\n  styleUrls: ['dialog-overview-example.css'],\r\n})\r\nexport class DialogOverviewExample {\r\n\r\n  animal: string;\r\n  name: string;\r\n\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  openDialog(): void {\r\n    let dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      width: '250px',\r\n      data: { name: this.name, animal: this.animal }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.animal = result;\r\n    });\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog-overview-example-dialog.html',\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-list>\\r\\n  <mat-list-item>Item 1</mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n  <mat-list-item>Item 2</mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n  <mat-list-item>Item 3</mat-list-item>\\r\\n</mat-list>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic divider\r\n */\r\n@Component({\r\n  selector: 'divider-overview-example',\r\n  templateUrl: 'divider-overview-example.html',\r\n  styleUrls: ['divider-overview-example.css'],\r\n})\r\nexport class DividerOverviewExample {}\r\n","module.exports = \".example-container {\\r\\n  padding: 16px;\\r\\n  margin-bottom: 16px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container\\\"\\r\\n    [class.mat-elevation-z2]=\\\"!isActive\\\"\\r\\n    [class.mat-elevation-z8]=\\\"isActive\\\">\\r\\n  Example\\r\\n</div>\\r\\n\\r\\n<button mat-button (click)=\\\"isActive = !isActive\\\">Toggle Elevation</button>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Elevation CSS classes\r\n */\r\n@Component({\r\n  selector: 'elevation-overview-example',\r\n  styleUrls: ['elevation-overview-example.css'],\r\n  templateUrl: 'elevation-overview-example.html',\r\n})\r\nexport class ElevationOverviewExample {\r\n  isActive = false;\r\n}\r\n","module.exports = \".example-action-buttons {\\r\\n  padding-bottom: 20px;\\r\\n}\\r\\n\\r\\n.example-headers-align .mat-expansion-panel-header-title,\\r\\n.example-headers-align .mat-expansion-panel-header-description {\\r\\n  flex-basis: 0;\\r\\n}\\r\\n\\r\\n.example-headers-align .mat-expansion-panel-header-description {\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-action-buttons\\\">\\r\\n    <button mat-button (click)=\\\"accordion.openAll()\\\">Expand All</button>\\r\\n    <button mat-button (click)=\\\"accordion.closeAll()\\\">Collapse All</button>\\r\\n</div>\\r\\n<mat-accordion class=\\\"example-headers-align\\\" [multi]=\\\"true\\\">\\r\\n    <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n                Personal data\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n                Type your name and age\\r\\n                <mat-icon>account_circle</mat-icon>\\r\\n            </mat-panel-description>\\r\\n        </mat-expansion-panel-header>\\r\\n\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"First name\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n            <input matInput type=\\\"number\\\" min=\\\"1\\\" placeholder=\\\"Age\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n    </mat-expansion-panel>\\r\\n\\r\\n    <mat-expansion-panel [disabled]=\\\"true\\\">\\r\\n        <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n                Destination\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n                Type the country name\\r\\n                <mat-icon>map</mat-icon>\\r\\n            </mat-panel-description>\\r\\n        </mat-expansion-panel-header>\\r\\n\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Country\\\">\\r\\n        </mat-form-field>\\r\\n    </mat-expansion-panel>\\r\\n\\r\\n    <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n                Day of the trip\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n                Inform the date you wish to travel\\r\\n                <mat-icon>date_range</mat-icon>\\r\\n            </mat-panel-description>\\r\\n        </mat-expansion-panel-header>\\r\\n\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\" readonly>\\r\\n        </mat-form-field>\\r\\n        <mat-datepicker #picker></mat-datepicker>\\r\\n    </mat-expansion-panel>\\r\\n\\r\\n</mat-accordion>\\r\\n\"","import {Component, ViewChild} from '@angular/core';\r\nimport {MatAccordion} from '@angular/material';\r\n\r\n/**\r\n * @title Accordion with expand/collapse all toggles\r\n */\r\n@Component({\r\n  selector: 'expansion-toggle-all-example',\r\n  templateUrl: 'expansion-expand-collapse-all-example.html',\r\n  styleUrls: ['expansion-expand-collapse-all-example.css']\r\n})\r\nexport class ExpansionExpandCollapseAllExample {\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-accordion>\\r\\n  <mat-expansion-panel>\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Personal data\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        Type your name and age\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"First name\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Age\\\">\\r\\n    </mat-form-field>\\r\\n  </mat-expansion-panel>\\r\\n  <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\"\\r\\n                       (closed)=\\\"panelOpenState = false\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Self aware panel\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        Currently I am {{panelOpenState ? 'open' : 'closed'}}\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    <p>I'm visible because I am open</p>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic expansion panel\r\n */\r\n@Component({\r\n  selector: 'expansion-overview-example',\r\n  templateUrl: 'expansion-overview-example.html',\r\n  styleUrls: ['expansion-overview-example.css'],\r\n})\r\nexport class ExpansionOverviewExample {\r\n  panelOpenState: boolean = false;\r\n}\r\n","module.exports = \".example-headers-align .mat-expansion-panel-header-title, \\r\\n.example-headers-align .mat-expansion-panel-header-description {\\r\\n  flex-basis: 0;\\r\\n}\\r\\n\\r\\n.example-headers-align .mat-expansion-panel-header-description {\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n}\\r\\n\"","module.exports = \"<mat-accordion class=\\\"example-headers-align\\\">\\r\\n  <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle=\\\"true\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Personal data\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        Type your name and age\\r\\n        <mat-icon>account_circle</mat-icon>\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"First name\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"number\\\" min=\\\"1\\\" placeholder=\\\"Age\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-action-row>\\r\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n    </mat-action-row>\\r\\n  </mat-expansion-panel>\\r\\n\\r\\n  <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle=\\\"true\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Destination\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        Type the country name\\r\\n        <mat-icon>map</mat-icon>\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Country\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-action-row>\\r\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n    </mat-action-row>\\r\\n  </mat-expansion-panel>\\r\\n\\r\\n  <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle=\\\"true\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Day of the trip\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        Inform the date you wish to travel\\r\\n        <mat-icon>date_range</mat-icon>\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\" readonly>\\r\\n    </mat-form-field>\\r\\n    <mat-datepicker #picker></mat-datepicker>\\r\\n\\r\\n    <mat-action-row>\\r\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">End</button>\\r\\n    </mat-action-row>\\r\\n  </mat-expansion-panel>\\r\\n\\r\\n</mat-accordion>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Expansion panel as accordion\r\n */\r\n@Component({\r\n  selector: 'expansion-steps-example',\r\n  templateUrl: 'expansion-steps-example.html',\r\n  styleUrls: ['expansion-steps-example.css']\r\n})\r\nexport class ExpansionStepsExample {\r\n  step = 0;\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n}\r\n","module.exports = \".example-focus-monitor {\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\n.example-focus-monitor .cdk-mouse-focused {\\r\\n  background: rgba(255, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.example-focus-monitor .cdk-keyboard-focused {\\r\\n  background: rgba(0, 255, 0, 0.5);\\r\\n}\\r\\n\\r\\n.example-focus-monitor .cdk-touch-focused {\\r\\n  background: rgba(0, 0, 255, 0.5);\\r\\n}\\r\\n\\r\\n.example-focus-monitor .cdk-program-focused {\\r\\n  background: rgba(255, 0, 255, 0.5);\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-focus-monitor\\\">\\r\\n  <button cdkMonitorSubtreeFocus\\r\\n          (cdkFocusChange)=\\\"elementOrigin = formatOrigin($event); markForCheck()\\\">\\r\\n    Focus Monitored Element ({{elementOrigin}})\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"example-focus-monitor\\\">\\r\\n  <div cdkMonitorSubtreeFocus\\r\\n       (cdkFocusChange)=\\\"subtreeOrigin = formatOrigin($event); markForCheck()\\\">\\r\\n    <p>Focus Monitored Subtree ({{subtreeOrigin}})</p>\\r\\n    <button>Child Button 1</button>\\r\\n    <button>Child Button 2</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {FocusOrigin} from '@angular/cdk/a11y';\r\nimport {ChangeDetectorRef, Component, NgZone} from '@angular/core';\r\n\r\n/** @title Monitoring focus with FocusMonitor */\r\n@Component({\r\n  selector: 'focus-monitor-directives-example',\r\n  templateUrl: 'focus-monitor-directives-example.html',\r\n  styleUrls: ['focus-monitor-directives-example.css']\r\n})\r\nexport class FocusMonitorDirectivesExample {\r\n  elementOrigin: string = this.formatOrigin(null);\r\n  subtreeOrigin: string = this.formatOrigin(null);\r\n\r\n  constructor(private ngZone: NgZone, private cdr: ChangeDetectorRef) {}\r\n\r\n\r\n  formatOrigin(origin: FocusOrigin): string {\r\n    return origin ? origin + ' focused' : 'blurred';\r\n  }\r\n\r\n  // Workaround for the fact that (cdkFocusChange) emits outside NgZone.\r\n  markForCheck() {\r\n    this.ngZone.run(() => this.cdr.markForCheck());\r\n  }\r\n}\r\n","module.exports = \".example-focus-monitor {\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\n.example-focus-monitor .cdk-mouse-focused {\\r\\n  background: rgba(255, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.example-focus-monitor .cdk-keyboard-focused {\\r\\n  background: rgba(0, 255, 0, 0.5);\\r\\n}\\r\\n\\r\\n.example-focus-monitor .cdk-touch-focused {\\r\\n  background: rgba(0, 0, 255, 0.5);\\r\\n}\\r\\n\\r\\n.example-focus-monitor .cdk-program-focused {\\r\\n  background: rgba(255, 0, 255, 0.5);\\r\\n}\\r\\n\\r\\n.example-focus-monitor button:focus {\\r\\n  box-shadow: 0 0 30px cyan;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-focus-monitor\\\">\\r\\n  <button #monitored>1. Focus Monitored Element ({{origin}})</button>\\r\\n  <button #unmonitored>2. Not Monitored</button>\\r\\n</div>\\r\\n\\r\\n<mat-form-field>\\r\\n  <mat-label>Simulated focus origin</mat-label>\\r\\n  <mat-select #simulatedOrigin value=\\\"mouse\\\">\\r\\n    <mat-option value=\\\"mouse\\\">Mouse</mat-option>\\r\\n    <mat-option value=\\\"keyboard\\\">Keyboard</mat-option>\\r\\n    <mat-option value=\\\"touch\\\">Touch</mat-option>\\r\\n    <mat-option value=\\\"program\\\">Programmatic</mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\\r\\n<button (click)=\\\"focusMonitor.focusVia(monitored, simulatedOrigin.value)\\\">\\r\\n  Focus button #1\\r\\n</button>\\r\\n<button (click)=\\\"focusMonitor.focusVia(unmonitored, simulatedOrigin.value)\\\">\\r\\n  Focus button #2\\r\\n</button>\\r\\n\"","import {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\n/** @title Focusing with a specific FocusOrigin */\r\n@Component({\r\n  selector: 'focus-monitor-focus-via-example',\r\n  templateUrl: 'focus-monitor-focus-via-example.html',\r\n  styleUrls: ['focus-monitor-focus-via-example.css']\r\n})\r\nexport class FocusMonitorFocusViaExample implements OnDestroy, OnInit {\r\n  @ViewChild('monitored') monitoredEl: ElementRef;\r\n\r\n  origin: string = this.formatOrigin(null);\r\n\r\n  constructor(public focusMonitor: FocusMonitor,\r\n              private cdr: ChangeDetectorRef,\r\n              private ngZone: NgZone) {}\r\n\r\n  ngOnInit() {\r\n    this.focusMonitor.monitor(this.monitoredEl.nativeElement)\r\n        .subscribe(origin => this.ngZone.run(() => {\r\n          this.origin = this.formatOrigin(origin);\r\n          this.cdr.markForCheck();\r\n        }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.focusMonitor.stopMonitoring(this.monitoredEl.nativeElement);\r\n  }\r\n\r\n  formatOrigin(origin: FocusOrigin): string {\r\n    return origin ? origin + ' focused' : 'blurred';\r\n  }\r\n}\r\n","module.exports = \".example-focus-monitor {\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\n.example-focus-monitor .cdk-mouse-focused {\\r\\n  background: rgba(255, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.example-focus-monitor .cdk-keyboard-focused {\\r\\n  background: rgba(0, 255, 0, 0.5);\\r\\n}\\r\\n\\r\\n.example-focus-monitor .cdk-touch-focused {\\r\\n  background: rgba(0, 0, 255, 0.5);\\r\\n}\\r\\n\\r\\n.example-focus-monitor .cdk-program-focused {\\r\\n  background: rgba(255, 0, 255, 0.5);\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-focus-monitor\\\">\\r\\n  <button #element>Focus Monitored Element ({{elementOrigin}})</button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"example-focus-monitor\\\">\\r\\n  <div #subtree>\\r\\n    <p>Focus Monitored Subtree ({{subtreeOrigin}})</p>\\r\\n    <button>Child Button 1</button>\\r\\n    <button>Child Button 2</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\n/** @title Monitoring focus with FocusMonitor */\r\n@Component({\r\n  selector: 'focus-monitor-overview-example',\r\n  templateUrl: 'focus-monitor-overview-example.html',\r\n  styleUrls: ['focus-monitor-overview-example.css']\r\n})\r\nexport class FocusMonitorOverviewExample implements OnDestroy, OnInit {\r\n  @ViewChild('element') element: ElementRef;\r\n  @ViewChild('subtree') subtree: ElementRef;\r\n\r\n  elementOrigin: string = this.formatOrigin(null);\r\n  subtreeOrigin: string = this.formatOrigin(null);\r\n\r\n  constructor(private focusMonitor: FocusMonitor,\r\n              private cdr: ChangeDetectorRef,\r\n              private ngZone: NgZone) {}\r\n\r\n  ngOnInit() {\r\n    this.focusMonitor.monitor(this.element.nativeElement)\r\n        .subscribe(origin => this.ngZone.run(() => {\r\n          this.elementOrigin = this.formatOrigin(origin);\r\n          this.cdr.markForCheck();\r\n        }));\r\n    this.focusMonitor.monitor(this.subtree.nativeElement, true)\r\n        .subscribe(origin => this.ngZone.run(() => {\r\n          this.subtreeOrigin = this.formatOrigin(origin);\r\n          this.cdr.markForCheck();\r\n        }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.focusMonitor.stopMonitoring(this.element.nativeElement);\r\n    this.focusMonitor.stopMonitoring(this.subtree.nativeElement);\r\n  }\r\n\r\n  formatOrigin(origin: FocusOrigin): string {\r\n    return origin ? origin + ' focused' : 'blurred';\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<p>\\r\\n  <mat-form-field appearance=\\\"legacy\\\">\\r\\n    <mat-label>Legacy form field</mat-label>\\r\\n    <input matInput placeholder=\\\"Placeholder\\\">\\r\\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\\r\\n    <mat-hint>Hint</mat-hint>\\r\\n  </mat-form-field>\\r\\n</p>\\r\\n<p>\\r\\n  <mat-form-field appearance=\\\"standard\\\">\\r\\n    <mat-label>Standard form field</mat-label>\\r\\n    <input matInput placeholder=\\\"Placeholder\\\">\\r\\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\\r\\n    <mat-hint>Hint</mat-hint>\\r\\n  </mat-form-field>\\r\\n</p>\\r\\n<p>\\r\\n  <mat-form-field appearance=\\\"fill\\\">\\r\\n    <mat-label>Fill form field</mat-label>\\r\\n    <input matInput placeholder=\\\"Placeholder\\\">\\r\\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\\r\\n    <mat-hint>Hint</mat-hint>\\r\\n  </mat-form-field>\\r\\n</p>\\r\\n<p>\\r\\n  <mat-form-field appearance=\\\"outline\\\">\\r\\n    <mat-label>Outline form field</mat-label>\\r\\n    <input matInput placeholder=\\\"Placeholder\\\">\\r\\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\\r\\n    <mat-hint>Hint</mat-hint>\\r\\n  </mat-form-field>\\r\\n</p>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Form field appearance variants */\r\n@Component({\r\n  selector: 'form-field-appearance-example',\r\n  templateUrl: 'form-field-appearance-example.html',\r\n  styleUrls: ['form-field-appearance-example.css']\r\n})\r\nexport class FormFieldAppearanceExample {}\r\n","module.exports = \"div {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\ninput {\\r\\n  border: none;\\r\\n  background: none;\\r\\n  padding: 0;\\r\\n  outline: none;\\r\\n  font: inherit;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nspan {\\r\\n  opacity: 0;\\r\\n  transition: opacity 200ms;\\r\\n}\\r\\n\\r\\n:host.floating span {\\r\\n  opacity: 1;\\r\\n}\\r\\n\"","module.exports = \"<div [formGroup]=\\\"parts\\\">\\r\\n  <input class=\\\"area\\\" formControlName=\\\"area\\\" size=\\\"3\\\">\\r\\n  <span>&ndash;</span>\\r\\n  <input class=\\\"exchange\\\" formControlName=\\\"exchange\\\" size=\\\"3\\\">\\r\\n  <span>&ndash;</span>\\r\\n  <input class=\\\"subscriber\\\" formControlName=\\\"subscriber\\\" size=\\\"4\\\">\\r\\n</div>\\r\\n\"","import {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Component, ElementRef, Input, OnDestroy} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {MatFormFieldControl} from '@angular/material';\r\nimport {Subject} from 'rxjs';\r\n\r\n\r\n/** Data structure for holding telephone number. */\r\nexport class MyTel {\r\n  constructor(public area: string, public exchange: string, public subscriber: string) {}\r\n}\r\n\r\n\r\n/** Custom `MatFormFieldControl` for telephone number input. */\r\n@Component({\r\n  selector: 'my-tel-input',\r\n  templateUrl: 'form-field-custom-control-example.html',\r\n  styleUrls: ['form-field-custom-control-example.css'],\r\n  providers: [{provide: MatFormFieldControl, useExisting: MyTelInput}],\r\n  host: {\r\n    '[class.floating]': 'shouldLabelFloat',\r\n    '[id]': 'id',\r\n    '[attr.aria-describedby]': 'describedBy',\r\n  }\r\n})\r\nexport class MyTelInput implements MatFormFieldControl<MyTel>, OnDestroy {\r\n  static nextId = 0;\r\n\r\n  parts: FormGroup;\r\n\r\n  stateChanges = new Subject<void>();\r\n\r\n  focused = false;\r\n\r\n  ngControl = null;\r\n\r\n  errorState = false;\r\n\r\n  controlType = 'my-tel-input';\r\n\r\n  get empty() {\r\n    let n = this.parts.value;\r\n    return !n.area && !n.exchange && !n.subscriber;\r\n  }\r\n\r\n  get shouldLabelFloat() { return this.focused || !this.empty; }\r\n\r\n  id = `my-tel-input-${MyTelInput.nextId++}`;\r\n\r\n  describedBy = '';\r\n\r\n  @Input()\r\n  get placeholder() { return this._placeholder; }\r\n  set placeholder(plh) {\r\n    this._placeholder = plh;\r\n    this.stateChanges.next();\r\n  }\r\n  private _placeholder: string;\r\n\r\n  @Input()\r\n  get required() { return this._required; }\r\n  set required(req) {\r\n    this._required = coerceBooleanProperty(req);\r\n    this.stateChanges.next();\r\n  }\r\n  private _required = false;\r\n\r\n  @Input()\r\n  get disabled() { return this._disabled; }\r\n  set disabled(dis) {\r\n    this._disabled = coerceBooleanProperty(dis);\r\n    this.stateChanges.next();\r\n  }\r\n  private _disabled = false;\r\n\r\n  @Input()\r\n  get value(): MyTel | null {\r\n    let n = this.parts.value;\r\n    if (n.area.length == 3 && n.exchange.length == 3 && n.subscriber.length == 4) {\r\n      return new MyTel(n.area, n.exchange, n.subscriber);\r\n    }\r\n    return null;\r\n  }\r\n  set value(tel: MyTel | null) {\r\n    tel = tel || new MyTel('', '', '');\r\n    this.parts.setValue({area: tel.area, exchange: tel.exchange, subscriber: tel.subscriber});\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  constructor(fb: FormBuilder, private fm: FocusMonitor, private elRef: ElementRef) {\r\n    this.parts = fb.group({\r\n      'area': '',\r\n      'exchange': '',\r\n      'subscriber': '',\r\n    });\r\n\r\n    fm.monitor(elRef.nativeElement, true).subscribe((origin) => {\r\n      this.focused = !!origin;\r\n      this.stateChanges.next();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n    this.fm.stopMonitoring(this.elRef.nativeElement);\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]) {\r\n    this.describedBy = ids.join(' ');\r\n  }\r\n\r\n  onContainerClick(event: MouseEvent) {\r\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\r\n      this.elRef.nativeElement.querySelector('input').focus();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/** @title Form field with custom telephone number input control. */\r\n@Component({\r\n  selector: 'form-field-custom-control-example',\r\n  template: `\r\n    <mat-form-field>\r\n      <my-tel-input placeholder=\"Phone number\" required></my-tel-input>\r\n      <mat-icon matSuffix>phone</mat-icon>\r\n      <mat-hint>Include area code</mat-hint>\r\n    </mat-form-field>\r\n  `\r\n})\r\nexport class FormFieldCustomControlExample {}\r\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container\\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required>\\r\\n    <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\n\r\n/** @title Form field with error messages */\r\n@Component({\r\n  selector: 'form-field-error-example',\r\n  templateUrl: 'form-field-error-example.html',\r\n  styleUrls: ['form-field-error-example.css']\r\n})\r\nexport class FormFieldErrorExample {\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  getErrorMessage() {\r\n    return this.email.hasError('required') ? 'You must enter a value' :\r\n        this.email.hasError('email') ? 'Not a valid email' :\r\n            '';\r\n  }\r\n}\r\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container\\\">\\r\\n  <mat-form-field hintLabel=\\\"Max 10 characters\\\">\\r\\n    <input matInput #input maxlength=\\\"10\\\" placeholder=\\\"Enter some input\\\">\\r\\n    <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/10</mat-hint>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-select placeholder=\\\"Select me\\\">\\r\\n      <mat-option value=\\\"option\\\">Option</mat-option>\\r\\n    </mat-select>\\r\\n    <mat-hint align=\\\"end\\\">Here's the dropdown arrow ^</mat-hint>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Form field with hints */\r\n@Component({\r\n  selector: 'form-field-hint-example',\r\n  templateUrl: 'form-field-hint-example.html',\r\n  styleUrls: ['form-field-hint-example.css']\r\n})\r\nexport class FormFieldHintExample {}\r\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-container form {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.example-container form > * {\\r\\n  margin: 5px 0;\\r\\n}\\r\\n\\r\\n.example-container .mat-radio-button {\\r\\n  margin: 0 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container\\\">\\r\\n  <form class=\\\"example-container\\\" [formGroup]=\\\"options\\\">\\r\\n    <mat-checkbox formControlName=\\\"hideRequired\\\">Hide required marker</mat-checkbox>\\r\\n    <div>\\r\\n      <label>Float label: </label>\\r\\n      <mat-radio-group formControlName=\\\"floatLabel\\\">\\r\\n        <mat-radio-button value=\\\"auto\\\">Auto</mat-radio-button>\\r\\n        <mat-radio-button value=\\\"always\\\">Always</mat-radio-button>\\r\\n        <mat-radio-button value=\\\"never\\\">Never</mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <mat-form-field\\r\\n      [hideRequiredMarker]=\\\"options.value.hideRequired\\\"\\r\\n      [floatLabel]=\\\"options.value.floatLabel\\\">\\r\\n    <input matInput placeholder=\\\"Simple placeholder\\\" required>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\r\\n    <mat-label>Both a label and a placeholder</mat-label>\\r\\n    <input matInput placeholder=\\\"Simple placeholder\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field\\r\\n      [hideRequiredMarker]=\\\"options.value.hideRequired\\\"\\r\\n      [floatLabel]=\\\"options.value.floatLabel\\\">\\r\\n    <mat-select required>\\r\\n      <mat-option>-- None --</mat-option>\\r\\n      <mat-option value=\\\"option\\\">Option</mat-option>\\r\\n    </mat-select>\\r\\n    <mat-label><mat-icon>favorite</mat-icon> <b> Fancy</b> <i> label</i></mat-label>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\n\r\n/** @title Form field with label */\r\n@Component({\r\n  selector: 'form-field-label-example',\r\n  templateUrl: 'form-field-label-example.html',\r\n  styleUrls: ['form-field-label-example.css']\r\n})\r\nexport class FormFieldLabelExample {\r\n  options: FormGroup;\r\n\r\n  constructor(fb: FormBuilder) {\r\n    this.options = fb.group({\r\n      hideRequired: false,\r\n      floatLabel: 'auto',\r\n    });\r\n  }\r\n}\r\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container\\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Input\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <textarea matInput placeholder=\\\"Textarea\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-select placeholder=\\\"Select\\\">\\r\\n      <mat-option value=\\\"option\\\">Option</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Simple form field */\r\n@Component({\r\n  selector: 'form-field-overview-example',\r\n  templateUrl: 'form-field-overview-example.html',\r\n  styleUrls: ['form-field-overview-example.css']\r\n})\r\nexport class FormFieldOverviewExample {}\r\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-right-align {\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\ninput.example-right-align::-webkit-outer-spin-button,\\r\\ninput.example-right-align::-webkit-inner-spin-button {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\ninput.example-right-align {\\r\\n  -moz-appearance: textfield;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container\\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Amount\\\" type=\\\"number\\\" class=\\\"example-right-align\\\">\\r\\n    <span matPrefix>$&nbsp;</span>\\r\\n    <span matSuffix>.00</span>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Form field with prefix & suffix */\r\n@Component({\r\n  selector: 'form-field-prefix-suffix-example',\r\n  templateUrl: 'form-field-prefix-suffix-example.html',\r\n  styleUrls: ['form-field-prefix-suffix-example.css']\r\n})\r\nexport class FormFieldPrefixSuffixExample {\r\n  hide = true;\r\n}\r\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"example-container\\\" [formGroup]=\\\"options\\\" [style.fontSize.px]=\\\"getFontSize()\\\">\\r\\n  <mat-form-field [color]=\\\"options.value.color\\\">\\r\\n    <mat-select placeholder=\\\"Color\\\" formControlName=\\\"color\\\">\\r\\n      <mat-option value=\\\"primary\\\">Primary</mat-option>\\r\\n      <mat-option value=\\\"accent\\\">Accent</mat-option>\\r\\n      <mat-option value=\\\"warn\\\">Warn</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field [color]=\\\"options.value.color\\\">\\r\\n    <input matInput type=\\\"number\\\" placeholder=\\\"Font size (px)\\\" formControlName=\\\"fontSize\\\" min=\\\"10\\\">\\r\\n    <mat-error *ngIf=\\\"options.get('fontSize')?.invalid\\\">Min size: 10px</mat-error>\\r\\n  </mat-form-field>\\r\\n</form>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\n/** @title Form field theming */\r\n@Component({\r\n  selector: 'form-field-theming-example',\r\n  templateUrl: 'form-field-theming-example.html',\r\n  styleUrls: ['form-field-theming-example.css']\r\n})\r\nexport class FormFieldThemingExample {\r\n  options: FormGroup;\r\n\r\n  constructor(fb: FormBuilder) {\r\n    this.options = fb.group({\r\n      'color': 'primary',\r\n      'fontSize': [16, Validators.min(10)],\r\n    });\r\n  }\r\n\r\n  getFontSize() {\r\n    return Math.max(10, this.options.value.fontSize);\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\r\\n  <mat-grid-tile\\r\\n      *ngFor=\\\"let tile of tiles\\\"\\r\\n      [colspan]=\\\"tile.cols\\\"\\r\\n      [rowspan]=\\\"tile.rows\\\"\\r\\n      [style.background]=\\\"tile.color\\\">\\r\\n    {{tile.text}}\\r\\n  </mat-grid-tile>\\r\\n</mat-grid-list>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Dynamic grid-list\r\n */\r\n@Component({\r\n  selector: 'grid-list-dynamic-example',\r\n  templateUrl: 'grid-list-dynamic-example.html',\r\n  styleUrls: ['grid-list-dynamic-example.css'],\r\n})\r\nexport class GridListDynamicExample {\r\n  tiles = [\r\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\r\n  ];\r\n}\r\n","module.exports = \"mat-grid-tile {\\r\\n  background: lightblue;\\r\\n}\\r\\n\"","module.exports = \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"2:1\\\">\\r\\n  <mat-grid-tile>1</mat-grid-tile>\\r\\n  <mat-grid-tile>2</mat-grid-tile>\\r\\n  <mat-grid-tile>3</mat-grid-tile>\\r\\n  <mat-grid-tile>4</mat-grid-tile>\\r\\n</mat-grid-list>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic grid-list\r\n */\r\n@Component({\r\n  selector: 'grid-list-overview-example',\r\n  styleUrls: ['grid-list-overview-example.css'],\r\n  templateUrl: 'grid-list-overview-example.html',\r\n})\r\nexport class GridListOverviewExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-icon>home</mat-icon>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic icons\r\n */\r\n@Component({\r\n  selector: 'icon-overview-example',\r\n  templateUrl: 'icon-overview-example.html',\r\n  styleUrls: ['icon-overview-example.css']\r\n})\r\nexport class IconOverviewExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-icon svgIcon=\\\"thumbs-up\\\"></mat-icon>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {MatIconRegistry} from '@angular/material';\r\n\r\n/**\r\n * @title SVG icons\r\n */\r\n@Component({\r\n  selector: 'icon-svg-example',\r\n  templateUrl: 'icon-svg-example.html',\r\n  styleUrls: ['icon-svg-example.css'],\r\n})\r\nexport class IconSvgExample {\r\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\r\n    iconRegistry.addSvgIcon(\r\n        'thumbs-up',\r\n        sanitizer.bypassSecurityTrustResourceUrl('assets/img/examples/thumbup-icon.svg'));\r\n  }\r\n}\r\n","module.exports = \".example-form-field {\\r\\n  width: 200px;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field class=\\\"example-form-field\\\">\\r\\n  <input matInput type=\\\"text\\\" placeholder=\\\"Clearable input\\\" [(ngModel)]=\\\"value\\\"/>\\r\\n  <button mat-button *ngIf=\\\"value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"value=''\\\">\\r\\n    <mat-icon>close</mat-icon>\\r\\n  </button>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Input with a clear button\r\n */\r\n@Component({\r\n  selector: 'input-clearable-example',\r\n  templateUrl: './input-clearable-example.html',\r\n  styleUrls: ['./input-clearable-example.css'],\r\n})\r\nexport class InputClearableExample {\r\n  value = 'Clear me';\r\n}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\"\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-hint>Errors appear instantly!</mat-hint>\\r\\n    <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\r\\n      Please enter a valid email address\\r\\n    </mat-error>\\r\\n    <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\r\\n      Email is <strong>required</strong>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n</form>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n/** @title Input with a custom ErrorStateMatcher */\r\n@Component({\r\n  selector: 'input-error-state-matcher-example',\r\n  templateUrl: './input-error-state-matcher-example.html',\r\n  styleUrls: ['./input-error-state-matcher-example.css'],\r\n})\r\nexport class InputErrorStateMatcherExample {\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\">\\r\\n    <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\r\\n      Please enter a valid email address\\r\\n    </mat-error>\\r\\n    <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\r\\n      Email is <strong>required</strong>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n</form>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\n\r\n/**\r\n * @title Input with error messages\r\n */\r\n@Component({\r\n  selector: 'input-errors-example',\r\n  templateUrl: 'input-errors-example.html',\r\n  styleUrls: ['input-errors-example.css'],\r\n})\r\nexport class InputErrorsExample {\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Company (disabled)\\\" disabled value=\\\"Google\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\r\\n    <td><mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"First name\\\">\\r\\n    </mat-form-field></td>\\r\\n    <td><mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"Long Last Name That Will Be Truncated\\\">\\r\\n    </mat-form-field></td>\\r\\n  </tr></table>\\r\\n\\r\\n  <p>\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <textarea matInput placeholder=\\\"Address\\\">1600 Amphitheatre Pkwy</textarea>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <textarea matInput placeholder=\\\"Address 2\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n  </p>\\r\\n\\r\\n  <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\r\\n    <td><mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"City\\\">\\r\\n    </mat-form-field></td>\\r\\n    <td><mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"State\\\">\\r\\n    </mat-form-field></td>\\r\\n    <td><mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput #postalCode maxlength=\\\"5\\\" placeholder=\\\"Postal Code\\\" value=\\\"94043\\\">\\r\\n      <mat-hint align=\\\"end\\\">{{postalCode.value.length}} / 5</mat-hint>\\r\\n    </mat-form-field></td>\\r\\n  </tr></table>\\r\\n</form>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Inputs in a form\r\n */\r\n@Component({\r\n  selector: 'input-form-example',\r\n  templateUrl: 'input-form-example.html',\r\n  styleUrls: ['input-form-example.css'],\r\n})\r\nexport class InputFormExample {}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput #message maxlength=\\\"256\\\" placeholder=\\\"Message\\\">\\r\\n    <mat-hint align=\\\"start\\\"><strong>Don't disclose personal info</strong> </mat-hint>\\r\\n    <mat-hint align=\\\"end\\\">{{message.value.length}} / 256</mat-hint>\\r\\n  </mat-form-field>\\r\\n  \\r\\n</form>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Input with hints\r\n */\r\n@Component({\r\n  selector: 'input-hint-example',\r\n  templateUrl: 'input-hint-example.html',\r\n  styleUrls: ['input-hint-example.css'],\r\n})\r\nexport class InputHintExample {}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Favorite food\\\" value=\\\"Sushi\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <textarea matInput placeholder=\\\"Leave a comment\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n</form>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic Inputs\r\n */\r\n@Component({\r\n  selector: 'input-overview-example',\r\n  styleUrls: ['input-overview-example.css'],\r\n  templateUrl: 'input-overview-example.html',\r\n})\r\nexport class InputOverviewExample {}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <span matPrefix>+1 &nbsp;</span>\\r\\n    <input type=\\\"tel\\\" matInput placeholder=\\\"Telephone\\\">\\r\\n    <mat-icon matSuffix>mode_edit</mat-icon>\\r\\n  </mat-form-field>\\r\\n  \\r\\n</form>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Inputs with prefixes and suffixes\r\n */\r\n@Component({\r\n  selector: 'input-prefix-suffix-example',\r\n  templateUrl: 'input-prefix-suffix-example.html',\r\n  styleUrls: ['input-prefix-suffix-example.css'],\r\n})\r\nexport class InputPrefixSuffixExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-list role=\\\"list\\\">\\r\\n  <mat-list-item role=\\\"listitem\\\">Item 1</mat-list-item>\\r\\n  <mat-list-item role=\\\"listitem\\\">Item 2</mat-list-item>\\r\\n  <mat-list-item role=\\\"listitem\\\">Item 3</mat-list-item>\\r\\n</mat-list>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic list\r\n */\r\n@Component({\r\n  selector: 'list-overview-example',\r\n  templateUrl: 'list-overview-example.html',\r\n  styleUrls: ['list-overview-example.css'],\r\n})\r\nexport class ListOverviewExample {}\r\n","module.exports = \".mat-list-icon {\\r\\n  color: rgba(0, 0, 0, 0.54);\\r\\n}\\r\\n\"","module.exports = \"<mat-list>\\r\\n  <h3 mat-subheader>Folders</h3>\\r\\n  <mat-list-item *ngFor=\\\"let folder of folders\\\">\\r\\n    <mat-icon mat-list-icon>folder</mat-icon>\\r\\n    <h4 mat-line>{{folder.name}}</h4>\\r\\n    <p mat-line> {{folder.updated | date}} </p>\\r\\n  </mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n  <h3 mat-subheader>Notes</h3>\\r\\n  <mat-list-item *ngFor=\\\"let note of notes\\\">\\r\\n    <mat-icon mat-list-icon>note</mat-icon>\\r\\n    <h4 mat-line>{{note.name}}</h4>\\r\\n    <p mat-line> {{note.updated | date}} </p>\\r\\n  </mat-list-item>\\r\\n</mat-list>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title List with sections\r\n */\r\n@Component({\r\n  selector: 'list-sections-example',\r\n  styleUrls: ['list-sections-example.css'],\r\n  templateUrl: 'list-sections-example.html',\r\n})\r\nexport class ListSectionsExample {\r\n  folders = [\r\n    {\r\n      name: 'Photos',\r\n      updated: new Date('1/1/16'),\r\n    },\r\n    {\r\n      name: 'Recipes',\r\n      updated: new Date('1/17/16'),\r\n    },\r\n    {\r\n      name: 'Work',\r\n      updated: new Date('1/28/16'),\r\n    }\r\n  ];\r\n  notes = [\r\n    {\r\n      name: 'Vacation Itinerary',\r\n      updated: new Date('2/20/16'),\r\n    },\r\n    {\r\n      name: 'Kitchen Remodel',\r\n      updated: new Date('1/18/16'),\r\n    }\r\n  ];\r\n}\r\n","module.exports = \"/** No styles for this example. */\\r\\n\"","module.exports = \"<mat-selection-list #shoes>\\r\\n  <mat-list-option *ngFor=\\\"let shoe of typesOfShoes\\\">\\r\\n    {{shoe}}\\r\\n  </mat-list-option>\\r\\n</mat-selection-list>\\r\\n\\r\\n<p>\\r\\n  Options selected: {{shoes.selectedOptions.selected.length}}\\r\\n</p>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title List with selection\r\n */\r\n@Component({\r\n  selector: 'list-selection-example',\r\n  styleUrls: ['list-selection-example.css'],\r\n  templateUrl: 'list-selection-example.html',\r\n})\r\nexport class ListSelectionExample {\r\n  typesOfShoes = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n  <mat-icon>more_vert</mat-icon>\\r\\n</button>\\r\\n<mat-menu #menu=\\\"matMenu\\\">\\r\\n  <button mat-menu-item>\\r\\n    <mat-icon>dialpad</mat-icon>\\r\\n    <span>Redial</span>\\r\\n  </button>\\r\\n  <button mat-menu-item disabled>\\r\\n    <mat-icon>voicemail</mat-icon>\\r\\n    <span>Check voicemail</span>\\r\\n  </button>\\r\\n  <button mat-menu-item>\\r\\n    <mat-icon>notifications_off</mat-icon>\\r\\n    <span>Disable alerts</span>\\r\\n  </button>\\r\\n</mat-menu>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Menu with icons\r\n */\r\n@Component({\r\n  selector: 'menu-icons-example',\r\n  templateUrl: 'menu-icons-example.html',\r\n  styleUrls: ['menu-icons-example.css'],\r\n})\r\nexport class MenuIconsExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</button>\\r\\n<mat-menu #menu=\\\"matMenu\\\">\\r\\n  <button mat-menu-item>Item 1</button>\\r\\n  <button mat-menu-item>Item 2</button>\\r\\n</mat-menu>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic menu\r\n */\r\n@Component({\r\n  selector: 'menu-overview-example',\r\n  templateUrl: 'menu-overview-example.html',\r\n  styleUrls: ['menu-overview-example.css'],\r\n})\r\nexport class MenuOverviewExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-button [matMenuTriggerFor]=\\\"animals\\\">Animal index</button>\\r\\n\\r\\n<mat-menu #animals=\\\"matMenu\\\">\\r\\n  <button mat-menu-item [matMenuTriggerFor]=\\\"vertebrates\\\">Vertebrates</button>\\r\\n  <button mat-menu-item [matMenuTriggerFor]=\\\"invertebrates\\\">Invertebrates</button>\\r\\n</mat-menu>\\r\\n\\r\\n<mat-menu #vertebrates=\\\"matMenu\\\">\\r\\n  <button mat-menu-item [matMenuTriggerFor]=\\\"fish\\\">Fishes</button>\\r\\n  <button mat-menu-item [matMenuTriggerFor]=\\\"amphibians\\\">Amphibians</button>\\r\\n  <button mat-menu-item [matMenuTriggerFor]=\\\"reptiles\\\">Reptiles</button>\\r\\n  <button mat-menu-item>Birds</button>\\r\\n  <button mat-menu-item>Mammals</button>\\r\\n</mat-menu>\\r\\n\\r\\n<mat-menu #invertebrates=\\\"matMenu\\\">\\r\\n  <button mat-menu-item>Insects</button>\\r\\n  <button mat-menu-item>Molluscs</button>\\r\\n  <button mat-menu-item>Crustaceans</button>\\r\\n  <button mat-menu-item>Corals</button>\\r\\n  <button mat-menu-item>Arachnids</button>\\r\\n  <button mat-menu-item>Velvet worms</button>\\r\\n  <button mat-menu-item>Horseshoe crabs</button>\\r\\n</mat-menu>\\r\\n\\r\\n<mat-menu #fish=\\\"matMenu\\\">\\r\\n  <button mat-menu-item>Baikal oilfish</button>\\r\\n  <button mat-menu-item>Bala shark</button>\\r\\n  <button mat-menu-item>Ballan wrasse</button>\\r\\n  <button mat-menu-item>Bamboo shark</button>\\r\\n  <button mat-menu-item>Banded killifish</button>\\r\\n</mat-menu>\\r\\n\\r\\n<mat-menu #amphibians=\\\"matMenu\\\">\\r\\n  <button mat-menu-item>Sonoran desert toad</button>\\r\\n  <button mat-menu-item>Western toad</button>\\r\\n  <button mat-menu-item>Arroyo toad</button>\\r\\n  <button mat-menu-item>Yosemite toad</button>\\r\\n</mat-menu>\\r\\n\\r\\n<mat-menu #reptiles=\\\"matMenu\\\">\\r\\n  <button mat-menu-item>Banded Day Gecko</button>\\r\\n  <button mat-menu-item>Banded Gila Monster</button>\\r\\n  <button mat-menu-item>Black Tree Monitor</button>\\r\\n  <button mat-menu-item>Blue Spiny Lizard</button>\\r\\n  <button mat-menu-item disabled>Velociraptor</button>\\r\\n</mat-menu>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Nested menu\r\n */\r\n@Component({\r\n  selector: 'nested-menu-example',\r\n  templateUrl: 'nested-menu-example.html',\r\n  styleUrls: ['nested-menu-example.css']\r\n})\r\nexport class NestedMenuExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  List length:\\r\\n  <input matInput [(ngModel)]=\\\"length\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field>\\r\\n  Page size:\\r\\n  <input matInput [(ngModel)]=\\\"pageSize\\\">\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n  Page size options:\\r\\n  <input matInput\\r\\n         [ngModel]=\\\"pageSizeOptions\\\"\\r\\n         (ngModelChange)=\\\"setPageSizeOptions($event)\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-paginator [length]=\\\"length\\\"\\r\\n              [pageSize]=\\\"pageSize\\\"\\r\\n              [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n              (page)=\\\"pageEvent = $event\\\">\\r\\n</mat-paginator>\\r\\n\\r\\n<div *ngIf=\\\"pageEvent\\\">\\r\\n  <h5>Page Change Event Properties</h5>\\r\\n  <div>List length: {{pageEvent.length}}</div>\\r\\n  <div>Page size: {{pageEvent.pageSize}}</div>\\r\\n  <div>Page index: {{pageEvent.pageIndex}}</div>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {PageEvent} from '@angular/material';\r\n\r\n/**\r\n * @title Configurable paginator\r\n */\r\n@Component({\r\n  selector: 'paginator-configurable-example',\r\n  templateUrl: 'paginator-configurable-example.html',\r\n  styleUrls: ['paginator-configurable-example.css'],\r\n})\r\nexport class PaginatorConfigurableExample {\r\n  // MatPaginator Inputs\r\n  length = 100;\r\n  pageSize = 10;\r\n  pageSizeOptions = [5, 10, 25, 100];\r\n\r\n  // MatPaginator Output\r\n  pageEvent: PageEvent;\r\n\r\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n    this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-paginator [length]=\\\"100\\\"\\r\\n              [pageSize]=\\\"10\\\"\\r\\n              [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Paginator\r\n */\r\n@Component({\r\n  selector: 'paginator-overview-example',\r\n  templateUrl: 'paginator-overview-example.html',\r\n  styleUrls: ['paginator-overview-example.css'],\r\n})\r\nexport class PaginatorOverviewExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-progress-bar mode=\\\"buffer\\\"></mat-progress-bar>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Buffer progress-bar\r\n */\r\n@Component({\r\n  selector: 'progress-bar-buffer-example',\r\n  templateUrl: 'progress-bar-buffer-example.html',\r\n  styleUrls: ['progress-bar-buffer-example.css'],\r\n})\r\nexport class ProgressBarBufferExample {}\r\n","module.exports = \".example-h2 {\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\n.example-section {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n.example-margin {\\r\\n  margin: 0 10px;\\r\\n}\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <mat-card-content>\\r\\n    <h2 class=\\\"example-h2\\\">Progress bar configuration</h2>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <label class=\\\"example-margin\\\">Color:</label>\\r\\n      <mat-radio-group [(ngModel)]=\\\"color\\\">\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"primary\\\">\\r\\n          Primary\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"accent\\\">\\r\\n          Accent\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"warn\\\">\\r\\n          Warn\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <label class=\\\"example-margin\\\">Mode:</label>\\r\\n      <mat-radio-group [(ngModel)]=\\\"mode\\\">\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"determinate\\\">\\r\\n          Determinate\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"indeterminate\\\">\\r\\n          Indeterminate\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"buffer\\\">\\r\\n          Buffer\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"query\\\">\\r\\n          Query\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\" *ngIf=\\\"mode == 'determinate' || mode == 'buffer'\\\">\\r\\n      <label class=\\\"example-margin\\\">Progress:</label>\\r\\n      <mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"value\\\"></mat-slider>\\r\\n    </section>\\r\\n    <section class=\\\"example-section\\\" *ngIf=\\\"mode == 'buffer'\\\">\\r\\n      <label class=\\\"example-margin\\\">Buffer:</label>\\r\\n      <mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"bufferValue\\\"></mat-slider>\\r\\n    </section>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card>\\r\\n  <mat-card-content>\\r\\n    <h2 class=\\\"example-h2\\\">Result</h2>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-progress-bar\\r\\n          class=\\\"example-margin\\\"\\r\\n          [color]=\\\"color\\\"\\r\\n          [mode]=\\\"mode\\\"\\r\\n          [value]=\\\"value\\\"\\r\\n          [bufferValue]=\\\"bufferValue\\\">\\r\\n      </mat-progress-bar>\\r\\n    </section>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Configurable progress-bar\r\n */\r\n@Component({\r\n  selector: 'progress-bar-configurable-example',\r\n  templateUrl: 'progress-bar-configurable-example.html',\r\n  styleUrls: ['progress-bar-configurable-example.css'],\r\n})\r\nexport class ProgressBarConfigurableExample {\r\n  color = 'primary';\r\n  mode = 'determinate';\r\n  value = 50;\r\n  bufferValue = 75;\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-progress-bar mode=\\\"determinate\\\" value=\\\"40\\\"></mat-progress-bar>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Determinate progress-bar\r\n */\r\n@Component({\r\n  selector: 'progress-bar-determinate-example',\r\n  templateUrl: 'progress-bar-determinate-example.html',\r\n  styleUrls: ['progress-bar-determinate-example.css'],\r\n})\r\nexport class ProgressBarDeterminateExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Indeterminate progress-bar\r\n */\r\n@Component({\r\n  selector: 'progress-bar-indeterminate-example',\r\n  templateUrl: 'progress-bar-indeterminate-example.html',\r\n  styleUrls: ['progress-bar-indeterminate-example.css'],\r\n})\r\nexport class ProgressBarIndeterminateExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-progress-bar mode=\\\"query\\\"></mat-progress-bar>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Query progress-bar\r\n */\r\n@Component({\r\n  selector: 'progress-bar-query-example',\r\n  templateUrl: 'progress-bar-query-example.html',\r\n  styleUrls: ['progress-bar-query-example.css'],\r\n})\r\nexport class ProgressBarQueryExample {}\r\n","module.exports = \".example-h2 {\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\n.example-section {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n.example-margin {\\r\\n  margin: 0 10px;\\r\\n}\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <mat-card-content>\\r\\n    <h2 class=\\\"example-h2\\\">Progress spinner configuration</h2>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <label class=\\\"example-margin\\\">Color:</label>\\r\\n      <mat-radio-group [(ngModel)]=\\\"color\\\">\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"primary\\\">\\r\\n          Primary\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"accent\\\">\\r\\n          Accent\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"warn\\\">\\r\\n          Warn\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <label class=\\\"example-margin\\\">Mode:</label>\\r\\n      <mat-radio-group [(ngModel)]=\\\"mode\\\">\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"determinate\\\">\\r\\n          Determinate\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"indeterminate\\\">\\r\\n          Indeterminate\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\" *ngIf=\\\"mode == 'determinate'\\\">\\r\\n      <label class=\\\"example-margin\\\">Progress:</label>\\r\\n      <mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"value\\\"></mat-slider>\\r\\n    </section>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<mat-card>\\r\\n  <mat-card-content>\\r\\n    <h2 class=\\\"example-h2\\\">Result</h2>\\r\\n\\r\\n    <mat-progress-spinner\\r\\n        class=\\\"example-margin\\\"\\r\\n        [color]=\\\"color\\\"\\r\\n        [mode]=\\\"mode\\\"\\r\\n        [value]=\\\"value\\\">\\r\\n    </mat-progress-spinner>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Configurable progress spinner\r\n */\r\n@Component({\r\n  selector: 'progress-spinner-configurable-example',\r\n  templateUrl: 'progress-spinner-configurable-example.html',\r\n  styleUrls: ['progress-spinner-configurable-example.css'],\r\n})\r\nexport class ProgressSpinnerConfigurableExample {\r\n  color = 'primary';\r\n  mode = 'determinate';\r\n  value = 50;\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-spinner></mat-spinner>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic progress-spinner\r\n */\r\n@Component({\r\n  selector: 'progress-spinner-overview-example',\r\n  templateUrl: 'progress-spinner-overview-example.html',\r\n  styleUrls: ['progress-spinner-overview-example.css'],\r\n})\r\nexport class ProgressSpinnerOverviewExample {}\r\n","module.exports = \".example-radio-group {\\r\\n  display: inline-flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-radio-button {\\r\\n  margin: 5px;\\r\\n}\\r\\n\\r\\n.example-selected-value {\\r\\n  margin: 15px 0;\\r\\n}\\r\\n\"","module.exports = \"<mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"favoriteSeason\\\">\\r\\n  <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let season of seasons\\\" [value]=\\\"season\\\">\\r\\n    {{season}}\\r\\n  </mat-radio-button>\\r\\n</mat-radio-group>\\r\\n<div class=\\\"example-selected-value\\\">Your favorite season is: {{favoriteSeason}}</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Radios with ngModel\r\n */\r\n@Component({\r\n  selector: 'radio-ng-model-example',\r\n  templateUrl: 'radio-ng-model-example.html',\r\n  styleUrls: ['radio-ng-model-example.css'],\r\n})\r\nexport class RadioNgModelExample {\r\n  favoriteSeason: string;\r\n\r\n  seasons = [\r\n    'Winter',\r\n    'Spring',\r\n    'Summer',\r\n    'Autumn',\r\n  ];\r\n}\r\n","module.exports = \".mat-radio-button ~ .mat-radio-button {\\r\\n  padding-right: 16px;\\r\\n}\\r\\n\"","module.exports = \"<mat-radio-group>\\r\\n  <mat-radio-button value=\\\"1\\\">Option 1</mat-radio-button>\\r\\n  <mat-radio-button value=\\\"2\\\">Option 2</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic radios\r\n */\r\n@Component({\r\n  selector: 'radio-overview-example',\r\n  templateUrl: 'radio-overview-example.html',\r\n  styleUrls: ['radio-overview-example.css'],\r\n})\r\nexport class RadioOverviewExample {}\r\n","module.exports = \".example-additional-selection {\\r\\n  opacity: 0.75;\\r\\n  font-size: 0.75em;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-select placeholder=\\\"Toppings\\\" [formControl]=\\\"toppings\\\" multiple>\\r\\n    <mat-select-trigger>\\r\\n      {{toppings.value ? toppings.value[0] : ''}}\\r\\n      <span *ngIf=\\\"toppings.value?.length > 1\\\" class=\\\"example-additional-selection\\\">\\r\\n        (+{{toppings.value.length - 1}} others)\\r\\n      </span>\\r\\n    </mat-select-trigger>\\r\\n    <mat-option *ngFor=\\\"let topping of toppingList\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n/** @title Select with custom trigger text */\r\n@Component({\r\n  selector: 'select-custom-trigger-example',\r\n  templateUrl: 'select-custom-trigger-example.html',\r\n  styleUrls: ['select-custom-trigger-example.css'],\r\n})\r\nexport class SelectCustomTriggerExample {\r\n  toppings = new FormControl();\r\n\r\n  toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<p>\\r\\n  <mat-checkbox [formControl]=\\\"disableSelect\\\">Disable select</mat-checkbox>\\r\\n</p>\\r\\n<p>\\r\\n  <mat-form-field>\\r\\n    <mat-select placeholder=\\\"Choose an option\\\" [disabled]=\\\"disableSelect.value\\\">\\r\\n      <mat-option value=\\\"option1\\\">Option 1</mat-option>\\r\\n      <mat-option value=\\\"option2\\\" disabled>Option 2 (disabled)</mat-option>\\r\\n      <mat-option value=\\\"option3\\\">Option 3</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</p>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n/** @title Disabled select */\r\n@Component({\r\n  selector: 'select-disabled-example',\r\n  templateUrl: 'select-disabled-example.html',\r\n  styleUrls: ['select-disabled-example.css'],\r\n})\r\nexport class SelectDisabledExample {\r\n  disableSelect = new FormControl(false);\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-select placeholder=\\\"Choose one\\\" [formControl]=\\\"selected\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-option>Clear</mat-option>\\r\\n    <mat-option value=\\\"valid\\\">Valid option</mat-option>\\r\\n    <mat-option value=\\\"invalid\\\">Invalid option</mat-option>\\r\\n  </mat-select>\\r\\n  <mat-hint>Errors appear instantly!</mat-hint>\\r\\n  <mat-error *ngIf=\\\"selected.hasError('required')\\\">You must make a selection</mat-error>\\r\\n  <mat-error *ngIf=\\\"selected.hasError('pattern') && !selected.hasError('required')\\\">\\r\\n    Your selection is invalid\\r\\n  </mat-error>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n/** @title Select with a custom ErrorStateMatcher */\r\n@Component({\r\n  selector: 'select-error-state-matcher-example',\r\n  templateUrl: 'select-error-state-matcher-example.html',\r\n  styleUrls: ['select-error-state-matcher-example.css'],\r\n})\r\nexport class SelectErrorStateMatcherExample {\r\n  selected = new FormControl('valid', [\r\n    Validators.required,\r\n    Validators.pattern('valid'),\r\n  ]);\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<form>\\r\\n  <mat-form-field>\\r\\n    <mat-select placeholder=\\\"Favorite food\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"food\\\">\\r\\n      <mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">\\r\\n        {{food.viewValue}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <p> Selected value: {{selectedValue}} </p>\\r\\n</form>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Select in a form\r\n */\r\n@Component({\r\n  selector: 'select-form-example',\r\n  templateUrl: 'select-form-example.html',\r\n  styleUrls: ['select-form-example.css'],\r\n})\r\nexport class SelectFormExample {\r\n  selectedValue: string;\r\n\r\n  foods = [\r\n    {value: 'steak-0', viewValue: 'Steak'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-select placeholder=\\\"Favorite animal\\\" [formControl]=\\\"animalControl\\\" required>\\r\\n    <mat-option>--</mat-option>\\r\\n    <mat-option *ngFor=\\\"let animal of animals\\\" [value]=\\\"animal\\\">\\r\\n      {{animal.name}}\\r\\n    </mat-option>\\r\\n  </mat-select>\\r\\n  <mat-error *ngIf=\\\"animalControl.hasError('required')\\\">Please choose an animal</mat-error>\\r\\n  <mat-hint>{{animalControl.value?.sound}}</mat-hint>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\n\r\n/** @title Select with form field features */\r\n@Component({\r\n  selector: 'select-hint-error-example',\r\n  templateUrl: 'select-hint-error-example.html',\r\n  styleUrls: ['select-hint-error-example.css'],\r\n})\r\nexport class SelectHintErrorExample {\r\n  animalControl = new FormControl('', [Validators.required]);\r\n\r\n  animals = [\r\n    {name: 'Dog', sound: 'Woof!'},\r\n    {name: 'Cat', sound: 'Meow!'},\r\n    {name: 'Cow', sound: 'Moo!'},\r\n    {name: 'Fox', sound: 'Wa-pa-pa-pa-pa-pa-pow!'},\r\n  ];\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-select placeholder=\\\"Toppings\\\" [formControl]=\\\"toppings\\\" multiple>\\r\\n    <mat-option *ngFor=\\\"let topping of toppingList\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n/** @title Select with multiple selection */\r\n@Component({\r\n  selector: 'select-multiple-example',\r\n  templateUrl: 'select-multiple-example.html',\r\n  styleUrls: ['select-multiple-example.css'],\r\n})\r\nexport class SelectMultipleExample {\r\n  toppings = new FormControl();\r\n\r\n  toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-select placeholder=\\\"Select an option\\\" disableRipple>\\r\\n    <mat-option value=\\\"1\\\">Option 1</mat-option>\\r\\n    <mat-option value=\\\"2\\\">Option 2</mat-option>\\r\\n    <mat-option value=\\\"3\\\">Option 3</mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Select with no option ripple */\r\n@Component({\r\n  selector: 'select-no-ripple-example',\r\n  templateUrl: 'select-no-ripple-example.html',\r\n  styleUrls: ['select-no-ripple-example.css'],\r\n})\r\nexport class SelectNoRippleExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-select placeholder=\\\"Pokemon\\\" [formControl]=\\\"pokemonControl\\\">\\r\\n    <mat-option>-- None --</mat-option>\\r\\n    <mat-optgroup *ngFor=\\\"let group of pokemonGroups\\\" [label]=\\\"group.name\\\"\\r\\n                  [disabled]=\\\"group.disabled\\\">\\r\\n      <mat-option *ngFor=\\\"let pokemon of group.pokemon\\\" [value]=\\\"pokemon.value\\\">\\r\\n        {{ pokemon.viewValue }}\\r\\n      </mat-option>\\r\\n    </mat-optgroup>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n/** @title Select with option groups */\r\n@Component({\r\n  selector: 'select-optgroup-example',\r\n  templateUrl: 'select-optgroup-example.html',\r\n  styleUrls: ['select-optgroup-example.css'],\r\n})\r\nexport class SelectOptgroupExample {\r\n  pokemonControl = new FormControl();\r\n\r\n  pokemonGroups = [\r\n    {\r\n      name: 'Grass',\r\n      pokemon: [\r\n        { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\r\n        { value: 'oddish-1', viewValue: 'Oddish' },\r\n        { value: 'bellsprout-2', viewValue: 'Bellsprout' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Water',\r\n      pokemon: [\r\n        { value: 'squirtle-3', viewValue: 'Squirtle' },\r\n        { value: 'psyduck-4', viewValue: 'Psyduck' },\r\n        { value: 'horsea-5', viewValue: 'Horsea' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Fire',\r\n      disabled: true,\r\n      pokemon: [\r\n        { value: 'charmander-6', viewValue: 'Charmander' },\r\n        { value: 'vulpix-7', viewValue: 'Vulpix' },\r\n        { value: 'flareon-8', viewValue: 'Flareon' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Psychic',\r\n      pokemon: [\r\n        { value: 'mew-9', viewValue: 'Mew' },\r\n        { value: 'mewtwo-10', viewValue: 'Mewtwo' },\r\n      ]\r\n    }\r\n  ];\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-select placeholder=\\\"Favorite food\\\">\\r\\n    <mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">\\r\\n      {{ food.viewValue }}\\r\\n    </mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic select\r\n */\r\n@Component({\r\n  selector: 'select-overview-example',\r\n  templateUrl: 'select-overview-example.html',\r\n  styleUrls: ['select-overview-example.css'],\r\n})\r\nexport class SelectOverviewExample {\r\n  foods = [\r\n    {value: 'steak-0', viewValue: 'Steak'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n}\r\n","module.exports = \".example-panel-red .mat-select-content {\\r\\n  background: rgba(255, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.example-panel-green .mat-select-content {\\r\\n  background: rgba(0, 255, 0, 0.5);\\r\\n}\\r\\n\\r\\n.example-panel-blue .mat-select-content {\\r\\n  background: rgba(0, 0, 255, 0.5);\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-select placeholder=\\\"Panel color\\\" [formControl]=\\\"panelColor\\\"\\r\\n              panelClass=\\\"example-panel-{{panelColor.value}}\\\">\\r\\n    <mat-option value=\\\"red\\\">Red</mat-option>\\r\\n    <mat-option value=\\\"green\\\">Green</mat-option>\\r\\n    <mat-option value=\\\"blue\\\">Blue</mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\"","import {Component, ViewEncapsulation} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n/**\r\n * @title Select with custom panel styling\r\n */\r\n@Component({\r\n  selector: 'select-panel-class-example',\r\n  templateUrl: 'select-panel-class-example.html',\r\n  styleUrls: ['select-panel-class-example.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SelectPanelClassExample {\r\n  panelColor = new FormControl('red');\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-select placeholder=\\\"State\\\">\\r\\n    <mat-option>None</mat-option>\\r\\n    <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state\\\">{{state}}</mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Select with reset option */\r\n@Component({\r\n  selector: 'select-reset-example',\r\n  templateUrl: 'select-reset-example.html',\r\n  styleUrls: ['select-reset-example.css'],\r\n})\r\nexport class SelectResetExample {\r\n  states = [\r\n    'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\r\n    'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\r\n    'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\r\n    'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\r\n    'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',\r\n    'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\r\n    'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\r\n  ];\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-select [(value)]=\\\"selected\\\">\\r\\n    <mat-option>None</mat-option>\\r\\n    <mat-option value=\\\"option1\\\">Option 1</mat-option>\\r\\n    <mat-option value=\\\"option2\\\">Option 2</mat-option>\\r\\n    <mat-option value=\\\"option3\\\">Option 3</mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\\r\\n<p>You selected: {{selected}}</p>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Select with 2-way value binding */\r\n@Component({\r\n  selector: 'select-value-binding-example',\r\n  templateUrl: 'select-value-binding-example.html',\r\n  styleUrls: ['select-value-binding-example.css'],\r\n})\r\nexport class SelectValueBindingExample {\r\n  selected = 'option2';\r\n}\r\n","module.exports = \".example-container {\\r\\n  width: 500px;\\r\\n  height: 300px;\\r\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.example-sidenav-content {\\r\\n  display: flex;\\r\\n  height: 100%;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n.example-sidenav {\\r\\n  padding: 20px;\\r\\n}\\r\\n\"","module.exports = \"<mat-drawer-container class=\\\"example-container\\\" autosize>\\r\\n  <mat-drawer #drawer class=\\\"example-sidenav\\\" mode=\\\"side\\\">\\r\\n    <p>Auto-resizing sidenav</p>\\r\\n    <p *ngIf=\\\"showFiller\\\">Lorem, ipsum dolor sit amet consectetur.</p>\\r\\n    <button (click)=\\\"showFiller = !showFiller\\\" mat-raised-button>\\r\\n      Toggle extra text\\r\\n    </button>\\r\\n  </mat-drawer>\\r\\n\\r\\n  <div class=\\\"example-sidenav-content\\\">\\r\\n    <button type=\\\"button\\\" mat-button (click)=\\\"drawer.toggle()\\\">\\r\\n      Toggle sidenav\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n</mat-drawer-container>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Autosize sidenav\r\n */\r\n@Component({\r\n  selector: 'sidenav-autosize-example',\r\n  templateUrl: 'sidenav-autosize-example.html',\r\n  styleUrls: ['sidenav-autosize-example.css'],\r\n})\r\nexport class SidenavAutosizeExample {\r\n  showFiller = false;\r\n}\r\n","module.exports = \".example-container {\\r\\n  width: 400px;\\r\\n  height: 200px;\\r\\n  margin: 10px;\\r\\n  border: 1px solid #555;\\r\\n}\\r\\n\"","module.exports = \"<mat-drawer-container class=\\\"example-container\\\" [hasBackdrop]=\\\"hasBackdrop.value\\\">\\r\\n  <mat-drawer #drawer [mode]=\\\"mode.value\\\">I'm a drawer</mat-drawer>\\r\\n  <mat-drawer-content>\\r\\n    <mat-form-field>\\r\\n      <mat-label>Sidenav mode</mat-label>\\r\\n      <mat-select #mode value=\\\"side\\\">\\r\\n        <mat-option value=\\\"side\\\">Side</mat-option>\\r\\n        <mat-option value=\\\"over\\\">Over</mat-option>\\r\\n        <mat-option value=\\\"push\\\">Push</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <mat-label>Has backdrop</mat-label>\\r\\n      <mat-select #hasBackdrop>\\r\\n        <mat-option>Unset</mat-option>\\r\\n        <mat-option [value]=\\\"true\\\">True</mat-option>\\r\\n        <mat-option [value]=\\\"false\\\">False</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button (click)=\\\"drawer.toggle()\\\">Toggle drawer</button>\\r\\n  </mat-drawer-content>\\r\\n</mat-drawer-container>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Drawer with explicit backdrop setting */\r\n@Component({\r\n  selector: 'sidenav-backdrop-example',\r\n  templateUrl: 'sidenav-backdrop-example.html',\r\n  styleUrls: ['sidenav-backdrop-example.css'],\r\n})\r\nexport class SidenavBackdropExample {}\r\n","module.exports = \".example-container {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\"","module.exports = \"<mat-sidenav-container\\r\\n    class=\\\"example-container\\\" (backdropClick)=\\\"close('backdrop')\\\" *ngIf=\\\"shouldRun\\\">\\r\\n  <mat-sidenav #sidenav (keydown.escape)=\\\"close('escape')\\\" disableClose>\\r\\n    <p><button mat-button (click)=\\\"close('toggle button')\\\">Toggle</button></p>\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <mat-sidenav-content>\\r\\n    <p><button mat-button (click)=\\\"sidenav.open()\\\">Open</button></p>\\r\\n    <p>Closed due to: {{reason}}</p>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n<div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\\r\\n\"","import {Component, ViewChild} from '@angular/core';\r\nimport {MatSidenav} from '@angular/material/sidenav';\r\n\r\n/** @title Sidenav with custom escape and backdrop click behavior */\r\n@Component({\r\n  selector: 'sidenav-disable-close-example',\r\n  templateUrl: 'sidenav-disable-close-example.html',\r\n  styleUrls: ['sidenav-disable-close-example.css'],\r\n})\r\nexport class SidenavDisableCloseExample {\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  reason = '';\r\n\r\n  close(reason: string) {\r\n    this.reason = reason;\r\n    this.sidenav.close();\r\n  }\r\n\r\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\r\n}\r\n","module.exports = \".example-container {\\r\\n  width: 400px;\\r\\n  height: 200px;\\r\\n  margin: 10px;\\r\\n  border: 1px solid #555;\\r\\n}\\r\\n\"","module.exports = \"<mat-drawer-container class=\\\"example-container\\\">\\r\\n  <mat-drawer mode=\\\"side\\\" opened=\\\"true\\\">Drawer content</mat-drawer>\\r\\n  <mat-drawer-content>Main content</mat-drawer-content>\\r\\n</mat-drawer-container>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Basic drawer */\r\n@Component({\r\n  selector: 'sidenav-drawer-overview-example',\r\n  templateUrl: 'sidenav-drawer-overview-example.html',\r\n  styleUrls: ['sidenav-drawer-overview-example.css'],\r\n})\r\nexport class SidenavDrawerOverviewExample {}\r\n","module.exports = \".example-container {\\r\\n  position: absolute;\\r\\n  top: 60px;\\r\\n  bottom: 60px;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.example-sidenav {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  width: 200px;\\r\\n  background: rgba(255, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.example-header {\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.example-footer {\\r\\n  position: fixed;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\"","module.exports = \"<ng-container *ngIf=\\\"shouldRun\\\">\\r\\n  <mat-toolbar class=\\\"example-header\\\">Header</mat-toolbar>\\r\\n\\r\\n  <mat-sidenav-container class=\\\"example-container\\\">\\r\\n    <mat-sidenav #sidenav mode=\\\"side\\\" opened=\\\"true\\\" class=\\\"example-sidenav\\\"\\r\\n                 [fixedInViewport]=\\\"options.value.fixed\\\" [fixedTopGap]=\\\"options.value.top\\\"\\r\\n                 [fixedBottomGap]=\\\"options.value.bottom\\\">\\r\\n      {{options.value.fixed ? 'Fixed' : 'Non-fixed'}} Sidenav\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <mat-sidenav-content [formGroup]=\\\"options\\\">\\r\\n      <p><mat-checkbox formControlName=\\\"fixed\\\">Fixed</mat-checkbox></p>\\r\\n      <p><mat-form-field>\\r\\n        <input matInput type=\\\"number\\\" formControlName=\\\"top\\\" placeholder=\\\"Top gap\\\">\\r\\n      </mat-form-field></p>\\r\\n      <p><mat-form-field>\\r\\n        <input matInput type=\\\"number\\\" formControlName=\\\"bottom\\\" placeholder=\\\"Bottom gap\\\">\\r\\n      </mat-form-field></p>\\r\\n      <p><button mat-button (click)=\\\"sidenav.toggle()\\\">Toggle</button></p>\\r\\n    </mat-sidenav-content>\\r\\n  </mat-sidenav-container>\\r\\n\\r\\n  <mat-toolbar class=\\\"example-footer\\\">Footer</mat-toolbar>\\r\\n</ng-container>\\r\\n\\r\\n<div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\n\r\n/** @title Fixed sidenav */\r\n@Component({\r\n  selector: 'sidenav-fixed-example',\r\n  templateUrl: 'sidenav-fixed-example.html',\r\n  styleUrls: ['sidenav-fixed-example.css'],\r\n})\r\nexport class SidenavFixedExample {\r\n  options: FormGroup;\r\n\r\n  constructor(fb: FormBuilder) {\r\n    this.options = fb.group({\r\n      'fixed': false,\r\n      'top': 0,\r\n      'bottom': 0,\r\n    });\r\n  }\r\n\r\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\r\n}\r\n","module.exports = \".example-container {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.example-radio-group {\\r\\n  display: block;\\r\\n  border: 1px solid #555;\\r\\n  margin: 20px;\\r\\n  padding: 10px;\\r\\n}\\r\\n\"","module.exports = \"<mat-sidenav-container class=\\\"example-container\\\" *ngIf=\\\"shouldRun\\\">\\r\\n  <mat-sidenav #sidenav [mode]=\\\"mode.value\\\">\\r\\n    <p><button mat-button (click)=\\\"sidenav.toggle()\\\">Toggle</button></p>\\r\\n    <p>\\r\\n      <mat-radio-group class=\\\"example-radio-group\\\" [formControl]=\\\"mode\\\">\\r\\n        <label>Mode:</label>\\r\\n        <mat-radio-button value=\\\"over\\\">Over</mat-radio-button>\\r\\n        <mat-radio-button value=\\\"side\\\">Side</mat-radio-button>\\r\\n        <mat-radio-button value=\\\"push\\\">Push</mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </p>\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <mat-sidenav-content>\\r\\n    <p><button mat-button (click)=\\\"sidenav.toggle()\\\">Toggle</button></p>\\r\\n    <p>\\r\\n      <mat-radio-group class=\\\"example-radio-group\\\" [formControl]=\\\"mode\\\">\\r\\n        <label>Mode:</label>\\r\\n        <mat-radio-button value=\\\"over\\\">Over</mat-radio-button>\\r\\n        <mat-radio-button value=\\\"side\\\">Side</mat-radio-button>\\r\\n        <mat-radio-button value=\\\"push\\\">Push</mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </p>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n<div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n/** @title Sidenav with configurable mode */\r\n@Component({\r\n  selector: 'sidenav-mode-example',\r\n  templateUrl: 'sidenav-mode-example.html',\r\n  styleUrls: ['sidenav-mode-example.css'],\r\n})\r\nexport class SidenavModeExample {\r\n  mode = new FormControl('over');\r\n\r\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\r\n}\r\n","module.exports = \".example-container {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.example-events {\\r\\n  width: 300px;\\r\\n  height: 200px;\\r\\n  overflow: auto;\\r\\n  border: 1px solid #555;\\r\\n}\\r\\n\"","module.exports = \"<mat-sidenav-container class=\\\"example-container\\\" *ngIf=\\\"shouldRun\\\">\\r\\n  <mat-sidenav #sidenav mode=\\\"side\\\" [(opened)]=\\\"opened\\\" (opened)=\\\"events.push('open!')\\\"\\r\\n               (closed)=\\\"events.push('close!')\\\">\\r\\n    Sidenav content\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <mat-sidenav-content>\\r\\n    <p><mat-checkbox [(ngModel)]=\\\"opened\\\">sidenav.opened</mat-checkbox></p>\\r\\n    <p><button mat-button (click)=\\\"sidenav.toggle()\\\">sidenav.toggle()</button></p>\\r\\n    <p>Events:</p>\\r\\n    <div class=\\\"example-events\\\">\\r\\n      <div *ngFor=\\\"let e of events\\\">{{e}}</div>\\r\\n    </div>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n<div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Sidenav open & close behavior */\r\n@Component({\r\n  selector: 'sidenav-open-close-example',\r\n  templateUrl: 'sidenav-open-close-example.html',\r\n  styleUrls: ['sidenav-open-close-example.css'],\r\n})\r\nexport class SidenavOpenCloseExample {\r\n  events: string[] = [];\r\n  opened: boolean;\r\n\r\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\r\n}\r\n","module.exports = \".example-container {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  background: #eee;\\r\\n}\\r\\n\"","module.exports = \"<mat-sidenav-container class=\\\"example-container\\\" *ngIf=\\\"shouldRun\\\">\\r\\n  <mat-sidenav mode=\\\"side\\\" opened>Sidenav content</mat-sidenav>\\r\\n  <mat-sidenav-content>Main content</mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n<div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Basic sidenav */\r\n@Component({\r\n  selector: 'sidenav-overview-example',\r\n  templateUrl: 'sidenav-overview-example.html',\r\n  styleUrls: ['sidenav-overview-example.css'],\r\n})\r\nexport class SidenavOverviewExample {\r\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\r\n}\r\n","module.exports = \".example-container {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\"","module.exports = \"<mat-sidenav-container class=\\\"example-container\\\" *ngIf=\\\"shouldRun\\\">\\r\\n  <mat-sidenav opened mode=\\\"side\\\">Start content</mat-sidenav>\\r\\n  <mat-sidenav opened mode=\\\"side\\\" position=\\\"end\\\">End content</mat-sidenav>\\r\\n  Implicit main content\\r\\n</mat-sidenav-container>\\r\\n\\r\\n<div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Implicit main content with two sidenavs */\r\n@Component({\r\n  selector: 'sidenav-position-example',\r\n  templateUrl: 'sidenav-position-example.html',\r\n  styleUrls: ['sidenav-position-example.css'],\r\n})\r\nexport class SidenavPositionExample {\r\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\r\n}\r\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.example-is-mobile .example-toolbar {\\r\\n  position: fixed;\\r\\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\nh1.example-app-name {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n\\r\\n.example-sidenav-container {\\r\\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\r\\n     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\r\\n  flex: 1;\\r\\n}\\r\\n\\r\\n.example-is-mobile .example-sidenav-container {\\r\\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\r\\n     `<body>` to be our scrolling element for mobile layouts. */\\r\\n  flex: 1 0 auto;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container\\\" [class.example-is-mobile]=\\\"mobileQuery.matches\\\" *ngIf=\\\"shouldRun\\\">\\r\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"example-toolbar\\\">\\r\\n    <button mat-icon-button (click)=\\\"snav.toggle()\\\"><mat-icon>menu</mat-icon></button>\\r\\n    <h1 class=\\\"example-app-name\\\">Responsive App</h1>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <mat-sidenav-container class=\\\"example-sidenav-container\\\"\\r\\n                         [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\">\\r\\n    <mat-sidenav #snav [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\"\\r\\n                 [fixedInViewport]=\\\"mobileQuery.matches\\\" fixedTopGap=\\\"56\\\">\\r\\n      <mat-nav-list>\\r\\n        <a mat-list-item routerLink=\\\".\\\" *ngFor=\\\"let nav of fillerNav\\\">{{nav}}</a>\\r\\n      </mat-nav-list>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <mat-sidenav-content>\\r\\n      <p *ngFor=\\\"let content of fillerContent\\\">{{content}}</p>\\r\\n    </mat-sidenav-content>\\r\\n  </mat-sidenav-container>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\\r\\n\"","import {MediaMatcher} from '@angular/cdk/layout';\r\nimport {ChangeDetectorRef, Component, OnDestroy} from '@angular/core';\r\n\r\n/** @title Responsive sidenav */\r\n@Component({\r\n  selector: 'sidenav-responsive-example',\r\n  templateUrl: 'sidenav-responsive-example.html',\r\n  styleUrls: ['sidenav-responsive-example.css'],\r\n})\r\nexport class SidenavResponsiveExample implements OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  fillerNav = Array(50).fill(0).map((_, i) => `Nav Item ${i + 1}`);\r\n\r\n  fillerContent = Array(50).fill(0).map(() =>\r\n      `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\r\n       labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n       laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\r\n       voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n       cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`);\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\r\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n\r\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\r\n}\r\n","module.exports = \".example-h2 {\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\n.example-section {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n.example-margin {\\r\\n  margin: 10px;\\r\\n}\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <mat-card-content>\\r\\n    <h2 class=\\\"example-h2\\\">Slider configuration</h2>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <label class=\\\"example-margin\\\">Color:</label>\\r\\n      <mat-radio-group [(ngModel)]=\\\"color\\\">\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"primary\\\">\\r\\n          Primary\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"accent\\\">\\r\\n          Accent\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"warn\\\">\\r\\n          Warn\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\">Checked</mat-checkbox>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Disabled</mat-checkbox>\\r\\n    </section>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card class=\\\"result\\\">\\r\\n  <mat-card-content>\\r\\n    <h2 class=\\\"example-h2\\\">Result</h2>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-slide-toggle\\r\\n          class=\\\"example-margin\\\"\\r\\n          [color]=\\\"color\\\"\\r\\n          [checked]=\\\"checked\\\"\\r\\n          [disabled]=\\\"disabled\\\">\\r\\n        Slide me!\\r\\n      </mat-slide-toggle>\\r\\n    </section>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Configurable slide-toggle\r\n */\r\n@Component({\r\n  selector: 'slide-toggle-configurable-example',\r\n  templateUrl: 'slide-toggle-configurable-example.html',\r\n  styleUrls: ['slide-toggle-configurable-example.css'],\r\n})\r\nexport class SlideToggleConfigurableExample {\r\n  color = 'accent';\r\n  checked = false;\r\n  disabled = false;\r\n}\r\n","module.exports = \".example-form mat-slide-toggle {\\r\\n  margin: 8px 0;\\r\\n  display: block;\\r\\n}\\r\\n\"","module.exports = \"<p>Slide Toggle using a simple NgModel.</p>\\r\\n\\r\\n<mat-slide-toggle [(ngModel)]=\\\"isChecked\\\">Slide Toggle Checked: {{ isChecked }}</mat-slide-toggle>\\r\\n\\r\\n<p>Slide Toggle inside of a Template-driven form</p>\\r\\n\\r\\n<form class=\\\"example-form\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onFormSubmit(form.value)\\\" ngNativeValidate>\\r\\n\\r\\n  <mat-slide-toggle ngModel name=\\\"enableWifi\\\">Enable Wifi</mat-slide-toggle>\\r\\n  <mat-slide-toggle ngModel name=\\\"acceptTerms\\\" required>Accept Terms of Service</mat-slide-toggle>\\r\\n\\r\\n  <button mat-raised-button type=\\\"submit\\\">Save Settings</button>\\r\\n</form>\\r\\n\\r\\n<p>Slide Toggle inside of a Reactive form</p>\\r\\n\\r\\n<form class=\\\"example-form\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onFormSubmit(formGroup.value)\\\" ngNativeValidate>\\r\\n\\r\\n  <mat-slide-toggle formControlName=\\\"enableWifi\\\">Enable Wifi</mat-slide-toggle>\\r\\n  <mat-slide-toggle formControlName=\\\"acceptTerms\\\">Accept Terms of Service</mat-slide-toggle>\\r\\n\\r\\n  <p>Form Group Status: {{ formGroup.status}}</p>\\r\\n\\r\\n  <button mat-rasied-button type=\\\"submit\\\">Save Settings</button>\\r\\n</form>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\n/**\r\n * @title Slide-toggle with forms\r\n */\r\n@Component({\r\n  selector: 'slide-toggle-forms-example',\r\n  templateUrl: './slide-toggle-forms-example.html',\r\n  styleUrls: ['./slide-toggle-forms-example.css'],\r\n})\r\nexport class SlideToggleFormsExample {\r\n  isChecked = true;\r\n  formGroup: FormGroup;\r\n\r\n  constructor(formBuilder: FormBuilder) {\r\n    this.formGroup = formBuilder.group({\r\n      enableWifi: '',\r\n      acceptTerms: ['', Validators.requiredTrue]\r\n    });\r\n  }\r\n\r\n  onFormSubmit(formValue: any) {\r\n    alert(JSON.stringify(formValue, null, 2));\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-slide-toggle>Slide me!</mat-slide-toggle>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic slide-toggles\r\n */\r\n@Component({\r\n  selector: 'slide-toggle-overview-example',\r\n  templateUrl: 'slide-toggle-overview-example.html',\r\n  styleUrls: ['slide-toggle-overview-example.css'],\r\n})\r\nexport class SlideToggleOverviewExample {}\r\n","module.exports = \".example-h2 {\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\n.example-section {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n.example-margin {\\r\\n  margin: 10px;\\r\\n}\\r\\n\\r\\n.mat-slider-horizontal {\\r\\n  width: 300px;\\r\\n}\\r\\n\\r\\n.mat-slider-vertical {\\r\\n  height: 300px;\\r\\n}\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <mat-card-content>\\r\\n    <h2 class=\\\"example-h2\\\">Slider configuration</h2>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"value\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Min value\\\" [(ngModel)]=\\\"min\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Max value\\\" [(ngModel)]=\\\"max\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"example-margin\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Step size\\\" [(ngModel)]=\\\"step\\\">\\r\\n      </mat-form-field>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"showTicks\\\">Show ticks</mat-checkbox>\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"autoTicks\\\" *ngIf=\\\"showTicks\\\">\\r\\n        Auto ticks\\r\\n      </mat-checkbox>\\r\\n      <mat-form-field class=\\\"example-margin\\\" *ngIf=\\\"showTicks && !autoTicks\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Tick interval\\\" [(ngModel)]=\\\"tickInterval\\\">\\r\\n      </mat-form-field>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"thumbLabel\\\">Show thumb label</mat-checkbox>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"vertical\\\">Vertical</mat-checkbox>\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"invert\\\">Inverted</mat-checkbox>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Disabled</mat-checkbox>\\r\\n    </section>\\r\\n\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card class=\\\"result\\\">\\r\\n  <mat-card-content>\\r\\n    <h2 class=\\\"example-h2\\\">Result</h2>\\r\\n\\r\\n    <mat-slider\\r\\n        class=\\\"example-margin\\\"\\r\\n        [disabled]=\\\"disabled\\\"\\r\\n        [invert]=\\\"invert\\\"\\r\\n        [max]=\\\"max\\\"\\r\\n        [min]=\\\"min\\\"\\r\\n        [step]=\\\"step\\\"\\r\\n        [thumbLabel]=\\\"thumbLabel\\\"\\r\\n        [tickInterval]=\\\"tickInterval\\\"\\r\\n        [(ngModel)]=\\\"value\\\"\\r\\n        [vertical]=\\\"vertical\\\">\\r\\n    </mat-slider>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component, ViewEncapsulation} from '@angular/core';\r\n\r\n/**\r\n * @title Configurable slider\r\n */\r\n@Component({\r\n  selector: 'slider-configurable-example',\r\n  templateUrl: 'slider-configurable-example.html',\r\n  styleUrls: ['slider-configurable-example.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SliderConfigurableExample {\r\n  autoTicks = false;\r\n  disabled = false;\r\n  invert = false;\r\n  max = 100;\r\n  min = 0;\r\n  showTicks = false;\r\n  step = 1;\r\n  thumbLabel = false;\r\n  value = 0;\r\n  vertical = false;\r\n\r\n  get tickInterval(): number | 'auto' {\r\n    return this.showTicks ? (this.autoTicks ? 'auto' : this._tickInterval) : 0;\r\n  }\r\n  set tickInterval(v) {\r\n    this._tickInterval = Number(v);\r\n  }\r\n  private _tickInterval = 1;\r\n}\r\n","module.exports = \"mat-slider {\\r\\n  width: 300px;\\r\\n}\\r\\n\"","module.exports = \"<mat-slider\\r\\n  thumbLabel\\r\\n  [displayWith]=\\\"formatLabel\\\"\\r\\n  tickInterval=\\\"1000\\\"\\r\\n  min=\\\"1\\\"\\r\\n  max=\\\"100000\\\"></mat-slider>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Slider with custom thumb label formatting.\r\n */\r\n@Component({\r\n  selector: 'slider-formatting-example',\r\n  templateUrl: 'slider-formatting-example.html',\r\n  styleUrls: ['slider-formatting-example.css'],\r\n})\r\nexport class SliderFormattingExample {\r\n  formatLabel(value: number | null) {\r\n    if (!value) {\r\n      return 0;\r\n    }\r\n\r\n    if (value >= 1000) {\r\n      return Math.round(value / 1000) + 'k';\r\n    }\r\n\r\n    return value;\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\nmat-slider {\\r\\n  width: 300px;\\r\\n}\\r\\n\"","module.exports = \"<mat-slider></mat-slider>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic slider\r\n */\r\n@Component({\r\n  selector: 'slider-overview-example',\r\n  templateUrl: 'slider-overview-example.html',\r\n  styleUrls: ['slider-overview-example.css'],\r\n})\r\nexport class SliderOverviewExample {}\r\n","module.exports = \"<span class=\\\"example-pizza-party\\\">\\r\\n  Pizza party!!! 🍕\\r\\n</span>\\r\\n\"","module.exports = \"<button mat-button (click)=\\\"openSnackBar()\\\" aria-label=\\\"Show an example snack-bar\\\">\\r\\n  Pizza party\\r\\n</button>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n/**\r\n * @title Snack-bar with a custom component\r\n */\r\n@Component({\r\n  selector: 'snack-bar-component-example',\r\n  templateUrl: 'snack-bar-component-example.html',\r\n})\r\nexport class SnackBarComponentExample {\r\n  constructor(public snackBar: MatSnackBar) {}\r\n\r\n  openSnackBar() {\r\n    this.snackBar.openFromComponent(PizzaPartyComponent, {\r\n      duration: 500,\r\n    });\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'snack-bar-component-example-snack',\r\n  templateUrl: 'snack-bar-component-example-snack.html',\r\n  styles: [`.example-pizza-party { color: hotpink; }`],\r\n})\r\nexport class PizzaPartyComponent {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput value=\\\"Disco party!\\\" placeholder=\\\"Message\\\" #message>\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field>\\r\\n  <input matInput value=\\\"Dance\\\" placeholder=\\\"Action\\\" #action>\\r\\n</mat-form-field>\\r\\n\\r\\n<button mat-button (click)=\\\"openSnackBar(message.value, action.value)\\\">Show snack-bar</button>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n/**\r\n * @title Basic snack-bar\r\n */\r\n@Component({\r\n  selector: 'snack-bar-overview-example',\r\n  templateUrl: 'snack-bar-overview-example.html',\r\n  styleUrls: ['snack-bar-overview-example.css'],\r\n})\r\nexport class SnackBarOverviewExample {\r\n  constructor(public snackBar: MatSnackBar) {}\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<mat-form-field>\\r\\n  <mat-select placeholder=\\\"Horizontal position\\\" [(value)]=\\\"horizontalPosition\\\">\\r\\n    <mat-option value=\\\"start\\\">Start</mat-option>\\r\\n    <mat-option value=\\\"center\\\">Center</mat-option>\\r\\n    <mat-option value=\\\"end\\\">End</mat-option>\\r\\n    <mat-option value=\\\"left\\\">Left</mat-option>\\r\\n    <mat-option value=\\\"right\\\">Right</mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n  <mat-select placeholder=\\\"Vertical position\\\" [(value)]=\\\"verticalPosition\\\">\\r\\n    <mat-option value=\\\"top\\\">Top</mat-option>\\r\\n    <mat-option value=\\\"bottom\\\">Bottom</mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\\r\\n<button mat-button (click)=\\\"openSnackBar()\\\" aria-label=\\\"Show an example snack-bar\\\">\\r\\n  Pool party!\\r\\n</button>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n} from '@angular/material';\r\n\r\n/**\r\n * @title Snack-bar with configurable position\r\n */\r\n@Component({\r\n  selector: 'snack-bar-position-example',\r\n  templateUrl: 'snack-bar-position-example.html',\r\n})\r\nexport class SnackBarPositionExample {\r\n\r\n  horizontalPosition: MatSnackBarHorizontalPosition = 'start';\r\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\r\n\r\n  constructor(public snackBar: MatSnackBar) {}\r\n\r\n  openSnackBar() {\r\n    this.snackBar.open('Canonball!!', 'End now', {\r\n      duration: 500,\r\n      horizontalPosition: this.horizontalPosition,\r\n      verticalPosition: this.verticalPosition,\r\n    });\r\n  }\r\n}\r\n","module.exports = \".mat-sort-header-container {\\r\\n  align-items: center;\\r\\n}\\r\\n\"","module.exports = \"<table matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n  <tr>\\r\\n    <th mat-sort-header=\\\"name\\\">Dessert (100g)</th>\\r\\n    <th mat-sort-header=\\\"calories\\\">Calories</th>\\r\\n    <th mat-sort-header=\\\"fat\\\">Fat (g)</th>\\r\\n    <th mat-sort-header=\\\"carbs\\\">Carbs (g)</th>\\r\\n    <th mat-sort-header=\\\"protein\\\">Protein (g)</th>\\r\\n  </tr>\\r\\n\\r\\n  <tr *ngFor=\\\"let dessert of sortedData\\\">\\r\\n    <td>{{dessert.name}}</td>\\r\\n    <td>{{dessert.calories}}</td>\\r\\n    <td>{{dessert.fat}}</td>\\r\\n    <td>{{dessert.carbs}}</td>\\r\\n    <td>{{dessert.protein}}</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {Sort} from '@angular/material';\r\n\r\n/**\r\n * @title Sorting overview\r\n */\r\n@Component({\r\n  selector: 'sort-overview-example',\r\n  templateUrl: 'sort-overview-example.html',\r\n  styleUrls: ['sort-overview-example.css'],\r\n})\r\nexport class SortOverviewExample {\r\n  desserts = [\r\n    {name: 'Frozen yogurt', calories: '159', fat: '6', carbs: '24', protein: '4'},\r\n    {name: 'Ice cream sandwich', calories: '237', fat: '9', carbs: '37', protein: '4'},\r\n    {name: 'Eclair', calories: '262', fat: '16', carbs: '24', protein: '6'},\r\n    {name: 'Cupcake', calories: '305', fat: '4', carbs: '67', protein: '4'},\r\n    {name: 'Gingerbread', calories: '356', fat: '16', carbs: '49', protein: '4'},\r\n  ];\r\n\r\n  sortedData;\r\n\r\n  constructor() {\r\n    this.sortedData = this.desserts.slice();\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.desserts.slice();\r\n    if (!sort.active || sort.direction == '') {\r\n      this.sortedData = data;\r\n      return;\r\n    }\r\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      let isAsc = sort.direction == 'asc';\r\n      switch (sort.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'calories': return compare(+a.calories, +b.calories, isAsc);\r\n        case 'fat': return compare(+a.fat, +b.fat, isAsc);\r\n        case 'carbs': return compare(+a.carbs, +b.carbs, isAsc);\r\n        case 'protein': return compare(+a.protein, +b.protein, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction compare(a, b, isAsc) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-raised-button (click)=\\\"isEditable = !isEditable\\\">\\r\\n  {{!isEditable ? 'Enable edit mode' : 'Disable edit mode'}}\\r\\n</button>\\r\\n\\r\\n<mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\r\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\" [editable]=\\\"isEditable\\\">\\r\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n      <ng-template matStepLabel>Fill out your name</ng-template>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\r\\n      </mat-form-field>\\r\\n      <div>\\r\\n        <button mat-button matStepperNext>Next</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\" [editable]=\\\"isEditable\\\">\\r\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\r\\n      <ng-template matStepLabel>Fill out your address</ng-template>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\r\\n      </mat-form-field>\\r\\n      <div>\\r\\n        <button mat-button matStepperPrevious>Back</button>\\r\\n        <button mat-button matStepperNext>Next</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n  <mat-step>\\r\\n    <ng-template matStepLabel>Done</ng-template>\\r\\n    You are now done.\\r\\n    <div>\\r\\n      <button mat-button matStepperPrevious>Back</button>\\r\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\r\\n    </div>\\r\\n  </mat-step>\\r\\n</mat-horizontal-stepper>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\n/**\r\n * @title Stepper with editable steps\r\n */\r\n@Component({\r\n  selector: 'stepper-editable-example',\r\n  templateUrl: 'stepper-editable-example.html',\r\n  styleUrls: ['stepper-editable-example.css']\r\n})\r\nexport class StepperEditableExample implements OnInit {\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  isEditable: boolean = false;\r\n\r\n  constructor(private _formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-raised-button (click)=\\\"isOptional = !isOptional\\\">\\r\\n  {{!isOptional ? 'Enable optional steps' : 'Disable optional steps'}}\\r\\n</button>\\r\\n\\r\\n<mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\r\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\">\\r\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n      <ng-template matStepLabel>Fill out your name</ng-template>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\r\\n      </mat-form-field>\\r\\n      <div>\\r\\n        <button mat-button matStepperNext>Next</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\" [optional]=\\\"isOptional\\\">\\r\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\r\\n      <ng-template matStepLabel>Fill out your address</ng-template>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\r\\n      </mat-form-field>\\r\\n      <div>\\r\\n        <button mat-button matStepperPrevious>Back</button>\\r\\n        <button mat-button matStepperNext>Next</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n  <mat-step>\\r\\n    <ng-template matStepLabel>Done</ng-template>\\r\\n    You are now done.\\r\\n    <div>\\r\\n      <button mat-button matStepperPrevious>Back</button>\\r\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\r\\n    </div>\\r\\n  </mat-step>\\r\\n</mat-horizontal-stepper>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\n/**\r\n * @title Stepper with optional steps\r\n */\r\n@Component({\r\n  selector: 'stepper-optional-example',\r\n  templateUrl: 'stepper-optional-example.html',\r\n  styleUrls: ['stepper-optional-example.css']\r\n})\r\nexport class StepperOptionalExample implements OnInit {\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  isOptional: boolean = false;\r\n\r\n  constructor(private _formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ''\r\n    });\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-raised-button (click)=\\\"isLinear = !isLinear\\\" id=\\\"toggle-linear\\\">\\r\\n  {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\\r\\n</button>\\r\\n<mat-horizontal-stepper [linear]=\\\"isLinear\\\" #stepper>\\r\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\">\\r\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n      <ng-template matStepLabel>Fill out your name</ng-template>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\r\\n      </mat-form-field>\\r\\n      <div>\\r\\n        <button mat-button matStepperNext>Next</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\">\\r\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\r\\n      <ng-template matStepLabel>Fill out your address</ng-template>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\r\\n      </mat-form-field>\\r\\n      <div>\\r\\n        <button mat-button matStepperPrevious>Back</button>\\r\\n        <button mat-button matStepperNext>Next</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n  <mat-step>\\r\\n    <ng-template matStepLabel>Done</ng-template>\\r\\n    You are now done.\\r\\n    <div>\\r\\n      <button mat-button matStepperPrevious>Back</button>\\r\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\r\\n    </div>\\r\\n  </mat-step>\\r\\n</mat-horizontal-stepper>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\n/**\r\n * @title Stepper overview\r\n */\r\n@Component({\r\n  selector: 'stepper-overview-example',\r\n  templateUrl: 'stepper-overview-example.html',\r\n  styleUrls: ['stepper-overview-example.css']\r\n})\r\nexport class StepperOverviewExample implements OnInit {\r\n  isLinear = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n\r\n  constructor(private _formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-raised-button (click)=\\\"isLinear = !isLinear\\\" id=\\\"toggle-linear\\\">\\r\\n  {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\\r\\n</button>\\r\\n<mat-vertical-stepper [linear]=\\\"isLinear\\\" #stepper>\\r\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\">\\r\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n      <ng-template matStepLabel>Fill out your name</ng-template>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\r\\n      </mat-form-field>\\r\\n      <div>\\r\\n        <button mat-button matStepperNext>Next</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\">\\r\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\r\\n      <ng-template matStepLabel>Fill out your address</ng-template>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\r\\n      </mat-form-field>\\r\\n      <div>\\r\\n        <button mat-button matStepperPrevious>Back</button>\\r\\n        <button mat-button matStepperNext>Next</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n  <mat-step>\\r\\n    <ng-template matStepLabel>Done</ng-template>\\r\\n    You are now done.\\r\\n    <div>\\r\\n      <button mat-button matStepperPrevious>Back</button>\\r\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\r\\n    </div>\\r\\n  </mat-step>\\r\\n</mat-vertical-stepper>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\n/**\r\n * @title Stepper vertical\r\n */\r\n@Component({\r\n  selector: 'stepper-vertical',\r\n  templateUrl: 'stepper-vertical-example.html',\r\n  styleUrls: ['stepper-vertical-example.css']\r\n})\r\nexport class StepperVerticalExample implements OnInit {\r\n  isLinear = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n\r\n  constructor(private _formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<ng-container *ngIf=\\\"(asyncTabs | async) === null\\\">\\r\\n  Loading tabs...\\r\\n</ng-container>\\r\\n\\r\\n<mat-tab-group>\\r\\n  <mat-tab *ngFor=\\\"let tab of asyncTabs | async\\\">\\r\\n    <ng-template mat-tab-label>{{tab.label}}</ng-template>\\r\\n    {{tab.content}}\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {Observable, Observer} from 'rxjs';\r\n\r\nexport interface ExampleTab {\r\n  label: string;\r\n  content: string;\r\n}\r\n\r\n/**\r\n * @title Tab group with asynchronously loading tab contents\r\n */\r\n@Component({\r\n  selector: 'tab-group-async-example',\r\n  templateUrl: 'tab-group-async-example.html',\r\n  styleUrls: ['tab-group-async-example.css'],\r\n})\r\nexport class TabGroupAsyncExample {\r\n  asyncTabs: Observable<ExampleTab[]>;\r\n\r\n  constructor() {\r\n    this.asyncTabs = Observable.create((observer: Observer<ExampleTab[]>) => {\r\n      setTimeout(() => {\r\n        observer.next([\r\n          {label: 'First', content: 'Content 1'},\r\n          {label: 'Second', content: 'Content 2'},\r\n          {label: 'Third', content: 'Content 3'},\r\n        ]);\r\n      }, 1000);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-tab-group>\\r\\n  <mat-tab label=\\\"First\\\"> Content 1 </mat-tab>\\r\\n  <mat-tab label=\\\"Second\\\"> Content 2 </mat-tab>\\r\\n  <mat-tab label=\\\"Third\\\"> Content 3 </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'tab-group-basic-example',\r\n  templateUrl: 'tab-group-basic-example.html',\r\n  styleUrls: ['tab-group-basic-example.css'],\r\n})\r\nexport class TabGroupBasicExample {}\r\n","module.exports = \".example-tab-icon {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n\"","module.exports = \"<mat-tab-group>\\r\\n  <mat-tab>\\r\\n    <ng-template mat-tab-label>\\r\\n      <mat-icon class=\\\"example-tab-icon\\\">thumb_up</mat-icon>\\r\\n      First\\r\\n    </ng-template>\\r\\n    Content 1\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab>\\r\\n    <ng-template mat-tab-label>\\r\\n      <mat-icon class=\\\"example-tab-icon\\\">thumb_up</mat-icon>\\r\\n      Second\\r\\n    </ng-template>\\r\\n    Content 2\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab>\\r\\n    <ng-template mat-tab-label>\\r\\n      <mat-icon class=\\\"example-tab-icon\\\">thumb_up</mat-icon>\\r\\n      Third\\r\\n    </ng-template>\\r\\n\\r\\n    Content 3\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Using tabs with a custom label template\r\n */\r\n@Component({\r\n  selector: 'tab-group-custom-label-example',\r\n  templateUrl: 'tab-group-custom-label-example.html',\r\n  styleUrls: ['tab-group-custom-label-example.css'],\r\n})\r\nexport class TabGroupCustomLabelExample {}\r\n","module.exports = \".example-small-box, .example-large-box {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  margin: 16px;\\r\\n  padding: 16px;\\r\\n  border-radius: 8px;\\r\\n}\\r\\n\\r\\n.example-small-box {\\r\\n  height: 100px;\\r\\n  width: 100px;\\r\\n}\\r\\n\\r\\n.example-large-box {\\r\\n  height: 300px;\\r\\n  width: 300px;\\r\\n}\\r\\n\"","module.exports = \"<mat-tab-group dynamicHeight>\\r\\n  <mat-tab label=\\\"Short tab\\\">\\r\\n    <div class=\\\"example-small-box mat-elevation-z4\\\">\\r\\n      Small content\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Long tab\\\">\\r\\n    <div class=\\\"example-large-box mat-elevation-z4\\\">\\r\\n      Large content\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Tag group with dynamic height based on tab contents\r\n */\r\n@Component({\r\n  selector: 'tab-group-dynamic-height-example',\r\n  templateUrl: 'tab-group-dynamic-height-example.html',\r\n  styleUrls: ['tab-group-dynamic-height-example.css'],\r\n})\r\nexport class TabGroupDynamicHeightExample {}\r\n","module.exports = \".example-input-label,\\r\\n.example-add-tab-button,\\r\\n.example-delete-tab-button {\\r\\n  margin: 8px;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <span class=\\\"example-input-label\\\"> Selected tab index: </span>\\r\\n  <mat-form-field>\\r\\n    <input matInput type=\\\"number\\\" [formControl]=\\\"selected\\\">\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  <button mat-raised-button\\r\\n          class=\\\"example-add-tab-button\\\"\\r\\n          (click)=\\\"addTab(selectAfterAdding.checked)\\\">\\r\\n    Add new tab\\r\\n  </button>\\r\\n  <mat-checkbox #selectAfterAdding> Select tab after adding </mat-checkbox>\\r\\n</div>\\r\\n\\r\\n<mat-tab-group [selectedIndex]=\\\"selected.value\\\"\\r\\n               (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\r\\n  <mat-tab *ngFor=\\\"let tab of tabs; let index = index\\\" [label]=\\\"tab\\\">\\r\\n    Contents for {{tab}} tab\\r\\n\\r\\n    <button mat-raised-button\\r\\n            class=\\\"example-delete-tab-button\\\"\\r\\n            [disabled]=\\\"tabs.length === 1\\\"\\r\\n            (click)=\\\"removeTab(index)\\\">\\r\\n      Delete Tab\\r\\n    </button>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n/**\r\n * @title Tag group with dynamically changing tabs\r\n */\r\n@Component({\r\n  selector: 'tab-group-dynamic-example',\r\n  templateUrl: 'tab-group-dynamic-example.html',\r\n  styleUrls: ['tab-group-dynamic-example.css'],\r\n})\r\nexport class TabGroupDynamicExample {\r\n  tabs = ['First', 'Second', 'Third'];\r\n  selected = new FormControl(0);\r\n\r\n  addTab(selectAfterAdding: boolean) {\r\n    this.tabs.push('New');\r\n\r\n    if (selectAfterAdding) {\r\n      this.selected.setValue(this.tabs.length - 1);\r\n    }\r\n  }\r\n\r\n  removeTab(index: number) {\r\n    this.tabs.splice(index, 1);\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-tab-group headerPosition=\\\"below\\\">\\r\\n  <mat-tab label=\\\"First\\\"> Content 1 </mat-tab>\\r\\n  <mat-tab label=\\\"Second\\\"> Content 2 </mat-tab>\\r\\n  <mat-tab label=\\\"Third\\\"> Content 3 </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Tab group with the headers on the bottom\r\n */\r\n@Component({\r\n  selector: 'tab-group-header-below-example',\r\n  templateUrl: 'tab-group-header-below-example.html',\r\n  styleUrls: ['tab-group-header-below-example.css'],\r\n})\r\nexport class TabGroupHeaderBelowExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-tab-group>\\r\\n  <mat-tab label=\\\"First\\\">\\r\\n    <ng-template matTabContent>\\r\\n      Content 1 - Loaded: {{getTimeLoaded(1) | date:'medium'}}\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Second\\\">\\r\\n    <ng-template matTabContent>\\r\\n      Content 2 - Loaded: {{getTimeLoaded(2) | date:'medium'}}\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Third\\\">\\r\\n    <ng-template matTabContent>\\r\\n      Content 3 - Loaded: {{getTimeLoaded(3) | date:'medium'}}\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Tab group where the tab content is loaded lazily (when activated)\r\n */\r\n@Component({\r\n  selector: 'tab-group-lazy-loaded-example',\r\n  templateUrl: 'tab-group-lazy-loaded-example.html',\r\n  styleUrls: ['tab-group-lazy-loaded-example.css'],\r\n})\r\nexport class TabGroupLazyLoadedExample {\r\n  tabLoadTimes: Date[] = [];\r\n\r\n  getTimeLoaded(index: number) {\r\n    if (!this.tabLoadTimes[index]) {\r\n      this.tabLoadTimes[index] = new Date();\r\n    }\r\n\r\n    return this.tabLoadTimes[index];\r\n  }\r\n}\r\n","module.exports = \".example-stretched-tabs {\\r\\n  max-width: 800px;\\r\\n}\\r\\n\"","module.exports = \"<mat-tab-group mat-stretch-tabs class=\\\"example-stretched-tabs mat-elevation-z4\\\">\\r\\n  <mat-tab label=\\\"First\\\"> Content 1 </mat-tab>\\r\\n  <mat-tab label=\\\"Second\\\"> Content 2 </mat-tab>\\r\\n  <mat-tab label=\\\"Third\\\"> Content 3 </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Tab group with stretched labels\r\n */\r\n@Component({\r\n  selector: 'tab-group-stretched-example',\r\n  templateUrl: 'tab-group-stretched-example.html',\r\n  styleUrls: ['tab-group-stretched-example.css'],\r\n})\r\nexport class TabGroupStretchedExample {}\r\n","module.exports = \".example-button-toggle-label {\\r\\n  display: inline-block;\\r\\n  margin: 16px;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <mat-button-toggle-group #colorToggle=\\\"matButtonToggleGroup\\\"\\r\\n                           value=\\\"primary\\\"\\r\\n                           aria-label=\\\"Change color\\\">\\r\\n    <mat-button-toggle value=\\\"primary\\\"> Primary </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"accent\\\"> Accent </mat-button-toggle>\\r\\n  </mat-button-toggle-group>\\r\\n  <span class=\\\"example-button-toggle-label\\\"> Color </span>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  <mat-button-toggle-group #backgroundColorToggle=\\\"matButtonToggleGroup\\\"\\r\\n                           value=\\\"primary\\\"\\r\\n                           aria-label=\\\"Change color\\\">\\r\\n    <mat-button-toggle value=\\\"primary\\\"> Primary </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"accent\\\"> Accent </mat-button-toggle>\\r\\n  </mat-button-toggle-group>\\r\\n  <span class=\\\"example-button-toggle-label\\\"> Background Color </span>\\r\\n</div>\\r\\n\\r\\n<mat-tab-group [color]=\\\"colorToggle.value\\\" [backgroundColor]=\\\"backgroundColorToggle.value\\\">\\r\\n  <mat-tab label=\\\"First\\\"> Content 1 </mat-tab>\\r\\n  <mat-tab label=\\\"Second\\\"> Content 2 </mat-tab>\\r\\n  <mat-tab label=\\\"Third\\\"> Content 3 </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Customizing the theme options on the tab group\r\n */\r\n@Component({\r\n  selector: 'tab-group-theme-example',\r\n  templateUrl: 'tab-group-theme-example.html',\r\n  styleUrls: ['tab-group-theme-example.css'],\r\n})\r\nexport class TabGroupThemeExample {}\r\n","module.exports = \".example-action-button {\\r\\n  margin-bottom: 8px;\\r\\n}\\r\\n\"","module.exports = \"<button mat-raised-button\\r\\n        class=\\\"example-action-button\\\"\\r\\n        (click)=\\\"toggleBackground()\\\">\\r\\n  Toggle background\\r\\n</button>\\r\\n\\r\\n<nav mat-tab-nav-bar [backgroundColor]=\\\"background\\\">\\r\\n  <a mat-tab-link *ngFor=\\\"let link of links\\\"\\r\\n     (click)=\\\"activeLink = link\\\"\\r\\n     [active]=\\\"activeLink == link\\\"> {{ link }} </a>\\r\\n  <a mat-tab-link disabled>Disabled Link</a>\\r\\n</nav>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic use of the tab nav bar\r\n */\r\n@Component({\r\n  selector: 'tab-nav-bar-basic-example',\r\n  templateUrl: 'tab-nav-bar-basic-example.html',\r\n  styleUrls: ['tab-nav-bar-basic-example.css'],\r\n})\r\nexport class TabNavBarBasicExample {\r\n  links = ['First', 'Second', 'Third'];\r\n  activeLink = this.links[0];\r\n  background = '';\r\n\r\n  toggleBackground() {\r\n    this.background = this.background ? '' : 'primary';\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"position\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"name\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"weight\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Symbol Column -->\\r\\n  <ng-container matColumnDef=\\\"symbol\\\">\\r\\n    <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n</mat-table>\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic use of `<mat-table>` (uses display flex)\r\n */\r\n@Component({\r\n  selector: 'table-basic-flex-example',\r\n  styleUrls: ['table-basic-flex-example.css'],\r\n  templateUrl: 'table-basic-flex-example.html',\r\n})\r\nexport class TableBasicFlexExample {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = ELEMENT_DATA;\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!--- Note that these columns can be defined in any order.\\r\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"position\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"weight\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Symbol Column -->\\r\\n  <ng-container matColumnDef=\\\"symbol\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic use of `<table mat-table>`\r\n */\r\n@Component({\r\n  selector: 'table-basic-example',\r\n  styleUrls: ['table-basic-example.css'],\r\n  templateUrl: 'table-basic-example.html',\r\n})\r\nexport class TableBasicExample {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = ELEMENT_DATA;\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin: 16px 8px;\\r\\n}\\r\\n\"","module.exports = \"<button mat-raised-button (click)=\\\"addColumn()\\\"> Add column </button>\\r\\n<button mat-raised-button (click)=\\\"removeColumn()\\\"> Remove column </button>\\r\\n<button mat-raised-button (click)=\\\"shuffle()\\\"> Shuffle </button>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"data\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of definedColumns\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column]}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay;\\\"></tr>\\r\\n</table>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Table dynamically changing the columns displayed\r\n */\r\n@Component({\r\n  selector: 'table-dynamic-columns-example',\r\n  styleUrls: ['table-dynamic-columns-example.css'],\r\n  templateUrl: 'table-dynamic-columns-example.html',\r\n})\r\nexport class TableDynamicColumnsExample {\r\n  definedColumns = ['name', 'weight', 'symbol', 'position'];\r\n  columnsToDisplay = this.definedColumns.slice();\r\n  data: PeriodicElement[] = ELEMENT_DATA;\r\n\r\n  addColumn() {\r\n    const randomColumn = Math.floor(Math.random() * this.definedColumns.length);\r\n    this.columnsToDisplay.push(this.definedColumns[randomColumn]);\r\n  }\r\n\r\n  removeColumn() {\r\n    if (this.columnsToDisplay.length) {\r\n      this.columnsToDisplay.pop();\r\n    }\r\n  }\r\n\r\n  shuffle() {\r\n    let currentIndex = this.columnsToDisplay.length;\r\n    while (0 !== currentIndex) {\r\n      let randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // Swap\r\n      let temp = this.columnsToDisplay[currentIndex];\r\n      this.columnsToDisplay[currentIndex] = this.columnsToDisplay[randomIndex];\r\n      this.columnsToDisplay[randomIndex] = temp;\r\n    }\r\n  }\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntr.example-detail-row {\\r\\n  height: 0;\\r\\n}\\r\\n\\r\\ntr.example-element-row:not(.example-expanded-row):hover {\\r\\n  background: #f5f5f5;\\r\\n}\\r\\n\\r\\ntr.example-element-row:not(.example-expanded-row):active {\\r\\n  background: #efefef;\\r\\n}\\r\\n\\r\\n.example-element-row td {\\r\\n  border-bottom-width: 0;\\r\\n}\\r\\n\\r\\n.example-element-detail {\\r\\n  overflow: hidden;\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.example-element-diagram {\\r\\n  min-width: 80px;\\r\\n  border: 2px solid black;\\r\\n  padding: 8px;\\r\\n  font-weight: lighter;\\r\\n  margin: 8px 0;\\r\\n  height: 104px;\\r\\n}\\r\\n\\r\\n.example-element-symbol {\\r\\n  font-weight: bold;\\r\\n  font-size: 40px;\\r\\n  line-height: normal;\\r\\n}\\r\\n\\r\\n.example-element-description {\\r\\n  padding: 16px;\\r\\n}\\r\\n\\r\\n.example-element-description-attribution {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\"","module.exports = \"<table mat-table\\r\\n       [dataSource]=\\\"dataSource\\\" multiTemplateDataRows\\r\\n       class=\\\"mat-elevation-z8\\\">\\r\\n  <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of columnsToDisplay\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column]}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\\r\\n  <ng-container matColumnDef=\\\"expandedDetail\\\">\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"columnsToDisplay.length\\\">\\r\\n      <div class=\\\"example-element-detail\\\"\\r\\n           [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\r\\n        <div class=\\\"example-element-diagram\\\">\\r\\n          <div class=\\\"example-element-position\\\"> {{element.position}} </div>\\r\\n          <div class=\\\"example-element-symbol\\\"> {{element.symbol}} </div>\\r\\n          <div class=\\\"example-element-name\\\"> {{element.name}} </div>\\r\\n          <div class=\\\"example-element-weight\\\"> {{element.weight}} </div>\\r\\n        </div>\\r\\n        <div class=\\\"example-element-description\\\">\\r\\n          {{element.description}}\\r\\n          <span class=\\\"example-element-description-attribution\\\"> -- Wikipedia </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let element; columns: columnsToDisplay;\\\"\\r\\n      class=\\\"example-element-row\\\"\\r\\n      [class.example-expanded-row]=\\\"expandedElement === element\\\"\\r\\n      (click)=\\\"expandedElement = element\\\">\\r\\n  </tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\r\\n</table>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\n\r\n/**\r\n * @title Table with expandable rows\r\n */\r\n@Component({\r\n  selector: 'table-expandable-rows-example',\r\n  styleUrls: ['table-expandable-rows-example.css'],\r\n  templateUrl: 'table-expandable-rows-example.html',\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\r\n      state('expanded', style({height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class TableExpandableRowsExample {\r\n  dataSource = ELEMENT_DATA;\r\n  columnsToDisplay = ['name', 'weight', 'symbol', 'position'];\r\n  expandedElement: PeriodicElement;\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n  description: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {\r\n    position: 1,\r\n    name: 'Hydrogen',\r\n    weight: 1.0079,\r\n    symbol: 'H',\r\n    description: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\r\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\r\n  }, {\r\n    position: 2,\r\n    name: 'Helium',\r\n    weight: 4.0026,\r\n    symbol: 'He',\r\n    description: `Helium is a chemical element with symbol He and atomic number 2. It is a\r\n        colorless, odorless, tasteless, non-toxic, inert, monatomic gas, the first in the noble gas\r\n        group in the periodic table. Its boiling point is the lowest among all the elements.`\r\n  }, {\r\n    position: 3,\r\n    name: 'Lithium',\r\n    weight: 6.941,\r\n    symbol: 'Li',\r\n    description: `Lithium is a chemical element with symbol Li and atomic number 3. It is a soft,\r\n        silvery-white alkali metal. Under standard conditions, it is the lightest metal and the\r\n        lightest solid element.`\r\n  }, {\r\n    position: 4,\r\n    name: 'Beryllium',\r\n    weight: 9.0122,\r\n    symbol: 'Be',\r\n    description: `Beryllium is a chemical element with symbol Be and atomic number 4. It is a\r\n        relatively rare element in the universe, usually occurring as a product of the spallation of\r\n        larger atomic nuclei that have collided with cosmic rays.`\r\n  }, {\r\n    position: 5,\r\n    name: 'Boron',\r\n    weight: 10.811,\r\n    symbol: 'B',\r\n    description: `Boron is a chemical element with symbol B and atomic number 5. Produced entirely\r\n        by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a\r\n        low-abundance element in the Solar system and in the Earth's crust.`\r\n  }, {\r\n    position: 6,\r\n    name: 'Carbon',\r\n    weight: 12.0107,\r\n    symbol: 'C',\r\n    description: `Carbon is a chemical element with symbol C and atomic number 6. It is nonmetallic\r\n        and tetravalent—making four electrons available to form covalent chemical bonds. It belongs\r\n        to group 14 of the periodic table.`\r\n  }, {\r\n    position: 7,\r\n    name: 'Nitrogen',\r\n    weight: 14.0067,\r\n    symbol: 'N',\r\n    description: `Nitrogen is a chemical element with symbol N and atomic number 7. It was first\r\n        discovered and isolated by Scottish physician Daniel Rutherford in 1772.`\r\n  }, {\r\n    position: 8,\r\n    name: 'Oxygen',\r\n    weight: 15.9994,\r\n    symbol: 'O',\r\n    description: `Oxygen is a chemical element with symbol O and atomic number 8. It is a member of\r\n         the chalcogen group on the periodic table, a highly reactive nonmetal, and an oxidizing\r\n         agent that readily forms oxides with most elements as well as with other compounds.`\r\n  }, {\r\n    position: 9,\r\n    name: 'Fluorine',\r\n    weight: 18.9984,\r\n    symbol: 'F',\r\n    description: `Fluorine is a chemical element with symbol F and atomic number 9. It is the\r\n        lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard\r\n        conditions.`\r\n  }, {\r\n    position: 10,\r\n    name: 'Neon',\r\n    weight: 20.1797,\r\n    symbol: 'Ne',\r\n    description: `Neon is a chemical element with symbol Ne and atomic number 10. It is a noble gas.\r\n        Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about\r\n        two-thirds the density of air.`\r\n  },\r\n];\r\n","module.exports = \"/* Structure */\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"position\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"weight\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Symbol Column -->\\r\\n  <ng-container matColumnDef=\\\"symbol\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material';\r\n\r\n/**\r\n * @title Table with filtering\r\n */\r\n@Component({\r\n  selector: 'table-filtering-example',\r\n  styleUrls: ['table-filtering-example.css'],\r\n  templateUrl: 'table-filtering-example.html',\r\n})\r\nexport class TableFilteringExample {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntr.mat-footer-row {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\"","module.exports = \"<table mat-table [dataSource]=\\\"transactions\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Item Column -->\\r\\n  <ng-container matColumnDef=\\\"item\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Item </th>\\r\\n    <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.item}} </td>\\r\\n    <td mat-footer-cell *matFooterCellDef> Total </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Cost Column -->\\r\\n  <ng-container matColumnDef=\\\"cost\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Cost </th>\\r\\n    <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.cost | currency}} </td>\\r\\n    <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"></tr>\\r\\n</table>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\nexport interface Transaction {\r\n  item: string;\r\n  cost: number;\r\n}\r\n\r\n/**\r\n * @title Footer row table\r\n */\r\n@Component({\r\n  selector: 'table-footer-row-example',\r\n  styleUrls: ['table-footer-row-example.css'],\r\n  templateUrl: 'table-footer-row-example.html',\r\n})\r\nexport class TableFooterRowExample {\r\n  displayedColumns = ['item', 'cost'];\r\n  transactions: Transaction[] = [\r\n    {item: 'Beach ball', cost: 4},\r\n    {item: 'Towel', cost: 5},\r\n    {item: 'Frisbee', cost: 2},\r\n    {item: 'Sunscreen', cost: 4},\r\n    {item: 'Cooler', cost: 25},\r\n    {item: 'Swim suit', cost: 15},\r\n  ];\r\n\r\n  /** Gets the total cost of all transactions. */\r\n  getTotalCost() {\r\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n  }\r\n}\r\n","module.exports = \"/* Structure */\\r\\n.example-container {\\r\\n  position: relative;\\r\\n}\\r\\n.example-table-container {\\r\\n  position: relative;\\r\\n  max-height: 400px;\\r\\n  overflow: auto;\\r\\n}\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n.example-loading-shade {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 56px;\\r\\n  right: 0;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n  z-index: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n.example-rate-limit-reached {\\r\\n  color: #980000;\\r\\n  max-width: 360px;\\r\\n  text-align: center;\\r\\n}\\r\\n/* Column Widths */\\r\\n.mat-column-number,\\r\\n.mat-column-state {\\r\\n  max-width: 64px;\\r\\n}\\r\\n.mat-column-created {\\r\\n  max-width: 124px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n  <div class=\\\"example-loading-shade\\\"\\r\\n       *ngIf=\\\"isLoadingResults || isRateLimitReached\\\">\\r\\n    <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\r\\n    <div class=\\\"example-rate-limit-reached\\\" *ngIf=\\\"isRateLimitReached\\\">\\r\\n      GitHub's API rate limit has been reached. It will be reset in one minute.\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"example-table-container\\\">\\r\\n\\r\\n    <table mat-table [dataSource]=\\\"data\\\" class=\\\"example-table\\\"\\r\\n           matSort matSortActive=\\\"created\\\" matSortDisableClear matSortDirection=\\\"asc\\\">\\r\\n      <!-- Number Column -->\\r\\n      <ng-container matColumnDef=\\\"number\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{ row.number }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Title Column -->\\r\\n      <ng-container matColumnDef=\\\"title\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Title</th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{ row.title }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- State Column -->\\r\\n      <ng-container matColumnDef=\\\"state\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>State</th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{ row.state }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Created Column -->\\r\\n      <ng-container matColumnDef=\\\"created\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear=\\\"true\\\">\\r\\n          Created\\r\\n        </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{ row.created_at | date }}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n  <mat-paginator [length]=\\\"resultsLength\\\" [pageSize]=\\\"30\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","import {HttpClient} from '@angular/common/http';\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatSort} from '@angular/material';\r\nimport {merge, Observable, of as observableOf} from 'rxjs';\r\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\r\n\r\n/**\r\n * @title Table retrieving data through HTTP\r\n */\r\n@Component({\r\n  selector: 'table-http-example',\r\n  styleUrls: ['table-http-example.css'],\r\n  templateUrl: 'table-http-example.html',\r\n})\r\nexport class TableHttpExample implements OnInit {\r\n  displayedColumns = ['created', 'state', 'number', 'title'];\r\n  exampleDatabase: ExampleHttpDao | null;\r\n  data: GithubIssue[] = [];\r\n\r\n  resultsLength = 0;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit() {\r\n    this.exampleDatabase = new ExampleHttpDao(this.http);\r\n\r\n    // If the user changes the sort order, reset back to the first page.\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        startWith({}),\r\n        switchMap(() => {\r\n          this.isLoadingResults = true;\r\n          return this.exampleDatabase!.getRepoIssues(\r\n            this.sort.active, this.sort.direction, this.paginator.pageIndex);\r\n        }),\r\n        map(data => {\r\n          // Flip flag to show that loading has finished.\r\n          this.isLoadingResults = false;\r\n          this.isRateLimitReached = false;\r\n          this.resultsLength = data.total_count;\r\n\r\n          return data.items;\r\n        }),\r\n        catchError(() => {\r\n          this.isLoadingResults = false;\r\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\r\n          this.isRateLimitReached = true;\r\n          return observableOf([]);\r\n        })\r\n      ).subscribe(data => this.data = data);\r\n  }\r\n}\r\n\r\nexport interface GithubApi {\r\n  items: GithubIssue[];\r\n  total_count: number;\r\n}\r\n\r\nexport interface GithubIssue {\r\n  created_at: string;\r\n  number: string;\r\n  state: string;\r\n  title: string;\r\n}\r\n\r\n/** An example database that the data source uses to retrieve data for the table. */\r\nexport class ExampleHttpDao {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getRepoIssues(sort: string, order: string, page: number): Observable<GithubApi> {\r\n    const href = 'https://api.github.com/search/issues';\r\n    const requestUrl =\r\n        `${href}?q=repo:angular/material2&sort=${sort}&order=${order}&page=${page + 1}`;\r\n\r\n    return this.http.get<GithubApi>(requestUrl);\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-first-header-row th {\\r\\n  border-bottom: none;\\r\\n}\\r\\n\\r\\n.example-second-header-row {\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\n.example-first-footer-row {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.example-second-footer-row td {\\r\\n  color: #900000;\\r\\n}\\r\\n\"","module.exports = \"<table mat-table [dataSource]=\\\"transactions\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Item Column -->\\r\\n  <ng-container matColumnDef=\\\"item\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Item </th>\\r\\n    <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.item}} </td>\\r\\n    <td mat-footer-cell *matFooterCellDef> Total </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Cost Column -->\\r\\n  <ng-container matColumnDef=\\\"cost\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Cost </th>\\r\\n    <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.cost | currency}} </td>\\r\\n    <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Item Description Column -->\\r\\n  <ng-container matColumnDef=\\\"item-description\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name of the item purchased </th>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Cost Description Column -->\\r\\n  <ng-container matColumnDef=\\\"cost-description\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Cost of the item in USD </th>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Disclaimer column -->\\r\\n  <ng-container matColumnDef=\\\"disclaimer\\\">\\r\\n    <td mat-footer-cell *matFooterCellDef colspan=\\\"2\\\">\\r\\n      Please note that the cost of items displayed are completely and totally made up.\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- The table will render two header rows, one data row per data object, and two footer rows. -->\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"\\r\\n      class=\\\"example-first-header-row\\\">\\r\\n  </tr>\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"['item-description', 'cost-description']\\\"\\r\\n      class=\\\"example-second-header-row\\\">\\r\\n  </tr>\\r\\n\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n  <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\" class=\\\"example-first-footer-row\\\"></tr>\\r\\n  <tr mat-footer-row *matFooterRowDef=\\\"['disclaimer']\\\" class=\\\"example-second-footer-row\\\"></tr>\\r\\n</table>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {Transaction} from '../table-footer-row/table-footer-row-example';\r\n\r\nexport interface Transaction {\r\n  item: string;\r\n  cost: number;\r\n}\r\n\r\n/**\r\n * @title Table with multiple header and footer rows\r\n */\r\n@Component({\r\n  selector: 'table-multiple-header-footer-example',\r\n  styleUrls: ['table-multiple-header-footer-example.css'],\r\n  templateUrl: 'table-multiple-header-footer-example.html',\r\n})\r\nexport class TableMultipleHeaderFooterExample {\r\n  displayedColumns = ['item', 'cost'];\r\n  transactions: Transaction[] = [\r\n    {item: 'Beach ball', cost: 4},\r\n    {item: 'Towel', cost: 5},\r\n    {item: 'Frisbee', cost: 2},\r\n    {item: 'Sunscreen', cost: 4},\r\n    {item: 'Cooler', cost: 25},\r\n    {item: 'Swim suit', cost: 15},\r\n  ];\r\n\r\n  /** Gets the total cost of all transactions. */\r\n  getTotalCost() {\r\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntd, th {\\r\\n  width: 25%;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Progress Column -->\\r\\n    <ng-container matColumnDef=\\\"progress\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Color Column -->\\r\\n    <ng-container matColumnDef=\\\"color\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Color </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> {{row.color}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'table-overview-example',\r\n  styleUrls: ['table-overview-example.css'],\r\n  templateUrl: 'table-overview-example.html',\r\n})\r\nexport class TableOverviewExample implements OnInit {\r\n  displayedColumns = ['id', 'name', 'progress', 'color'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor() {\r\n    // Create 100 users\r\n    const users: UserData[] = [];\r\n    for (let i = 1; i <= 100; i++) { users.push(createNewUser(i)); }\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource(users);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n  const name =\r\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\r\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\r\n\r\n  return {\r\n    id: id.toString(),\r\n    name: name,\r\n    progress: Math.round(Math.random() * 100).toString(),\r\n    color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\r\n  };\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\r\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\r\nconst NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\r\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\r\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  color: string;\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"position\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"weight\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"symbol\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\r\n\r\n/**\r\n * @title Table with pagination\r\n */\r\n@Component({\r\n  selector: 'table-pagination-example',\r\n  styleUrls: ['table-pagination-example.css'],\r\n  templateUrl: 'table-pagination-example.html',\r\n})\r\nexport class TablePaginationExample implements OnInit {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\r\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\r\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\r\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\r\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\r\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\r\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\r\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\r\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\r\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\r\n];\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<table mat-table [dataSource]=\\\"data\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <!-- Index Column -->\\r\\n  <ng-container matColumnDef=\\\"$implicit\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> $implicit </th>\\r\\n    <td mat-cell *matCellDef=\\\"let data\\\"> {{data}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Index Column -->\\r\\n  <ng-container matColumnDef=\\\"index\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> index </th>\\r\\n    <td mat-cell *matCellDef=\\\"let index = index\\\"> {{index}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Index Column -->\\r\\n  <ng-container matColumnDef=\\\"count\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> count </th>\\r\\n    <td mat-cell *matCellDef=\\\"let count = count\\\"> {{count}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Index Column -->\\r\\n  <ng-container matColumnDef=\\\"first\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> first </th>\\r\\n    <td mat-cell *matCellDef=\\\"let first = first\\\"> {{first}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Index Column -->\\r\\n  <ng-container matColumnDef=\\\"last\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> last </th>\\r\\n    <td mat-cell *matCellDef=\\\"let last = last\\\"> {{last}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Index Column -->\\r\\n  <ng-container matColumnDef=\\\"even\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> even </th>\\r\\n    <td mat-cell *matCellDef=\\\"let even = even\\\"> {{even}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Index Column -->\\r\\n  <ng-container matColumnDef=\\\"odd\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> odd </th>\\r\\n    <td mat-cell *matCellDef=\\\"let odd = odd\\\"> {{odd}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Table showing each row context properties.\r\n */\r\n@Component({\r\n  selector: 'table-row-context-example',\r\n  styleUrls: ['table-row-context-example.css'],\r\n  templateUrl: 'table-row-context-example.html',\r\n})\r\nexport class TableRowContextExample {\r\n  displayedColumns = ['$implicit', 'index', 'count', 'first', 'last', 'even', 'odd'];\r\n  data: string[] = ['one', 'two', 'three', 'four', 'five'];\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!-- Checkbox Column -->\\r\\n  <ng-container matColumnDef=\\\"select\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>\\r\\n      <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\r\\n      </mat-checkbox>\\r\\n    </th>\\r\\n    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n      <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\r\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\r\\n                    [checked]=\\\"selection.isSelected(row)\\\">\\r\\n      </mat-checkbox>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"position\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"weight\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Symbol Column -->\\r\\n  <ng-container matColumnDef=\\\"symbol\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\r\\n      (click)=\\\"selection.toggle(row)\\\">\\r\\n  </tr>\\r\\n</table>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\n\r\n/**\r\n * @title Table with selection\r\n */\r\n@Component({\r\n  selector: 'table-selection-example',\r\n  styleUrls: ['table-selection-example.css'],\r\n  templateUrl: 'table-selection-example.html',\r\n})\r\nexport class TableSelectionExample {\r\n  displayedColumns = ['select', 'position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n  selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n        this.selection.clear() :\r\n        this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nth.mat-sort-header-sorted {\\r\\n  color: black;\\r\\n}\\r\\n\"","module.exports = \"<table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!-- Position Column -->\\r\\n  <ng-container matColumnDef=\\\"position\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Weight Column -->\\r\\n  <ng-container matColumnDef=\\\"weight\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Symbol Column -->\\r\\n  <ng-container matColumnDef=\\\"symbol\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatSort, MatTableDataSource} from '@angular/material';\r\n\r\n/**\r\n * @title Table with sorting\r\n */\r\n@Component({\r\n  selector: 'table-sorting-example',\r\n  styleUrls: ['table-sorting-example.css'],\r\n  templateUrl: 'table-sorting-example.html',\r\n})\r\nexport class TableSortingExample implements OnInit {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n","module.exports = \".example-container {\\r\\n  height: 400px;\\r\\n  width: 550px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 800px;\\r\\n}\\r\\n\\r\\ntd.mat-column-star {\\r\\n  width: 20px;\\r\\n  padding-right: 8px;\\r\\n}\\r\\n\\r\\nth.mat-column-position, td.mat-column-position {\\r\\n  padding-left: 8px;\\r\\n}\\r\\n\\r\\n.mat-table-sticky:first-child {\\r\\n  border-right: 1px solid #e0e0e0;\\r\\n}\\r\\n\\r\\n.mat-table-sticky:last-child {\\r\\n  border-left: 1px solid #e0e0e0;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\" sticky>\\r\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"position\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"weight\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"symbol\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Star Column -->\\r\\n    <ng-container matColumnDef=\\\"star\\\" stickyEnd>\\r\\n      <th mat-header-cell *matHeaderCellDef></th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <mat-icon>more_vert</mat-icon>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Table with a sticky columns\r\n */\r\n@Component({\r\n  selector: 'table-sticky-columns-example',\r\n  styleUrls: ['table-sticky-columns-example.css'],\r\n  templateUrl: 'table-sticky-columns-example.html',\r\n})\r\nexport class TableStickyColumnsExample {\r\n  displayedColumns =\r\n      ['name', 'position', 'weight', 'symbol', 'position', 'weight', 'symbol', 'star'];\r\n  dataSource = ELEMENT_DATA;\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n","module.exports = \".example-container {\\r\\n  height: 400px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.mat-table-sticky {\\r\\n  background: #59abfd;\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.example-sticky-toggle-group {\\r\\n  margin: 8px;\\r\\n}\\r\\n\\r\\n.mat-column-filler {\\r\\n  padding: 0 8px;\\r\\n  font-size: 10px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.mat-header-cell, .mat-footer-cell, .mat-cell {\\r\\n  min-width: 80px;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.mat-header-row, .mat-footer-row, .mat-row {\\r\\n  min-width: 1920px; /* 24 columns, 80px each */\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <button mat-raised-button (click)=\\\"tables.push(tables.length)\\\">Add table</button>\\r\\n  <button mat-raised-button (click)=\\\"tables.pop()\\\">Remove table</button>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  Sticky Headers:\\r\\n  <mat-button-toggle-group multiple [value]=\\\"['header-1']\\\"\\r\\n                           #stickyHeaders=\\\"matButtonToggleGroup\\\"\\r\\n                           class=\\\"example-sticky-toggle-group\\\">\\r\\n    <mat-button-toggle value=\\\"header-1\\\"> Row 1 </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"header-2\\\"> Row 2 </mat-button-toggle>\\r\\n  </mat-button-toggle-group>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  Sticky Footers:\\r\\n  <mat-button-toggle-group multiple [value]=\\\"['footer-1']\\\"\\r\\n                           #stickyFooters=\\\"matButtonToggleGroup\\\"\\r\\n                           class=\\\"example-sticky-toggle-group\\\">\\r\\n    <mat-button-toggle value=\\\"footer-1\\\"> Row 1 </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"footer-2\\\"> Row 2 </mat-button-toggle>\\r\\n  </mat-button-toggle-group>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  Sticky Columns:\\r\\n  <mat-button-toggle-group multiple [value]=\\\"['position', 'symbol']\\\"\\r\\n                           #stickyColumns=\\\"matButtonToggleGroup\\\"\\r\\n                           class=\\\"example-sticky-toggle-group\\\">\\r\\n    <mat-button-toggle value=\\\"position\\\"> Position </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"name\\\"> Name </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"weight\\\"> Weight </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"symbol\\\"> Symbol </mat-button-toggle>\\r\\n  </mat-button-toggle-group>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n  <mat-table [dataSource]=\\\"dataSource\\\" *ngFor=\\\"let table of tables\\\">\\r\\n    <ng-container matColumnDef=\\\"position\\\" [sticky]=\\\"isSticky(stickyColumns, 'position')\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Position </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef> Position Footer </mat-footer-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\" [sticky]=\\\"isSticky(stickyColumns, 'name')\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef> Name Footer </mat-footer-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"weight\\\" [stickyEnd]=\\\"isSticky(stickyColumns, 'weight')\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef> Weight Footer </mat-footer-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"symbol\\\" [stickyEnd]=\\\"isSticky(stickyColumns, 'symbol')\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef> Symbol Footer </mat-footer-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"filler\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Filler header cell </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> Filler data cell </mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef> Filler footer cell </mat-footer-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-1')\\\"></mat-header-row>\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-2')\\\"></mat-header-row>\\r\\n\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n\\r\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-1')\\\"></mat-footer-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-2')\\\"></mat-footer-row>\\r\\n  </mat-table>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MatButtonToggleGroup} from '@angular/material';\r\n\r\n/**\r\n * @title Flex-layout tables with toggle-able sticky headers, footers, and columns\r\n */\r\n@Component({\r\n  selector: 'table-sticky-complex-flex-example',\r\n  styleUrls: ['table-sticky-complex-flex-example.css'],\r\n  templateUrl: 'table-sticky-complex-flex-example.html',\r\n})\r\nexport class TableStickyComplexFlexExample {\r\n  displayedColumns: string[] = [];\r\n  dataSource = ELEMENT_DATA;\r\n\r\n  tables = [0];\r\n\r\n  constructor() {\r\n    this.displayedColumns.length = 24;\r\n    this.displayedColumns.fill('filler');\r\n\r\n    // The first two columns should be position and name; the last two columns: weight, symbol\r\n    this.displayedColumns[0] = 'position';\r\n    this.displayedColumns[1] = 'name';\r\n    this.displayedColumns[22] = 'weight';\r\n    this.displayedColumns[23] = 'symbol';\r\n  }\r\n\r\n  /** Whether the button toggle group contains the id as an active value. */\r\n  isSticky(buttonToggleGroup: MatButtonToggleGroup, id: string) {\r\n    return (buttonToggleGroup.value || []).indexOf(id) !== -1;\r\n  }\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n","module.exports = \".example-container {\\r\\n  height: 400px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.mat-table-sticky {\\r\\n  background: #59abfd;\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.example-sticky-toggle-group {\\r\\n  margin: 8px;\\r\\n}\\r\\n\\r\\n.mat-column-filler {\\r\\n  padding: 0 8px;\\r\\n  font-size: 10px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.mat-header-cell, .mat-footer-cell, .mat-cell {\\r\\n  min-width: 80px;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <button mat-raised-button (click)=\\\"tables.push(tables.length)\\\">Add table</button>\\r\\n  <button mat-raised-button (click)=\\\"tables.pop()\\\">Remove table</button>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  Sticky Headers:\\r\\n  <mat-button-toggle-group multiple [value]=\\\"['header-1']\\\"\\r\\n                           #stickyHeaders=\\\"matButtonToggleGroup\\\"\\r\\n                           class=\\\"example-sticky-toggle-group\\\">\\r\\n    <mat-button-toggle value=\\\"header-1\\\"> Row 1 </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"header-2\\\"> Row 2 </mat-button-toggle>\\r\\n  </mat-button-toggle-group>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  Sticky Footers:\\r\\n  <mat-button-toggle-group multiple [value]=\\\"['footer-1']\\\"\\r\\n                           #stickyFooters=\\\"matButtonToggleGroup\\\"\\r\\n                           class=\\\"example-sticky-toggle-group\\\">\\r\\n    <mat-button-toggle value=\\\"footer-1\\\"> Row 1 </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"footer-2\\\"> Row 2 </mat-button-toggle>\\r\\n  </mat-button-toggle-group>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  Sticky Columns:\\r\\n  <mat-button-toggle-group multiple [value]=\\\"['position', 'symbol']\\\"\\r\\n                           #stickyColumns=\\\"matButtonToggleGroup\\\"\\r\\n                           class=\\\"example-sticky-toggle-group\\\">\\r\\n    <mat-button-toggle value=\\\"position\\\"> Position </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"name\\\"> Name </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"weight\\\"> Weight </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"symbol\\\"> Symbol </mat-button-toggle>\\r\\n  </mat-button-toggle-group>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" *ngFor=\\\"let table of tables\\\">\\r\\n    <ng-container matColumnDef=\\\"position\\\" [sticky]=\\\"isSticky(stickyColumns, 'position')\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Position </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n      <td mat-footer-cell *matFooterCellDef> Position Footer </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\" [sticky]=\\\"isSticky(stickyColumns, 'name')\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n      <td mat-footer-cell *matFooterCellDef> Name Footer </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"weight\\\" [stickyEnd]=\\\"isSticky(stickyColumns, 'weight')\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\r\\n      <td mat-footer-cell *matFooterCellDef> Weight Footer </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"symbol\\\" [stickyEnd]=\\\"isSticky(stickyColumns, 'symbol')\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\r\\n      <td mat-footer-cell *matFooterCellDef> Symbol Footer </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"filler\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Filler header cell </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> Filler data cell </td>\\r\\n      <td mat-footer-cell *matFooterCellDef> Filler footer cell </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-1')\\\"></tr>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-2')\\\"></tr>\\r\\n\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n    <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-1')\\\"></tr>\\r\\n    <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-2')\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MatButtonToggleGroup} from '@angular/material';\r\n\r\n/**\r\n * @title Tables with toggle-able sticky headers, footers, and columns\r\n */\r\n@Component({\r\n  selector: 'table-sticky-complex-example',\r\n  styleUrls: ['table-sticky-complex-example.css'],\r\n  templateUrl: 'table-sticky-complex-example.html',\r\n})\r\nexport class TableStickyComplexExample {\r\n  displayedColumns: string[] = [];\r\n  dataSource = ELEMENT_DATA;\r\n\r\n  tables = [0];\r\n\r\n  constructor() {\r\n    this.displayedColumns.length = 24;\r\n    this.displayedColumns.fill('filler');\r\n\r\n    // The first two columns should be position and name; the last two columns: weight, symbol\r\n    this.displayedColumns[0] = 'position';\r\n    this.displayedColumns[1] = 'name';\r\n    this.displayedColumns[22] = 'weight';\r\n    this.displayedColumns[23] = 'symbol';\r\n  }\r\n\r\n  /** Whether the button toggle group contains the id as an active value. */\r\n  isSticky(buttonToggleGroup: MatButtonToggleGroup, id: string) {\r\n    return (buttonToggleGroup.value || []).indexOf(id) !== -1;\r\n  }\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n","module.exports = \".example-container {\\r\\n  height: 270px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntr.mat-footer-row {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.mat-table-sticky {\\r\\n  border-top: 1px solid #e0e0e0;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"transactions\\\">\\r\\n    <!-- Item Column -->\\r\\n    <ng-container matColumnDef=\\\"item\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Item </th>\\r\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.item}} </td>\\r\\n      <td mat-footer-cell *matFooterCellDef> Total </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Cost Column -->\\r\\n    <ng-container matColumnDef=\\\"cost\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Cost </th>\\r\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.cost | currency}} </td>\\r\\n      <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns sticky: true\\\"></tr>\\r\\n  </table>\\r\\n</div>\"","import {Component} from '@angular/core';\r\n\r\nexport interface Transaction {\r\n  item: string;\r\n  cost: number;\r\n}\r\n\r\n/**\r\n * @title Table with a sticky footer\r\n */\r\n@Component({\r\n  selector: 'table-sticky-footer-example',\r\n  styleUrls: ['table-sticky-footer-example.css'],\r\n  templateUrl: 'table-sticky-footer-example.html',\r\n})\r\nexport class TableStickyFooterExample {\r\n  displayedColumns = ['item', 'cost'];\r\n  transactions: Transaction[] = [\r\n    {item: 'Beach ball', cost: 4},\r\n    {item: 'Towel', cost: 5},\r\n    {item: 'Frisbee', cost: 2},\r\n    {item: 'Sunscreen', cost: 4},\r\n    {item: 'Cooler', cost: 25},\r\n    {item: 'Swim suit', cost: 15},\r\n  ];\r\n\r\n  /** Gets the total cost of all transactions. */\r\n  getTotalCost() {\r\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n  }\r\n}\r\n","module.exports = \".example-container {\\r\\n  height: 400px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"position\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"weight\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"symbol\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Table with sticky header\r\n */\r\n@Component({\r\n  selector: 'table-sticky-header-example',\r\n  styleUrls: ['table-sticky-header-example.css'],\r\n  templateUrl: 'table-sticky-header-example.html',\r\n})\r\nexport class TableStickyHeaderExample {\r\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n  dataSource = ELEMENT_DATA;\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<form>\\r\\n  <mat-form-field>\\r\\n    <mat-label>First name</mat-label>\\r\\n    <input matInput (cdkAutofill)=\\\"firstNameAutofilled = $event.isAutofilled\\\">\\r\\n    <mat-hint *ngIf=\\\"firstNameAutofilled\\\">Autofilled!</mat-hint>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field>\\r\\n    <mat-label>Last name</mat-label>\\r\\n    <input matInput (cdkAutofill)=\\\"lastNameAutofilled = $event.isAutofilled\\\">\\r\\n    <mat-hint *ngIf=\\\"lastNameAutofilled\\\">Autofilled!</mat-hint>\\r\\n  </mat-form-field>\\r\\n  <button mat-raised-button>Submit</button>\\r\\n</form>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/** @title Monitoring autofill state with cdkAutofill */\r\n@Component({\r\n  selector: 'text-field-autofill-directive-example',\r\n  templateUrl: './text-field-autofill-directive-example.html',\r\n  styleUrls: ['./text-field-autofill-directive-example.css'],\r\n})\r\nexport class TextFieldAutofillDirectiveExample {\r\n  firstNameAutofilled: boolean;\r\n  lastNameAutofilled: boolean;\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<form>\\r\\n  <mat-form-field>\\r\\n    <mat-label>First name</mat-label>\\r\\n    <input matInput #first>\\r\\n    <mat-hint *ngIf=\\\"firstNameAutofilled\\\">Autofilled!</mat-hint>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field>\\r\\n    <mat-label>Last name</mat-label>\\r\\n    <input matInput #last>\\r\\n    <mat-hint *ngIf=\\\"lastNameAutofilled\\\">Autofilled!</mat-hint>\\r\\n  </mat-form-field>\\r\\n  <button mat-raised-button>Submit</button>\\r\\n</form>\\r\\n\"","import {AutofillMonitor} from '@angular/cdk/text-field';\r\nimport {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\n\r\n/** @title Monitoring autofill state with AutofillMonitor */\r\n@Component({\r\n  selector: 'text-field-autofill-monitor-example',\r\n  templateUrl: './text-field-autofill-monitor-example.html',\r\n  styleUrls: ['./text-field-autofill-monitor-example.css'],\r\n})\r\nexport class TextFieldAutofillMonitorExample implements OnDestroy, OnInit {\r\n  @ViewChild('first', {read: ElementRef}) firstName: ElementRef;\r\n  @ViewChild('last', {read: ElementRef}) lastName: ElementRef;\r\n  firstNameAutofilled: boolean;\r\n  lastNameAutofilled: boolean;\r\n\r\n  constructor(private autofill: AutofillMonitor) {}\r\n\r\n  ngOnInit() {\r\n    this.autofill.monitor(this.firstName.nativeElement)\r\n        .subscribe(e => this.firstNameAutofilled = e.isAutofilled);\r\n    this.autofill.monitor(this.lastName.nativeElement)\r\n        .subscribe(e => this.lastNameAutofilled = e.isAutofilled);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.autofill.stopMonitoring(this.firstName.nativeElement);\r\n    this.autofill.stopMonitoring(this.lastName.nativeElement);\r\n  }\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-label>Font size</mat-label>\\r\\n  <mat-select #fontSize value=\\\"16px\\\" (selectionChange)=\\\"triggerResize()\\\">\\r\\n    <mat-option value=\\\"10px\\\">10px</mat-option>\\r\\n    <mat-option value=\\\"12px\\\">12px</mat-option>\\r\\n    <mat-option value=\\\"14px\\\">14px</mat-option>\\r\\n    <mat-option value=\\\"16px\\\">16px</mat-option>\\r\\n    <mat-option value=\\\"18px\\\">18px</mat-option>\\r\\n    <mat-option value=\\\"20px\\\">20px</mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field [style.fontSize]=\\\"fontSize.value\\\">\\r\\n  <mat-label>Autosize textarea</mat-label>\\r\\n  <textarea matInput\\r\\n            cdkTextareaAutosize\\r\\n            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n            cdkAutosizeMinRows=\\\"2\\\"\\r\\n            cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\r\\n</mat-form-field>\\r\\n\"","import {CdkTextareaAutosize} from '@angular/cdk/text-field';\r\nimport {Component, NgZone, ViewChild} from '@angular/core';\r\nimport {take} from 'rxjs/operators';\r\n\r\n/** @title Auto-resizing textarea */\r\n@Component({\r\n  selector: 'text-field-autosize-textarea-example',\r\n  templateUrl: './text-field-autosize-textarea-example.html',\r\n  styleUrls: ['./text-field-autosize-textarea-example.css'],\r\n})\r\nexport class TextFieldAutosizeTextareaExample {\r\n  constructor(private ngZone: NgZone) {}\r\n\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n\r\n  triggerResize() {\r\n    // Wait for changes to be applied, then trigger textarea resize.\r\n    this.ngZone.onStable.pipe(take(1))\r\n        .subscribe(() => this.autosize.resizeToFitContent(true));\r\n  }\r\n}\r\n","module.exports = \".example-icon {\\r\\n  padding: 0 14px;\\r\\n}\\r\\n\\r\\n.example-spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <span>Custom Toolbar</span>\\r\\n  </mat-toolbar-row>\\r\\n\\r\\n  <mat-toolbar-row>\\r\\n    <span>Second Line</span>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <mat-icon class=\\\"example-icon\\\">verified_user</mat-icon>\\r\\n  </mat-toolbar-row>\\r\\n\\r\\n  <mat-toolbar-row>\\r\\n    <span>Third Line</span>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <mat-icon class=\\\"example-icon\\\">favorite</mat-icon>\\r\\n    <mat-icon class=\\\"example-icon\\\">delete</mat-icon>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Multi-row toolbar\r\n */\r\n@Component({\r\n  selector: 'toolbar-multirow-example',\r\n  templateUrl: 'toolbar-multirow-example.html',\r\n  styleUrls: ['toolbar-multirow-example.css'],\r\n})\r\nexport class ToolbarMultirowExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<mat-toolbar>My App</mat-toolbar>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic toolbar\r\n */\r\n@Component({\r\n  selector: 'toolbar-overview-example',\r\n  templateUrl: 'toolbar-overview-example.html',\r\n  styleUrls: ['toolbar-overview-example.css'],\r\n})\r\nexport class ToolbarOverviewExample {}\r\n","module.exports = \".example-button {\\r\\n  display: block;\\r\\n  width: 48px;\\r\\n  margin: 80px auto 400px;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n  height: 200px;\\r\\n  overflow: auto;\\r\\n  border: 1px solid #ccc;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-select placeholder=\\\"Tooltip position\\\" [formControl]=\\\"position\\\">\\r\\n    <mat-option *ngFor=\\\"let positionOption of positionOptions\\\" [value]=\\\"positionOption\\\">\\r\\n      {{positionOption}}\\r\\n    </mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"example-container\\\" cdk-scrollable>\\r\\n  <button mat-raised-button #tooltip=\\\"matTooltip\\\"\\r\\n          matTooltip=\\\"Info about the action\\\"\\r\\n          [matTooltipPosition]=\\\"position.value\\\"\\r\\n          matTooltipHideDelay=\\\"100000\\\"\\r\\n          aria-label=\\\"Button that displays a tooltip that hides when scrolled out of the container\\\"\\r\\n          class=\\\"example-button\\\">\\r\\n    Action\\r\\n  </button>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {TooltipPosition} from '@angular/material';\r\n\r\n/**\r\n * @title Tooltip that demonstrates auto-hiding when it clips out of its scrolling container.\r\n */\r\n@Component({\r\n  selector: 'tooltip-auto-hide-example',\r\n  templateUrl: 'tooltip-auto-hide-example.html',\r\n  styleUrls: ['tooltip-auto-hide-example.css'],\r\n})\r\nexport class TooltipAutoHideExample {\r\n  positionOptions: TooltipPosition[] = ['below', 'above', 'left', 'right'];\r\n  position = new FormControl(this.positionOptions[0]);\r\n}\r\n","module.exports = \".example-button {\\r\\n  margin-top: 16px;\\r\\n}\\r\\n\\r\\n.example-tooltip-red {\\r\\n  background: #b71c1c;\\r\\n}\\r\\n\"","module.exports = \"<button mat-raised-button\\r\\n        matTooltip=\\\"Info about the action\\\"\\r\\n        matTooltipClass=\\\"example-tooltip-red\\\"\\r\\n        aria-label=\\\"Button that shows a red tooltip\\\"\\r\\n        class=\\\"example-button\\\">\\r\\n  Red-tooltip Action\\r\\n</button>\\r\\n\"","import {Component, ViewEncapsulation} from '@angular/core';\r\n\r\n/**\r\n * @title Tooltip that can have a custom class applied.\r\n */\r\n@Component({\r\n  selector: 'tooltip-custom-class-example',\r\n  templateUrl: 'tooltip-custom-class-example.html',\r\n  styleUrls: ['tooltip-custom-class-example.css'],\r\n  // Need to remove view encapsulation so that the custom tooltip style defined in\r\n  // `tooltip-custom-class-example.css` will not be scoped to this component's view.\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class TooltipCustomClassExample { }\r\n","module.exports = \".example-user-input {\\r\\n  display: block;\\r\\n  width: 150px;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field class=\\\"example-user-input\\\">\\r\\n  <input matInput placeholder=\\\"Show delay (milliseconds)\\\"\\r\\n         type=\\\"number\\\"\\r\\n         aria-label=\\\"Adds a delay between hovering over the button and displaying the tooltip\\\"\\r\\n         [formControl]=\\\"showDelay\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field class=\\\"example-user-input\\\">\\r\\n  <input matInput placeholder=\\\"Hide delay (milliseconds)\\\"\\r\\n         type=\\\"number\\\"\\r\\n         aria-label=\\\"Adds a delay between hovering away from the button and hiding the tooltip\\\"\\r\\n         [formControl]=\\\"hideDelay\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<button mat-raised-button\\r\\n        matTooltip=\\\"Info about the action\\\"\\r\\n        [matTooltipShowDelay]=\\\"showDelay.value\\\"\\r\\n        [matTooltipHideDelay]=\\\"hideDelay.value\\\"\\r\\n        aria-label=\\\"Button that displays a tooltip with a customized delay in showing and hiding\\\">\\r\\n  Action\\r\\n</button>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n/**\r\n * @title Tooltip with a show and hide delay\r\n */\r\n@Component({\r\n  selector: 'tooltip-delay-example',\r\n  templateUrl: 'tooltip-delay-example.html',\r\n  styleUrls: ['tooltip-delay-example.css'],\r\n})\r\nexport class TooltipDelayExample {\r\n  showDelay = new FormControl(1000);\r\n  hideDelay = new FormControl(2000);\r\n}\r\n","module.exports = \".example-disabled-checkbox {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n\"","module.exports = \"<button mat-raised-button\\r\\n        matTooltip=\\\"Info about the action\\\"\\r\\n        [matTooltipDisabled]=\\\"disabled.value\\\"\\r\\n        aria-label=\\\"Button that displays a tooltip that can be programatically disabled\\\">\\r\\n  Action\\r\\n</button>\\r\\n\\r\\n<mat-checkbox [formControl]=\\\"disabled\\\" class=\\\"example-disabled-checkbox\\\">\\r\\n  Tooltip disabled\\r\\n</mat-checkbox>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n/**\r\n * @title Tooltip that can be disabled\r\n */\r\n@Component({\r\n  selector: 'tooltip-disabled-example',\r\n  templateUrl: 'tooltip-disabled-example.html',\r\n  styleUrls: ['tooltip-disabled-example.css'],\r\n})\r\nexport class TooltipDisabledExample {\r\n  disabled = new FormControl(false);\r\n}\r\n","module.exports = \".example-action-button {\\r\\n  margin-top: 16px;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <span> Mouse over to </span>\\r\\n  <button mat-button\\r\\n          (mouseenter)=\\\"tooltip.show()\\\"\\r\\n          aria-label=\\\"Button that progamatically shows a tooltip on another button\\\"\\r\\n          class=\\\"example-action-button\\\">\\r\\n    show\\r\\n  </button>\\r\\n  <button mat-button\\r\\n          (mouseenter)=\\\"tooltip.hide()\\\"\\r\\n          aria-label=\\\"Button that progamatically hides a tooltip on another button\\\"\\r\\n          class=\\\"example-action-button\\\">\\r\\n    hide\\r\\n  </button>\\r\\n  <button mat-button\\r\\n          (mouseenter)=\\\"tooltip.toggle()\\\"\\r\\n          aria-label=\\\"Button that progamatically toggles a tooltip on another button to show/hide\\\"\\r\\n          class=\\\"example-action-button\\\">\\r\\n    toggle show/hide\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<button mat-raised-button #tooltip=\\\"matTooltip\\\"\\r\\n        matTooltip=\\\"Info about the action\\\"\\r\\n        matTooltipPosition=\\\"right\\\"\\r\\n        aria-tooltip=\\\"Button that displays and hides a tooltip triggered by other buttons\\\">\\r\\n  Action\\r\\n</button>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Tooltip that can be manually shown/hidden.\r\n */\r\n@Component({\r\n  selector: 'tooltip-manual-example',\r\n  templateUrl: 'tooltip-manual-example.html',\r\n  styleUrls: ['tooltip-manual-example.css'],\r\n})\r\nexport class TooltipManualExample {}\r\n","module.exports = \".example-user-input {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field class=\\\"example-user-input\\\">\\r\\n  <input matInput placeholder=\\\"Tooltip message\\\" [formControl]=\\\"message\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<button mat-raised-button\\r\\n        [matTooltip]=\\\"message.value\\\"\\r\\n        aria-label=\\\"Button that displays a tooltip with a custom message\\\">\\r\\n  Action\\r\\n</button>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n/**\r\n * @title Tooltip with a changing message\r\n */\r\n@Component({\r\n  selector: 'tooltip-message-example',\r\n  templateUrl: 'tooltip-message-example.html',\r\n  styleUrls: ['tooltip-message-example.css'],\r\n})\r\nexport class TooltipMessageExample {\r\n  message = new FormControl('Info about the action');\r\n}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-raised-button\\r\\n        matTooltip=\\\"By default, I delay\\\"\\r\\n        aria-label=\\\"Button that displays a tooltip that has custom delays through a default config\\\">\\r\\n  Button with delay-default tooltip\\r\\n</button>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {MAT_TOOLTIP_DEFAULT_OPTIONS, MatTooltipDefaultOptions} from '@angular/material';\r\n\r\n/** Custom options the configure the tooltip's default show/hide delays. */\r\nexport const myCustomTooltipDefaults: MatTooltipDefaultOptions = {\r\n  showDelay: 1000,\r\n  hideDelay: 1000,\r\n  touchendHideDelay: 1000,\r\n};\r\n\r\n/**\r\n * @title Tooltip with a show and hide delay\r\n */\r\n@Component({\r\n  selector: 'tooltip-modified-defaults-example',\r\n  templateUrl: 'tooltip-modified-defaults-example.html',\r\n  styleUrls: ['tooltip-modified-defaults-example.css'],\r\n  providers: [\r\n    {provide: MAT_TOOLTIP_DEFAULT_OPTIONS, useValue: myCustomTooltipDefaults}\r\n  ],\r\n})\r\nexport class TooltipModifiedDefaultsExample {}\r\n","module.exports = \"/** No CSS for this example */\\r\\n\"","module.exports = \"<button mat-raised-button\\r\\n        matTooltip=\\\"Info about the action\\\"\\r\\n        aria-label=\\\"Button that displays a tooltip when focused or hovered over\\\">\\r\\n  Action\\r\\n</button>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n/**\r\n * @title Basic tooltip\r\n */\r\n@Component({\r\n  selector: 'tooltip-overview-example',\r\n  templateUrl: 'tooltip-overview-example.html',\r\n  styleUrls: ['tooltip-overview-example.css'],\r\n})\r\nexport class TooltipOverviewExample {}\r\n","module.exports = \".example-user-input {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n\"","module.exports = \"<mat-form-field class=\\\"example-user-input\\\">\\r\\n  <mat-select placeholder=\\\"Tooltip position\\\" [formControl]=\\\"position\\\">\\r\\n    <mat-option *ngFor=\\\"let positionOption of positionOptions\\\" [value]=\\\"positionOption\\\">\\r\\n      {{ positionOption }}\\r\\n    </mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\\r\\n<button mat-raised-button\\r\\n        matTooltip=\\\"Info about the action\\\"\\r\\n        [matTooltipPosition]=\\\"position.value\\\"\\r\\n        aria-label=\\\"Button that displays a tooltip in various positions\\\">\\r\\n  Action\\r\\n</button>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {TooltipPosition} from '@angular/material';\r\n\r\n/**\r\n * @title Tooltip with a custom position\r\n */\r\n@Component({\r\n  selector: 'tooltip-position-example',\r\n  templateUrl: 'tooltip-position-example.html',\r\n  styleUrls: ['tooltip-position-example.css'],\r\n})\r\nexport class TooltipPositionExample {\r\n  positionOptions: TooltipPosition[] = ['after', 'before', 'above', 'below', 'left', 'right'];\r\n  position = new FormControl(this.positionOptions[0]);\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding>\\r\\n    <button mat-icon-button disabled></button>\\r\\n    <mat-checkbox class=\\\"checklist-leaf-node\\\"\\r\\n                  [checked]=\\\"checklistSelection.isSelected(node)\\\"\\r\\n                  (change)=\\\"checklistSelection.toggle(node);\\\">{{node.item}}</mat-checkbox>\\r\\n  </mat-tree-node>\\r\\n\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasNoContent\\\" matTreeNodePadding>\\r\\n    <button mat-icon-button disabled></button>\\r\\n    <mat-form-field>\\r\\n      <input matInput #itemValue placeholder=\\\"New item...\\\">\\r\\n    </mat-form-field>\\r\\n    <button mat-button (click)=\\\"saveNode(node, itemValue.value)\\\">Save</button>\\r\\n  </mat-tree-node>\\r\\n\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\r\\n    <button mat-icon-button matTreeNodeToggle\\r\\n            [attr.aria-label]=\\\"'toggle ' + node.filename\\\">\\r\\n      <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n      </mat-icon>\\r\\n    </button>\\r\\n    <mat-checkbox [checked]=\\\"descendantsAllSelected(node)\\\"\\r\\n                  [indeterminate]=\\\"descendantsPartiallySelected(node)\\\"\\r\\n                  (change)=\\\"todoItemSelectionToggle(node)\\\">{{node.item}}</mat-checkbox>\\r\\n    <button mat-icon-button (click)=\\\"addNewItem(node)\\\"><mat-icon>add</mat-icon></button>\\r\\n  </mat-tree-node>\\r\\n</mat-tree>\\r\\n\"","import {Component, Injectable} from '@angular/core';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {MatTreeFlattener, MatTreeFlatDataSource} from '@angular/material/tree';\r\nimport {of as ofObservable, Observable, BehaviorSubject} from 'rxjs';\r\n\r\n\r\n/**\r\n * Node for to-do item\r\n */\r\nexport class TodoItemNode {\r\n  children: TodoItemNode[];\r\n  item: string;\r\n}\r\n\r\n/** Flat to-do item node with expandable and level information */\r\nexport class TodoItemFlatNode {\r\n  item: string;\r\n  level: number;\r\n  expandable: boolean;\r\n}\r\n\r\n/**\r\n * The Json object for to-do list data.\r\n */\r\nconst TREE_DATA = {\r\n  'Reminders': [\r\n    'Cook dinner',\r\n    'Read the Material Design spec',\r\n    'Upgrade Application to Angular'\r\n  ],\r\n  'Groceries': {\r\n    'Organic eggs': null,\r\n    'Protein Powder': null,\r\n    'Almond Meal flour': null,\r\n    'Fruits': {\r\n      'Apple': null,\r\n      'Orange': null,\r\n      'Berries': ['Blueberry', 'Raspberry']\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Checklist database, it can build a tree structured Json object.\r\n * Each node in Json object represents a to-do item or a category.\r\n * If a node is a category, it has children items and new items can be added under the category.\r\n */\r\n@Injectable()\r\nexport class ChecklistDatabase {\r\n  dataChange: BehaviorSubject<TodoItemNode[]> = new BehaviorSubject<TodoItemNode[]>([]);\r\n\r\n  get data(): TodoItemNode[] { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    // Build the tree nodes from Json object. The result is a list of `TodoItemNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(TREE_DATA, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `TodoItemNode`.\r\n   */\r\n  buildFileTree(value: any, level: number) {\r\n    let data: any[] = [];\r\n    for (let k in value) {\r\n      let v = value[k];\r\n      let node = new TodoItemNode();\r\n      node.item = `${k}`;\r\n      if (v === null || v === undefined) {\r\n        // no action\r\n      } else if (typeof v === 'object') {\r\n        node.children = this.buildFileTree(v, level + 1);\r\n      } else {\r\n        node.item = v;\r\n      }\r\n      data.push(node);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /** Add an item to to-do list */\r\n  insertItem(parent: TodoItemNode, name: string) {\r\n    const child = <TodoItemNode>{item: name};\r\n    if (parent.children) {\r\n      parent.children.push(child);\r\n      this.dataChange.next(this.data);\r\n    }\r\n  }\r\n\r\n  updateItem(node: TodoItemNode, name: string) {\r\n    node.item = name;\r\n    this.dataChange.next(this.data);\r\n  }\r\n}\r\n\r\n/**\r\n * @title Tree with checkboxes\r\n */\r\n@Component({\r\n  selector: 'tree-checklist-example',\r\n  templateUrl: 'tree-checklist-example.html',\r\n  styleUrls: ['tree-checklist-example.css'],\r\n  providers: [ChecklistDatabase]\r\n})\r\nexport class TreeChecklistExample {\r\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\n  flatNodeMap: Map<TodoItemFlatNode, TodoItemNode> = new Map<TodoItemFlatNode, TodoItemNode>();\r\n\r\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n  nestedNodeMap: Map<TodoItemNode, TodoItemFlatNode> = new Map<TodoItemNode, TodoItemFlatNode>();\r\n\r\n  /** A selected parent node to be inserted */\r\n  selectedParent: TodoItemFlatNode | null = null;\r\n\r\n  /** The new item's name */\r\n  newItemName: string = '';\r\n\r\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\r\n\r\n  dataSource: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\r\n\r\n  /** The selection for checklist */\r\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\r\n\r\n  constructor(private database: ChecklistDatabase) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n      this.isExpandable, this.getChildren);\r\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n    database.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n    });\r\n  }\r\n\r\n  getLevel = (node: TodoItemFlatNode) => { return node.level; };\r\n\r\n  isExpandable = (node: TodoItemFlatNode) => { return node.expandable; };\r\n\r\n  getChildren = (node: TodoItemNode): Observable<TodoItemNode[]> => {\r\n    return ofObservable(node.children);\r\n  }\r\n\r\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => { return _nodeData.expandable; };\r\n\r\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => { return _nodeData.item === ''; };\r\n\r\n  /**\r\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\r\n   */\r\n  transformer = (node: TodoItemNode, level: number) => {\r\n    let flatNode = this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node)!.item === node.item\r\n      ? this.nestedNodeMap.get(node)!\r\n      : new TodoItemFlatNode();\r\n    flatNode.item = node.item;\r\n    flatNode.level = level;\r\n    flatNode.expandable = !!node.children;\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    return flatNode;\r\n  }\r\n\r\n  /** Whether all the descendants of the node are selected */\r\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    return descendants.every(child => this.checklistSelection.isSelected(child));\r\n  }\r\n\r\n  /** Whether part of the descendants are selected */\r\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n  }\r\n\r\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\r\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants)\r\n      : this.checklistSelection.deselect(...descendants);\r\n  }\r\n\r\n  /** Select the category so we can insert the new item. */\r\n  addNewItem(node: TodoItemFlatNode) {\r\n    const parentNode = this.flatNodeMap.get(node);\r\n    this.database.insertItem(parentNode!, '');\r\n    this.treeControl.expand(node);\r\n  }\r\n\r\n  /** Save the node to database */\r\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\r\n    const nestedNode = this.flatNodeMap.get(node);\r\n    this.database.updateItem(nestedNode!, itemValue);\r\n  }\r\n}\r\n","module.exports = \".example-tree-progress-bar {\\r\\n  margin-left: 30px;\\r\\n}\\r\\n\"","module.exports = \"<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodePadding>\\r\\n    <button mat-icon-button disabled></button>\\r\\n    {{node.item}}\\r\\n  </mat-tree-node>\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\r\\n    <button mat-icon-button\\r\\n            [attr.aria-label]=\\\"'toggle ' + node.filename\\\" matTreeNodeToggle>\\r\\n      <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n      </mat-icon>\\r\\n    </button>\\r\\n    {{node.item}}\\r\\n    <mat-progress-bar *ngIf=\\\"node.isLoading\\\"\\r\\n                      mode=\\\"indeterminate\\\"\\r\\n                      class=\\\"example-tree-progress-bar\\\"></mat-progress-bar>\\r\\n  </mat-tree-node>\\r\\n</mat-tree>\\r\\n\"","import {Component, Injectable} from '@angular/core';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {CollectionViewer, SelectionChange} from '@angular/cdk/collections';\r\nimport {BehaviorSubject, Observable, merge} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n\r\n/** Flat node with expandable and level information */\r\nexport class DynamicFlatNode {\r\n  constructor(public item: string, public level: number = 1, public expandable: boolean = false,\r\n              public isLoading: boolean = false) {}\r\n}\r\n\r\n\r\n/**\r\n * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\r\n * the descendants data from the database.\r\n */\r\nexport class DynamicDatabase {\r\n  dataMap = new Map([\r\n    ['Fruits', ['Apple', 'Orange', 'Banana']],\r\n    ['Vegetables', ['Tomato', 'Potato', 'Onion']],\r\n    ['Apple', ['Fuji', 'Macintosh']],\r\n    ['Onion', ['Yellow', 'White', 'Purple']]\r\n  ]);\r\n\r\n  rootLevelNodes = ['Fruits', 'Vegetables'];\r\n\r\n  /** Initial data from database */\r\n  initialData(): DynamicFlatNode[] {\r\n    return this.rootLevelNodes.map(name => new DynamicFlatNode(name, 0, true));\r\n  }\r\n\r\n\r\n  getChildren(node: string): string[] | undefined {\r\n    return this.dataMap.get(node);\r\n  }\r\n\r\n  isExpandable(node: string): boolean {\r\n    return this.dataMap.has(node);\r\n  }\r\n}\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n * For a directory, it has filename and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class DynamicDataSource {\r\n\r\n  dataChange: BehaviorSubject<DynamicFlatNode[]> = new BehaviorSubject<DynamicFlatNode[]>([]);\r\n\r\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\r\n  set data(value: DynamicFlatNode[]) {\r\n    this.treeControl.dataNodes = value;\r\n    this.dataChange.next(value);\r\n  }\r\n\r\n  constructor(private treeControl: FlatTreeControl<DynamicFlatNode>,\r\n              private database: DynamicDatabase) {}\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\r\n    this.treeControl.expansionModel.onChange!.subscribe(change => {\r\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\r\n        (change as SelectionChange<DynamicFlatNode>).removed) {\r\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\r\n      }\r\n    });\r\n\r\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\r\n  }\r\n\r\n  /** Handle expand/collapse behaviors */\r\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\r\n    if (change.added) {\r\n      change.added.forEach((node) => this.toggleNode(node, true));\r\n    }\r\n    if (change.removed) {\r\n      change.removed.reverse().forEach((node) => this.toggleNode(node, false));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the node, remove from display list\r\n   */\r\n  toggleNode(node: DynamicFlatNode, expand: boolean) {\r\n    const children = this.database.getChildren(node.item);\r\n    const index = this.data.indexOf(node);\r\n    if (!children || index < 0) { // If no children, or cannot find the node, no op\r\n      return;\r\n    }\r\n\r\n    node.isLoading = true;\r\n\r\n    setTimeout(() => {\r\n      if (expand) {\r\n        const nodes = children.map(name =>\r\n          new DynamicFlatNode(name, node.level + 1, this.database.isExpandable(name)));\r\n        this.data.splice(index + 1, 0, ...nodes);\r\n      } else {\r\n        let count = 0;\r\n        for (let i = index + 1; i < this.data.length\r\n          && this.data[i].level > node.level; i++, count++) {}\r\n        this.data.splice(index + 1, count);\r\n      }\r\n\r\n      // notify the change\r\n      this.dataChange.next(this.data);\r\n      node.isLoading = false;\r\n    }, 1000);\r\n  }\r\n}\r\n\r\n/**\r\n * @title Tree with dynamic data\r\n */\r\n@Component({\r\n  selector: 'tree-dynamic-example',\r\n  templateUrl: 'tree-dynamic-example.html',\r\n  styleUrls: ['tree-dynamic-example.css'],\r\n  providers: [DynamicDatabase]\r\n})\r\nexport class TreeDynamicExample {\r\n\r\n  constructor(database: DynamicDatabase) {\r\n    this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new DynamicDataSource(this.treeControl, database);\r\n\r\n    this.dataSource.data = database.initialData();\r\n  }\r\n\r\n  treeControl: FlatTreeControl<DynamicFlatNode>;\r\n\r\n  dataSource: DynamicDataSource;\r\n\r\n  getLevel = (node: DynamicFlatNode) => { return node.level; };\r\n\r\n  isExpandable = (node: DynamicFlatNode) => { return node.expandable; };\r\n\r\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => { return _nodeData.expandable; };\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding>\\r\\n    <button mat-icon-button disabled></button>\\r\\n    {{node.filename}} : {{node.type}}\\r\\n  </mat-tree-node>\\r\\n\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node;when: hasChild\\\" matTreeNodePadding>\\r\\n    <button mat-icon-button matTreeNodeToggle\\r\\n            [attr.aria-label]=\\\"'toggle ' + node.filename\\\">\\r\\n      <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n      </mat-icon>\\r\\n    </button>\\r\\n    {{node.filename}} : {{node.type}}\\r\\n  </mat-tree-node>\\r\\n</mat-tree>\\r\\n\"","import {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {Component, Injectable} from '@angular/core';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\nimport {BehaviorSubject, Observable, of as observableOf} from 'rxjs';\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a filename, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n  children: FileNode[];\r\n  filename: string;\r\n  type: any;\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n  filename: string;\r\n  type: any;\r\n  level: number;\r\n  expandable: boolean;\r\n}\r\n\r\n/**\r\n * The file structure tree data in string. The data could be parsed into a Json object\r\n */\r\nconst TREE_DATA = `\r\n  {\r\n    \"Documents\": {\r\n      \"angular\": {\r\n        \"src\": {\r\n          \"core\": \"ts\",\r\n          \"compiler\": \"ts\"\r\n        }\r\n      },\r\n      \"material2\": {\r\n        \"src\": {\r\n          \"button\": \"ts\",\r\n          \"checkbox\": \"ts\",\r\n          \"input\": \"ts\"\r\n        }\r\n      }\r\n    },\r\n    \"Downloads\": {\r\n        \"Tutorial\": \"html\",\r\n        \"November\": \"pdf\",\r\n        \"October\": \"pdf\"\r\n    },\r\n    \"Pictures\": {\r\n        \"Sun\": \"png\",\r\n        \"Woods\": \"jpg\",\r\n        \"Photo Booth Library\": {\r\n          \"Contents\": \"dir\",\r\n          \"Pictures\": \"dir\"\r\n        }\r\n    },\r\n    \"Applications\": {\r\n        \"Chrome\": \"app\",\r\n        \"Calendar\": \"app\",\r\n        \"Webstorm\": \"app\"\r\n    }\r\n}`;\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n * For a directory, it has filename and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange: BehaviorSubject<FileNode[]> = new BehaviorSubject<FileNode[]>([]);\r\n\r\n  get data(): FileNode[] { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    // Parse the string to json object.\r\n    const dataObject = JSON.parse(TREE_DATA);\r\n\r\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObject, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `FileNode`.\r\n   */\r\n  buildFileTree(value: any, level: number): FileNode[] {\r\n    let data: any[] = [];\r\n    for (let k in value) {\r\n      let v = value[k];\r\n      let node = new FileNode();\r\n      node.filename = `${k}`;\r\n      if (v === null || v === undefined) {\r\n        // no action\r\n      } else if (typeof v === 'object') {\r\n        node.children = this.buildFileTree(v, level + 1);\r\n      } else {\r\n        node.type = v;\r\n      }\r\n      data.push(node);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'tree-flat-overview-example',\r\n  templateUrl: 'tree-flat-overview-example.html',\r\n  styleUrls: ['tree-flat-overview-example.css'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class TreeFlatOverviewExample {\r\n\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n\r\n  constructor(database: FileDatabase) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\r\n      this._isExpandable, this._getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n    database.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n    });\r\n  }\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    let flatNode = new FileFlatNode();\r\n    flatNode.filename = node.filename;\r\n    flatNode.type = node.type;\r\n    flatNode.level = level;\r\n    flatNode.expandable = !!node.children;\r\n    return flatNode;\r\n  }\r\n\r\n  private _getLevel = (node: FileFlatNode) => { return node.level; };\r\n\r\n  private _isExpandable = (node: FileFlatNode) => { return node.expandable; };\r\n\r\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => {\r\n    return observableOf(node.children);\r\n  }\r\n\r\n  hasChild = (_: number, _nodeData: FileFlatNode) => { return _nodeData.expandable; };\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\r\\n  <!-- Leaf node -->\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodePadding>\\r\\n    <button mat-icon-button disabled></button>\\r\\n    {{node.item}}\\r\\n  </mat-tree-node>\\r\\n\\r\\n  <!-- expandable node -->\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\r\\n    <button mat-icon-button\\r\\n            [attr.aria-label]=\\\"'toggle ' + node.filename\\\"\\r\\n            (click)=\\\"loadChildren(node)\\\"\\r\\n            matTreeNodeToggle>\\r\\n      <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n      </mat-icon>\\r\\n    </button>\\r\\n    {{node.item}}\\r\\n  </mat-tree-node>\\r\\n\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node; when: isLoadMore\\\">\\r\\n    <button mat-button (click)=\\\"loadMore(node.loadMoreParentItem)\\\">\\r\\n      Load more...\\r\\n    </button>\\r\\n  </mat-tree-node>\\r\\n</mat-tree>\\r\\n\"","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {Component, Injectable} from '@angular/core';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\n\r\n\r\nconst LOAD_MORE = 'LOAD_MORE';\r\n\r\n/** Nested node */\r\nexport class LoadmoreNode {\r\n  childrenChange: BehaviorSubject<LoadmoreNode[]> = new BehaviorSubject<LoadmoreNode[]>([]);\r\n\r\n  get children(): LoadmoreNode[] {\r\n    return this.childrenChange.value;\r\n  }\r\n\r\n  constructor(public item: string,\r\n              public hasChildren: boolean = false,\r\n              public loadMoreParentItem: string | null = null) {}\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class LoadmoreFlatNode {\r\n  constructor(public item: string,\r\n              public level: number = 1,\r\n              public expandable: boolean = false,\r\n              public loadMoreParentItem: string | null = null) {}\r\n}\r\n\r\n/**\r\n * A database that only load part of the data initially. After user clicks on the `Load more`\r\n * button, more data will be loaded.\r\n */\r\n@Injectable()\r\nexport class LoadmoreDatabase {\r\n  batchNumber = 5;\r\n  dataChange: BehaviorSubject<LoadmoreNode[]> = new BehaviorSubject<LoadmoreNode[]>([]);\r\n  nodeMap: Map<string, LoadmoreNode> = new Map<string, LoadmoreNode>();\r\n\r\n  /** The data */\r\n  rootLevelNodes = ['Vegetables', 'Fruits'];\r\n  dataMap = new Map([\r\n    ['Fruits', ['Apple', 'Orange', 'Banana']],\r\n    ['Vegetables', ['Tomato', 'Potato', 'Onion']],\r\n    ['Apple', ['Fuji', 'Macintosh']],\r\n    ['Onion', ['Yellow', 'White', 'Purple', 'Green', 'Shallot', 'Sweet', 'Red', 'Leek']],\r\n  ]);\r\n\r\n  initialize() {\r\n    const data = this.rootLevelNodes.map(name => this._generateNode(name));\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /** Expand a node whose children are not loaded */\r\n  loadMore(item: string, onlyFirstTime: boolean = false) {\r\n    if (!this.nodeMap.has(item) || !this.dataMap.has(item)) {\r\n      return;\r\n    }\r\n    const parent = this.nodeMap.get(item)!;\r\n    const children = this.dataMap.get(item)!;\r\n    if (onlyFirstTime && parent.children!.length > 0) {\r\n      return;\r\n    }\r\n    const newChildrenNumber = parent.children!.length + this.batchNumber;\r\n    let nodes = children.slice(0, newChildrenNumber)\r\n      .map(name => this._generateNode(name));\r\n    if (newChildrenNumber < children.length) {\r\n      // Need a new load more node\r\n      nodes.push(new LoadmoreNode(LOAD_MORE, false, item));\r\n    }\r\n\r\n    parent.childrenChange.next(nodes);\r\n    this.dataChange.next(this.dataChange.value);\r\n  }\r\n\r\n  private _generateNode(item: string): LoadmoreNode {\r\n    if (this.nodeMap.has(item)) {\r\n      return this.nodeMap.get(item)!;\r\n    }\r\n    const result = new LoadmoreNode(item, this.dataMap.has(item));\r\n    this.nodeMap.set(item, result);\r\n    return result;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Tree with partially loaded data\r\n */\r\n@Component({\r\n  selector: 'tree-loadmore-example',\r\n  templateUrl: 'tree-loadmore-example.html',\r\n  styleUrls: ['tree-loadmore-example.css'],\r\n  providers: [LoadmoreDatabase]\r\n})\r\nexport class TreeLoadmoreExample {\r\n\r\n  nodeMap: Map<string, LoadmoreFlatNode> = new Map<string, LoadmoreFlatNode>();\r\n\r\n  treeControl: FlatTreeControl<LoadmoreFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<LoadmoreNode, LoadmoreFlatNode>;\r\n\r\n  // Flat tree data source\r\n  dataSource: MatTreeFlatDataSource<LoadmoreNode, LoadmoreFlatNode>;\r\n\r\n  constructor(private database: LoadmoreDatabase) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n      this.isExpandable, this.getChildren);\r\n\r\n    this.treeControl = new FlatTreeControl<LoadmoreFlatNode>(this.getLevel, this.isExpandable);\r\n\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n    database.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n    });\r\n\r\n    database.initialize();\r\n  }\r\n\r\n  getChildren = (node: LoadmoreNode): Observable<LoadmoreNode[]> => { return node.childrenChange; };\r\n\r\n  transformer = (node: LoadmoreNode, level: number) => {\r\n    if (this.nodeMap.has(node.item)) {\r\n      return this.nodeMap.get(node.item)!;\r\n    }\r\n    let newNode = new LoadmoreFlatNode(node.item, level, node.hasChildren, node.loadMoreParentItem);\r\n    this.nodeMap.set(node.item, newNode);\r\n    return newNode;\r\n  }\r\n\r\n  getLevel = (node: LoadmoreFlatNode) => { return node.level; };\r\n\r\n  isExpandable = (node: LoadmoreFlatNode) => { return node.expandable; };\r\n\r\n  hasChild = (_: number, _nodeData: LoadmoreFlatNode) => { return _nodeData.expandable; };\r\n\r\n  isLoadMore = (_: number, _nodeData: LoadmoreFlatNode) => { return _nodeData.item === LOAD_MORE; };\r\n\r\n  /** Load more nodes from data source */\r\n  loadMore(item: string) {\r\n    this.database.loadMore(item);\r\n  }\r\n\r\n  loadChildren(node: LoadmoreFlatNode) {\r\n    this.database.loadMore(node.item, true);\r\n  }\r\n}\r\n","module.exports = \".example-tree-invisible {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.example-tree ul,\\r\\n.example-tree li {\\r\\n  margin-top: 0;\\r\\n  margin-bottom: 0;\\r\\n  list-style-type: none;\\r\\n}\\r\\n\"","module.exports = \"<mat-tree [dataSource]=\\\"nestedDataSource\\\" [treeControl]=\\\"nestedTreeControl\\\" class=\\\"example-tree\\\">\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle>\\r\\n    <li class=\\\"mat-tree-node\\\">\\r\\n      <button mat-icon-button disabled></button>\\r\\n      {{node.filename}}:  {{node.type}}\\r\\n    </li>\\r\\n  </mat-tree-node>\\r\\n\\r\\n  <mat-nested-tree-node *matTreeNodeDef=\\\"let node; when: hasNestedChild\\\">\\r\\n    <li>\\r\\n      <div class=\\\"mat-tree-node\\\">\\r\\n        <button mat-icon-button matTreeNodeToggle\\r\\n                [attr.aria-label]=\\\"'toggle ' + node.filename\\\">\\r\\n          <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n            {{nestedTreeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n          </mat-icon>\\r\\n        </button>\\r\\n        {{node.filename}}\\r\\n      </div>\\r\\n      <ul [class.example-tree-invisible]=\\\"!nestedTreeControl.isExpanded(node)\\\">\\r\\n        <ng-container matTreeNodeOutlet></ng-container>\\r\\n      </ul>\\r\\n    </li>\\r\\n  </mat-nested-tree-node>\\r\\n</mat-tree>\\r\\n\"","import {NestedTreeControl} from '@angular/cdk/tree';\r\nimport {Component, Injectable} from '@angular/core';\r\nimport {MatTreeNestedDataSource} from '@angular/material/tree';\r\nimport {BehaviorSubject, of as observableOf} from 'rxjs';\r\n\r\n/**\r\n * Json node data with nested structure. Each node has a filename and a value or a list of children\r\n */\r\nexport class FileNode {\r\n  children: FileNode[];\r\n  filename: string;\r\n  type: any;\r\n}\r\n\r\n/**\r\n * The Json tree data in string. The data could be parsed into Json object\r\n */\r\nconst TREE_DATA = `\r\n  {\r\n    \"Documents\": {\r\n      \"angular\": {\r\n        \"src\": {\r\n          \"core\": \"ts\",\r\n          \"compiler\": \"ts\"\r\n        }\r\n      },\r\n      \"material2\": {\r\n        \"src\": {\r\n          \"button\": \"ts\",\r\n          \"checkbox\": \"ts\",\r\n          \"input\": \"ts\"\r\n        }\r\n      }\r\n    },\r\n    \"Downloads\": {\r\n        \"Tutorial\": \"html\",\r\n        \"November\": \"pdf\",\r\n        \"October\": \"pdf\"\r\n    },\r\n    \"Pictures\": {\r\n        \"Sun\": \"png\",\r\n        \"Woods\": \"jpg\",\r\n        \"Photo Booth Library\": {\r\n          \"Contents\": \"dir\",\r\n          \"Pictures\": \"dir\"\r\n        }\r\n    },\r\n    \"Applications\": {\r\n        \"Chrome\": \"app\",\r\n        \"Calendar\": \"app\",\r\n        \"Webstorm\": \"app\"\r\n    }\r\n  }`;\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n * For a directory, it has filename and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange: BehaviorSubject<FileNode[]> = new BehaviorSubject<FileNode[]>([]);\r\n\r\n  get data(): FileNode[] { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    // Parse the string to json object.\r\n    const dataObject = JSON.parse(TREE_DATA);\r\n\r\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObject, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `FileNode`.\r\n   */\r\n  buildFileTree(value: any, level: number): FileNode[] {\r\n    let data: any[] = [];\r\n    for (let k in value) {\r\n      let v = value[k];\r\n      let node = new FileNode();\r\n      node.filename = `${k}`;\r\n      if (v === null || v === undefined) {\r\n        // no action\r\n      } else if (typeof v === 'object') {\r\n        node.children = this.buildFileTree(v, level + 1);\r\n      } else {\r\n        node.type = v;\r\n      }\r\n      data.push(node);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Tree with nested nodes\r\n */\r\n@Component({\r\n  selector: 'tree-nested-overview-example',\r\n  templateUrl: 'tree-nested-overview-example.html',\r\n  styleUrls: ['tree-nested-overview-example.css'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class TreeNestedOverviewExample {\r\n  nestedTreeControl: NestedTreeControl<FileNode>;\r\n\r\n  nestedDataSource: MatTreeNestedDataSource<FileNode>;\r\n\r\n  constructor(database: FileDatabase) {\r\n    this.nestedTreeControl = new NestedTreeControl<FileNode>(this._getChildren);\r\n    this.nestedDataSource = new MatTreeNestedDataSource();\r\n\r\n    database.dataChange.subscribe(data => this.nestedDataSource.data = data);\r\n  }\r\n\r\n  private _getChildren = (node: FileNode) => { return observableOf(node.children); };\r\n\r\n  hasNestedChild = (_: number, nodeData: FileNode) => {return !(nodeData.type); };\r\n}\r\n"],"sourceRoot":""}