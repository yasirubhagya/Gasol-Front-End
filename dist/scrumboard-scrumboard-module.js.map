{"version":3,"sources":["webpack:///./src/app/main/apps/scrumboard/board.model.ts","webpack:///./src/app/main/apps/scrumboard/board/add-list/add-list.component.html","webpack:///./src/app/main/apps/scrumboard/board/add-list/add-list.component.scss","webpack:///./src/app/main/apps/scrumboard/board/add-list/add-list.component.ts","webpack:///./src/app/main/apps/scrumboard/board/board.component.html","webpack:///./src/app/main/apps/scrumboard/board/board.component.scss","webpack:///./src/app/main/apps/scrumboard/board/board.component.ts","webpack:///./src/app/main/apps/scrumboard/board/dialogs/card/card.component.html","webpack:///./src/app/main/apps/scrumboard/board/dialogs/card/card.component.scss","webpack:///./src/app/main/apps/scrumboard/board/dialogs/card/card.component.ts","webpack:///./src/app/main/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.html","webpack:///./src/app/main/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.scss","webpack:///./src/app/main/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.ts","webpack:///./src/app/main/apps/scrumboard/board/edit-board-name/edit-board-name.component.html","webpack:///./src/app/main/apps/scrumboard/board/edit-board-name/edit-board-name.component.scss","webpack:///./src/app/main/apps/scrumboard/board/edit-board-name/edit-board-name.component.ts","webpack:///./src/app/main/apps/scrumboard/board/list/add-card/add-card.component.html","webpack:///./src/app/main/apps/scrumboard/board/list/add-card/add-card.component.scss","webpack:///./src/app/main/apps/scrumboard/board/list/add-card/add-card.component.ts","webpack:///./src/app/main/apps/scrumboard/board/list/card/card.component.html","webpack:///./src/app/main/apps/scrumboard/board/list/card/card.component.scss","webpack:///./src/app/main/apps/scrumboard/board/list/card/card.component.ts","webpack:///./src/app/main/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.html","webpack:///./src/app/main/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.scss","webpack:///./src/app/main/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.ts","webpack:///./src/app/main/apps/scrumboard/board/list/list.component.html","webpack:///./src/app/main/apps/scrumboard/board/list/list.component.scss","webpack:///./src/app/main/apps/scrumboard/board/list/list.component.ts","webpack:///./src/app/main/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.html","webpack:///./src/app/main/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.scss","webpack:///./src/app/main/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.ts","webpack:///./src/app/main/apps/scrumboard/board/sidenavs/settings/settings.component.html","webpack:///./src/app/main/apps/scrumboard/board/sidenavs/settings/settings.component.scss","webpack:///./src/app/main/apps/scrumboard/board/sidenavs/settings/settings.component.ts","webpack:///./src/app/main/apps/scrumboard/card.model.ts","webpack:///./src/app/main/apps/scrumboard/list.model.ts","webpack:///./src/app/main/apps/scrumboard/scrumboard.component.html","webpack:///./src/app/main/apps/scrumboard/scrumboard.component.scss","webpack:///./src/app/main/apps/scrumboard/scrumboard.component.ts","webpack:///./src/app/main/apps/scrumboard/scrumboard.module.ts","webpack:///./src/app/main/apps/scrumboard/scrumboard.service.ts"],"names":[],"mappings":"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","file":"scrumboard-scrumboard-module.js","sourcesContent":["import { FuseUtils } from '@fuse/utils';\r\n\r\nimport { List } from './list.model';\r\nimport { Card } from './card.model';\r\n\r\nconst sampleLabels = [\r\n    {\r\n        'id'   : '56027e4119ad3a5dc28b36cd',\r\n        'name' : 'Design',\r\n        'color': 'mat-red-500-bg'\r\n    },\r\n    {\r\n        'id'   : '5640635e19ad3a5dc21416b2',\r\n        'name' : 'App',\r\n        'color': 'mat-blue-500-bg'\r\n    },\r\n    {\r\n        'id'   : '6540635g19ad3s5dc31412b2',\r\n        'name' : 'Feature',\r\n        'color': 'mat-green-400-bg'\r\n    }\r\n];\r\n\r\nconst sampleMembers = [\r\n    {\r\n        id    : '56027c1930450d8bf7b10758',\r\n        name  : 'Alice Freeman',\r\n        avatar: 'assets/images/avatars/alice.jpg'\r\n    },\r\n    {\r\n        id    : '26027s1930450d8bf7b10828',\r\n        name  : 'Danielle Obrien',\r\n        avatar: 'assets/images/avatars/danielle.jpg'\r\n    },\r\n    {\r\n        id    : '76027g1930450d8bf7b10958',\r\n        name  : 'James Lewis',\r\n        avatar: 'assets/images/avatars/james.jpg'\r\n    },\r\n    {\r\n        id    : '36027j1930450d8bf7b10158',\r\n        name  : 'Vincent Munoz',\r\n        avatar: 'assets/images/avatars/vincent.jpg'\r\n    }\r\n];\r\n\r\nexport class Board\r\n{\r\n    name: string;\r\n    uri: string;\r\n    id: string;\r\n    settings: {\r\n        color: string,\r\n        subscribed: boolean,\r\n        cardCoverImages: boolean\r\n    };\r\n    lists: List[];\r\n    cards: Card[];\r\n    members: {\r\n        id: string,\r\n        name: string,\r\n        avatar: string\r\n    }[];\r\n    labels: {\r\n        id: string,\r\n        name: string,\r\n        color: string\r\n    }[];\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param board\r\n     */\r\n    constructor(board)\r\n    {\r\n        this.name = board.name || 'Untitled Board';\r\n        this.uri = board.uri || 'untitled-board';\r\n        this.id = board.id || FuseUtils.generateGUID();\r\n        this.settings = board.settings || {\r\n            color          : '',\r\n            subscribed     : true,\r\n            cardCoverImages: true\r\n        };\r\n        this.lists = [];\r\n        this.cards = [];\r\n        this.members = board.members || sampleMembers;\r\n        this.labels = board.labels || sampleLabels;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"list new-list mat-elevation-z1\\\">\\r\\n\\r\\n    <button *ngIf=\\\"!formActive\\\" mat-button class=\\\"new-list-form-button\\\" (click)=\\\"openForm()\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-icon class=\\\"mat-red-bg\\\">add</mat-icon>\\r\\n            <span>Add a list</span>\\r\\n        </div>\\r\\n    </button>\\r\\n\\r\\n    <form *ngIf=\\\"formActive\\\" class=\\\"new-list-form\\\" [formGroup]=\\\"form\\\" (submit)=\\\"onFormSubmit()\\\"\\r\\n          fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxFlex=\\\"1 0 auto\\\">\\r\\n\\r\\n        <input formControlName=\\\"name\\\" #nameInput fxFlex placeholder=\\\"Write a list Name\\\">\\r\\n\\r\\n        <button mat-icon-button fxFlex=\\\"0 1 auto\\\">\\r\\n            <mat-icon>check</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button fxFlex=\\\"0 1 auto\\\" (click)=\\\"closeForm()\\\">\\r\\n            <mat-icon>close</mat-icon>\\r\\n        </button>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \":host .new-list {\\n  border-radius: 2px;\\n  background-color: #EEF0F2; }\\n  :host .new-list .new-list-form-button {\\n    text-transform: none;\\n    font-size: 15px;\\n    padding: 0 16px;\\n    height: 64px;\\n    margin: 0;\\n    width: 100%; }\\n  :host .new-list .new-list-form-button mat-icon {\\n      border-radius: 50%;\\n      height: 40px;\\n      width: 40px;\\n      line-height: 40px;\\n      margin-right: 16px; }\\n  :host .new-list .new-list-form {\\n    padding: 16px;\\n    height: 64px; }\\n  :host .new-list .new-list-form > input {\\n      height: 100%; }\\n\"","import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n    selector   : 'scrumboard-board-add-list',\r\n    templateUrl: './add-list.component.html',\r\n    styleUrls  : ['./add-list.component.scss']\r\n})\r\nexport class ScrumboardBoardAddListComponent\r\n{\r\n    formActive: boolean;\r\n    form: FormGroup;\r\n\r\n    @Output()\r\n    onListAdd: EventEmitter<any>;\r\n\r\n    @ViewChild('nameInput')\r\n    nameInputField;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.formActive = false;\r\n        this.onListAdd = new EventEmitter();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Open form\r\n     */\r\n    openForm(): void\r\n    {\r\n        this.form = this._formBuilder.group({\r\n            name: ['']\r\n        });\r\n        this.formActive = true;\r\n        this.focusNameField();\r\n    }\r\n\r\n    /**\r\n     * Close form\r\n     */\r\n    closeForm(): void\r\n    {\r\n        this.formActive = false;\r\n    }\r\n\r\n    /**\r\n     * Focus to the name field\r\n     */\r\n    focusNameField(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.nameInputField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On form submit\r\n     */\r\n    onFormSubmit(): void\r\n    {\r\n        if ( this.form.valid )\r\n        {\r\n            this.onListAdd.next(this.form.getRawValue().name);\r\n            this.formActive = false;\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"<mat-sidenav-container>\\r\\n\\r\\n    <div id=\\\"board\\\">\\r\\n\\r\\n        <!-- HEADER -->\\r\\n        <div class=\\\"header mat-accent-bg p-16 p-mat-24\\\" [ngClass]=\\\"'mat-'+board.settings.color+'-bg'\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n            <div class=\\\"header-content\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between\\\" fxFlex=\\\"1 0 auto\\\">\\r\\n\\r\\n                <!-- BOARD SELECTION BUTTON -->\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxFlexOrder=\\\"2\\\" fxFlexOrder.gt-xs=\\\"1\\\">\\r\\n                    <button mat-raised-button class=\\\"mat-accent header-boards-button\\\"\\r\\n                            [ngClass]=\\\"'mat-'+board.settings.color+'-700-bg'\\\"\\r\\n                            routerLink=\\\"/apps/scrumboard/boards\\\"\\r\\n                            aria-label=\\\"boards button\\\">\\r\\n                        <mat-icon class=\\\"mr-8\\\">assessment</mat-icon>\\r\\n                        <span>BOARDS</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <!-- / BOARD SELECTION BUTTON -->\\r\\n\\r\\n                <!-- BOARD NAME -->\\r\\n                <div class=\\\"header-board-name mb-8 mb-mat-0\\\"\\r\\n                     fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\"\\r\\n                     fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"center center\\\"\\r\\n                     fxFlex=\\\"1 0 100%\\\" fxFlex.gt-xs=\\\"1 0 auto\\\"\\r\\n                     fxFlexOrder=\\\"1\\\" fxFlexOrder.gt-xs=\\\"2\\\">\\r\\n                    <mat-icon *ngIf=\\\"board.settings.subscribed\\\" class=\\\"board-subscribe s-16\\\">remove_red_eye</mat-icon>\\r\\n                    <scrumboard-edit-board-name\\r\\n                        [board]=\\\"board\\\"\\r\\n                        (onNameChanged)=\\\"onBoardNameChanged($event)\\\">\\r\\n                    </scrumboard-edit-board-name>\\r\\n                </div>\\r\\n                <!-- / BOARD NAME -->\\r\\n\\r\\n                <!-- TOOLBAR -->\\r\\n                <div class=\\\"toolbar\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" fxFlexOrder=\\\"3\\\">\\r\\n\\r\\n                    <!-- BOARD SETTINGS BUTTON -->\\r\\n                    <button mat-icon-button (click)=\\\"settingsSidenav.toggle()\\\"\\r\\n                            aria-label=\\\"Settings\\\" matTooltip=\\\"Settings\\\">\\r\\n                        <mat-icon>settings</mat-icon>\\r\\n                    </button>\\r\\n                    <!-- / BOARD SETTINGS BUTTON -->\\r\\n                </div>\\r\\n                <!-- / TOOLBAR -->\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- / HEADER -->\\r\\n\\r\\n        <div fxFlex class=\\\"board-content-wrapper p-16 p-mat-24\\\" [ngClass]=\\\"board.settings.color+'-100-bg'\\\">\\r\\n\\r\\n            <!-- BOARD -->\\r\\n            <div class=\\\"board-content ngx-dnd-container p-16 p-mat-24\\\" fxLayout=\\\"row\\\"\\r\\n                 ngxDroppable=\\\"list\\\" [model]=\\\"board.lists\\\" (out)=\\\"onDrop($event)\\\"\\r\\n                 [@animateStagger]=\\\"{value:'50'}\\\">\\r\\n\\r\\n                <!-- LIST -->\\r\\n                <scrumboard-board-list\\r\\n                    class=\\\"scrumboard-board-list list-wrapper ngx-dnd-item\\\"\\r\\n                    ngxDraggable\\r\\n                    *ngFor=\\\"let list of board.lists\\\"\\r\\n                    [model]=\\\"list\\\"\\r\\n                    [list]=\\\"list\\\"\\r\\n                    [@animate]=\\\"{value:'*',params:{duration:'350ms',x:'100%'}}\\\">\\r\\n                </scrumboard-board-list>\\r\\n                <!-- / LIST -->\\r\\n\\r\\n                <!-- NEW LIST BUTTON-->\\r\\n                <scrumboard-board-add-list class=\\\"new-list-wrapper\\\" (onListAdd)=\\\"onListAdd($event)\\\"\\r\\n                                           ngxDraggable [moves]=\\\"false\\\"\\r\\n                                           [@animate]=\\\"{value:'*',params:{duration:'350ms',x:'100%'}}\\\">\\r\\n                </scrumboard-board-add-list>\\r\\n                <!-- / NEW LIST BUTTON-->\\r\\n\\r\\n            </div>\\r\\n            <!-- / BOARD -->\\r\\n        </div>\\r\\n        <!-- primary content -->\\r\\n    </div>\\r\\n\\r\\n    <mat-sidenav #settingsSidenav position=\\\"end\\\">\\r\\n        <scrumboard-board-settings></scrumboard-board-settings>\\r\\n    </mat-sidenav>\\r\\n\\r\\n</mat-sidenav-container>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host mat-sidenav-container {\\n  width: 100%;\\n  height: 100%; }\\n:host mat-sidenav-container mat-sidenav {\\n    width: 320px !important;\\n    min-width: 320px !important;\\n    max-width: 320px !important; }\\n:host mat-sidenav-container #board {\\n    display: flex;\\n    flex-direction: column !important;\\n    height: 100%; }\\n:host mat-sidenav-container #board > .header {\\n      position: relative;\\n      min-height: 96px;\\n      background-image: none;\\n      z-index: 49; }\\n:host mat-sidenav-container #board > .header .header-content .header-boards-button {\\n        margin: 0; }\\n:host mat-sidenav-container #board > .header .header-content .header-board-name {\\n        font-size: 16px; }\\n:host mat-sidenav-container #board > .header .header-content .header-board-name .board-subscribe {\\n          margin-right: 8px; }\\n:host mat-sidenav-container #board > .header .header-content .header-board-name .editable-buttons mat-icon {\\n          color: #FFFFFF !important; }\\n:host mat-sidenav-container #board > .header .header-content .right-side > .mat-button:last-child {\\n        margin-right: 0; }\\n:host mat-sidenav-container #board #board-selector {\\n      position: absolute;\\n      top: 96px;\\n      right: 0;\\n      left: 0;\\n      height: 192px;\\n      z-index: 48;\\n      padding: 24px;\\n      opacity: 1; }\\n:host mat-sidenav-container #board #board-selector .board-list-item {\\n        width: 128px;\\n        height: 192px;\\n        padding: 16px;\\n        cursor: pointer;\\n        position: relative; }\\n:host mat-sidenav-container #board #board-selector .board-list-item .board-name {\\n          text-align: center;\\n          padding: 16px 0; }\\n:host mat-sidenav-container #board #board-selector .board-list-item .selected-icon {\\n          position: absolute;\\n          top: 0;\\n          left: 50%;\\n          width: 32px;\\n          height: 32px;\\n          margin-left: -16px;\\n          border-radius: 50%;\\n          text-align: center;\\n          color: white; }\\n:host mat-sidenav-container #board #board-selector .board-list-item .selected-icon i {\\n            line-height: 32px !important; }\\n:host mat-sidenav-container #board #board-selector .board-list-item.add-new-board {\\n          opacity: 0.6; }\\n:host mat-sidenav-container #board .board-content-wrapper {\\n      position: relative;\\n      background: #E5E7E8; }\\n:host mat-sidenav-container #board .board-content-wrapper .board-content {\\n        position: absolute;\\n        top: 0;\\n        right: 0;\\n        bottom: 0;\\n        left: 0;\\n        height: 100%;\\n        overflow-y: hidden;\\n        overflow-x: auto;\\n        -webkit-overflow-scrolling: touch; }\\n:host mat-sidenav-container #board .board-content-wrapper .board-content .list-sortable-placeholder {\\n          background: rgba(0, 0, 0, 0.06);\\n          margin-right: 24px; }\\n:host mat-sidenav-container #board .board-content-wrapper .board-content .new-list-wrapper {\\n          width: 344px;\\n          min-width: 344px;\\n          max-width: 344px;\\n          padding-right: 24px; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\nimport { List } from 'app/main/apps/scrumboard/list.model';\r\n\r\n@Component({\r\n    selector   : 'scrumboard-board',\r\n    templateUrl: './board.component.html',\r\n    styleUrls  : ['./board.component.scss'],\r\n    animations : fuseAnimations\r\n})\r\nexport class ScrumboardBoardComponent implements OnInit, OnDestroy\r\n{\r\n    board: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _location: Location,\r\n        private _scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._scrumboardService.onBoardChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(board => {\r\n                this.board = board;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On list add\r\n     *\r\n     * @param newListName\r\n     */\r\n    onListAdd(newListName): void\r\n    {\r\n        if ( newListName === '' )\r\n        {\r\n            return;\r\n        }\r\n\r\n        this._scrumboardService.addList(new List({name: newListName}));\r\n    }\r\n\r\n    /**\r\n     * On board name changed\r\n     *\r\n     * @param newName\r\n     */\r\n    onBoardNameChanged(newName): void\r\n    {\r\n        this._scrumboardService.updateBoard();\r\n        this._location.go('/apps/scrumboard/boards/' + this.board.id + '/' + this.board.uri);\r\n    }\r\n\r\n    /**\r\n     * On drop\r\n     *\r\n     * @param ev\r\n     */\r\n    onDrop(ev): void\r\n    {\r\n        this._scrumboardService.updateBoard();\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"dialog-content-wrapper\\\">\\r\\n\\r\\n    <mat-toolbar *ngIf=\\\"card\\\" matDialogTitle class=\\\"mat-accent-bg m-0\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"row\\\">\\r\\n\\r\\n        <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n            <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n                <!-- DUE DATE -->\\r\\n                <div class=\\\"due-date\\\" fxFlex=\\\"0 1 auto\\\">\\r\\n\\r\\n                    <button *ngIf=\\\"card.due\\\" mat-icon-button [matMenuTriggerFor]=\\\"dueDateMenu\\\">\\r\\n                        <mat-icon>today</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <mat-menu #dueDateMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n                        <button mat-menu-item (click)=\\\"removeDueDate()\\\">Remove Due Date</button>\\r\\n                    </mat-menu>\\r\\n\\r\\n                    <mat-form-field *ngIf=\\\"!card.due\\\">\\r\\n                        <input matInput [matDatepicker]=\\\"menuPicker\\\" [(ngModel)]=\\\"card.due\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"menuPicker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #menuPicker></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n                <!-- / DUE DATE -->\\r\\n\\r\\n                <!-- LABELS -->\\r\\n                <div class=\\\"labels\\\" fxFlex=\\\"0 1 auto\\\">\\r\\n\\r\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"labelsMenu\\\">\\r\\n                        <mat-icon>label</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <mat-menu #labelsMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" class=\\\"scrumboard-labels-menu\\\">\\r\\n\\r\\n                        <scrumboard-label-selector [card]=\\\"card\\\"\\r\\n                                                   (onCardLabelsChange)=\\\"updateCard()\\\"></scrumboard-label-selector>\\r\\n\\r\\n                    </mat-menu>\\r\\n                </div>\\r\\n                <!-- / LABELS -->\\r\\n\\r\\n                <!-- MEMBERS -->\\r\\n                <div class=\\\"members\\\" fxFlex=\\\"0 1 auto\\\">\\r\\n\\r\\n                    <button mat-icon-button class=\\\"\\\" [matMenuTriggerFor]=\\\"membersMenu\\\">\\r\\n                        <mat-icon>account_circle</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <mat-menu #membersMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n                        <div fxFlex fxLayout=\\\"column\\\" class=\\\"scrumboard-members-menu\\\"\\r\\n                             (click)=\\\"$event.stopPropagation()\\\">\\r\\n                            <mat-checkbox class=\\\"member px-12\\\" [checked]=\\\"card.idMembers.indexOf(member.id) > -1\\\"\\r\\n                                          *ngFor=\\\"let member of board.members\\\"\\r\\n                                          (change)=\\\"toggleInArray(member.id, card.idMembers);updateCard()\\\">\\r\\n                                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                                    <img [alt]=\\\"member.name\\\" [src]=\\\" member.avatar\\\" class=\\\"avatar\\\"/>\\r\\n                                    <p class=\\\"member-name\\\">{{ member.name }}</p>\\r\\n                                </div>\\r\\n                            </mat-checkbox>\\r\\n                        </div>\\r\\n                    </mat-menu>\\r\\n                </div>\\r\\n                <!-- / MEMBERS -->\\r\\n\\r\\n                <!-- ATTACHMENT -->\\r\\n                <button mat-icon-button aria-label=\\\"Attachment\\\">\\r\\n                    <mat-icon>attachment</mat-icon>\\r\\n                </button>\\r\\n                <!-- / ATTACHMENT -->\\r\\n\\r\\n                <!-- CHECKLIST -->\\r\\n                <div class=\\\"due-date \\\" fxFlex=\\\"0 1 auto\\\">\\r\\n\\r\\n                    <button mat-icon-button class=\\\"\\\" [matMenuTriggerFor]=\\\"checklistMenu\\\"\\r\\n                            #checklistMenuTrigger=\\\"matMenuTrigger\\\" (menuOpened)=\\\"onChecklistMenuOpen()\\\">\\r\\n                        <mat-icon>check_box</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <mat-menu #checklistMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n\\r\\n                        <form class=\\\"px-16 py-8\\\" #newChecklistForm=\\\"ngForm\\\" (submit)=\\\"addChecklist(newChecklistForm)\\\"\\r\\n                              (click)=\\\"$event.stopPropagation()\\\"\\r\\n                              fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n\\r\\n                            <mat-form-field floatLabel=\\\"never\\\" (click)=\\\"$event.stopPropagation()\\\" fxFlex>\\r\\n                                <input #newCheckListTitleField matInput ngModel #checklistTitle=\\\"ngModel\\\"\\r\\n                                       name=\\\"checklistTitle\\\" placeholder=\\\"Checklist title\\\" required>\\r\\n                            </mat-form-field>\\r\\n\\r\\n                            <button mat-raised-button class=\\\"mat-accent\\\" aria-label=\\\"Add Checklist\\\"\\r\\n                                    [disabled]=\\\"!newChecklistForm.valid\\\">Add Checklist\\r\\n                            </button>\\r\\n                        </form>\\r\\n\\r\\n                    </mat-menu>\\r\\n                </div>\\r\\n                <!-- / CHECKLIST -->\\r\\n\\r\\n                <!-- SUBSCRIBE -->\\r\\n                <div class=\\\"subscribe \\\" fxFlex=\\\"0 1 auto\\\">\\r\\n                    <button mat-icon-button class=\\\"\\\" [matMenuTriggerFor]=\\\"subscribeMenu\\\">\\r\\n                        <mat-icon>remove_red_eye</mat-icon>\\r\\n                    </button>\\r\\n                    <mat-menu #subscribeMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n                        <button *ngIf=\\\"card.subscribed\\\" mat-menu-item (click)=\\\"toggleSubscribe()\\\">\\r\\n                            Unsubscribe\\r\\n                        </button>\\r\\n                        <button *ngIf=\\\"!card.subscribed\\\" mat-menu-item (click)=\\\"toggleSubscribe()\\\">\\r\\n                            Subscribe\\r\\n                        </button>\\r\\n                    </mat-menu>\\r\\n                </div>\\r\\n                <!-- / SUBSCRIBE -->\\r\\n\\r\\n                <!-- OPTIONS -->\\r\\n                <div class=\\\"options \\\" fxFlex=\\\"0 1 auto\\\">\\r\\n                    <button mat-icon-button class=\\\"\\\" [matMenuTriggerFor]=\\\"optionsMenu\\\">\\r\\n                        <mat-icon>more_horiz</mat-icon>\\r\\n                    </button>\\r\\n                    <mat-menu #optionsMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\r\\n                        <button mat-menu-item (click)=\\\"removeCard()\\\">\\r\\n                            Remove Card\\r\\n                        </button>\\r\\n                    </mat-menu>\\r\\n                </div>\\r\\n                <!-- / OPTIONS -->\\r\\n            </div>\\r\\n\\r\\n            <!-- CLOSE DIALOG BUTTON -->\\r\\n            <button mat-icon-button (click)=\\\"_matDialogRef.close()\\\" aria-label=\\\"Close Dialog\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n            </button>\\r\\n            <!-- / CLOSE DIALOG BUTTON -->\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <div *ngIf=\\\"card\\\" mat-dialog-content class=\\\"p-24 m-0\\\" fusePerfectScrollbar>\\r\\n\\r\\n        <div fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign.gt-sm=\\\"space-between center\\\"\\r\\n             fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n\\r\\n            <!-- BREADCRUMB -->\\r\\n            <div class=\\\"card-breadcrumb mb-16 mb-sm-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                <span>{{board.name}}</span>\\r\\n                <mat-icon class=\\\"s-20\\\">chevron_right</mat-icon>\\r\\n                <span>{{list.name}}</span>\\r\\n            </div>\\r\\n            <!-- / BREADCRUMB -->\\r\\n\\r\\n            <!-- DUE DATE -->\\r\\n            <div *ngIf=\\\"card.due\\\" class=\\\"due-date\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n                <mat-form-field floatLabel=\\\"never\\\">\\r\\n                    <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"card.due\\\" placeholder=\\\"Choose a due date\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #picker></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <button mat-icon-button class=\\\"remove-due-date\\\" (click)=\\\"removeDueDate()\\\">\\r\\n                    <mat-icon class=\\\"s-16\\\">close</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- / DUE DATE -->\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- NAME -->\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-icon *ngIf=\\\"card.subscribed\\\" class=\\\"card-subscribe s-20 mr-12\\\">remove_red_eye</mat-icon>\\r\\n            <div class=\\\"card-name\\\">\\r\\n                <mat-form-field floatLabel=\\\"never\\\" class=\\\"w-100-p\\\">\\r\\n                    <input matInput [(ngModel)]=\\\"card.name\\\" placeholder=\\\"Title\\\" required (change)=\\\"updateCard()\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- / NAME -->\\r\\n\\r\\n        <!-- DESCRIPTION -->\\r\\n        <div class=\\\"description\\\">\\r\\n            <mat-form-field class=\\\"w-100-p\\\">\\r\\n                <textarea matInput [(ngModel)]=\\\"card.description\\\" placeholder=\\\"Description\\\" columns=\\\"1\\\"\\r\\n                          mat-maxlength=\\\"150\\\" max-rows=\\\"4\\\" (change)=\\\"updateCard()\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- / DESCRIPTION -->\\r\\n\\r\\n        <!-- SECTIONS -->\\r\\n        <div class=\\\"sections\\\">\\r\\n\\r\\n            <!-- LABELS SECTION -->\\r\\n            <div *ngIf=\\\"card.idLabels[0] || card.idMembers[0]\\\" class=\\\"section\\\"\\r\\n                 fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n\\r\\n                <div *ngIf=\\\"card.idLabels[0]\\\" fxFlex class=\\\"labels\\\">\\r\\n                    <div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                        <mat-icon class=\\\"s-20\\\">label</mat-icon>\\r\\n                        <span class=\\\"section-title\\\">Labels</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                        <mat-chip-list class=\\\"label-chips\\\">\\r\\n                            <mat-chip class=\\\"label-chip mb-4\\\"\\r\\n                                      *ngFor=\\\"let labelId of card.idLabels\\\"\\r\\n                                      [ngClass]=\\\"board.labels | getById:labelId:'color'\\\"\\r\\n                                      fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                                <span>{{board.labels|getById:labelId:'name'}}</span>\\r\\n                                <mat-icon class=\\\"ml-8 s-16 chip-remove\\\"\\r\\n                                          (click)=\\\"toggleInArray(labelId, card.idLabels);updateCard()\\\">close\\r\\n                                </mat-icon>\\r\\n                            </mat-chip>\\r\\n                        </mat-chip-list>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"card.idMembers[0]\\\" fxFlex class=\\\"members\\\">\\r\\n                    <div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                        <mat-icon class=\\\"s-20\\\">supervisor_account</mat-icon>\\r\\n                        <span class=\\\"section-title\\\">Members</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                        <mat-chip-list class=\\\"member-chips\\\">\\r\\n                            <mat-chip class=\\\"member-chip mb-4\\\" *ngFor=\\\"let memberId of card.idMembers\\\"\\r\\n                                      fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                                <img class=\\\"member-chip-avatar\\\" [src]=\\\"board.members | getById:memberId:'avatar'\\\"\\r\\n                                     [matTooltip]=\\\"board.members | getById:memberId:'name'\\\">\\r\\n                                <mat-icon class=\\\"ml-8 s-16 chip-remove\\\"\\r\\n                                          (click)=\\\"toggleInArray(memberId, card.idMembers);updateCard()\\\">close\\r\\n                                </mat-icon>\\r\\n                            </mat-chip>\\r\\n                        </mat-chip-list>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- / LABELS SECTION -->\\r\\n\\r\\n            <!-- ATTACHMENTS SECTION -->\\r\\n            <div *ngIf=\\\"card.attachments[0]\\\" class=\\\"section\\\">\\r\\n\\r\\n                <div class=\\\"attachments\\\">\\r\\n\\r\\n                    <div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                        <mat-icon class=\\\"s-20\\\">attachment</mat-icon>\\r\\n                        <span class=\\\"section-title\\\">Attachments</span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"section-content\\\">\\r\\n\\r\\n                        <div class=\\\"attachment\\\" *ngFor=\\\"let item of card.attachments\\\" [ngSwitch]=\\\"item.type\\\">\\r\\n\\r\\n                            <div *ngSwitchCase=\\\"'image'\\\"\\r\\n                                 fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"start center\\\"\\r\\n                                 fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\r\\n\\r\\n                                <div class=\\\"attachment-preview mat-elevation-z2\\\"\\r\\n                                     [ngStyle]=\\\"{'background-image': 'url('+item.src+')'}\\\">\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"attachment-content\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n                                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                                        <span class=\\\"attachment-name\\\">{{item.name}}</span>\\r\\n                                        <mat-icon *ngIf=\\\"card.idAttachmentCover === item.id\\\"\\r\\n                                                  class=\\\"yellow-700-fg attachment-is-cover s-20\\\">star\\r\\n                                        </mat-icon>\\r\\n                                    </div>\\r\\n\\r\\n                                    <span class=\\\"attachment-time\\\">{{item.time}}</span>\\r\\n\\r\\n                                    <div>\\r\\n                                        <button mat-raised-button class=\\\"attachment-actions-button\\\"\\r\\n                                                [matMenuTriggerFor]=\\\"attachmentActionsMenu\\\">\\r\\n                                            <span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                                                <span>Actions</span>\\r\\n                                                <mat-icon class=\\\"s-20\\\">arrow_drop_down</mat-icon>\\r\\n                                            </span>\\r\\n                                        </button>\\r\\n                                        <mat-menu #attachmentActionsMenu=\\\"matMenu\\\">\\r\\n                                            <button mat-menu-item (click)=\\\"toggleCoverImage(item.id)\\\">\\r\\n                                                <span *ngIf=\\\"card.idAttachmentCover !== item.id\\\">Make Cover</span>\\r\\n                                                <span *ngIf=\\\"card.idAttachmentCover === item.id\\\">Remove Cover</span>\\r\\n                                            </button>\\r\\n                                            <button mat-menu-item (click)=\\\"removeAttachment(item)\\\">\\r\\n                                                Remove Attachment\\r\\n                                            </button>\\r\\n                                        </mat-menu>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngSwitchCase=\\\"'link'\\\" fxLayout=\\\"row\\\">\\r\\n                                <div class=\\\"attachment-preview mat-elevation-z2\\\" fxLayout=\\\"column\\\"\\r\\n                                     fxLayoutAlign=\\\"center center\\\">\\r\\n                                    <span>LINK</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"attachment-content\\\" fxLayout=\\\"column\\\">\\r\\n                                    <span class=\\\"attachment-url\\\">{{item.url}}</span>\\r\\n                                    <span class=\\\"attachment-time\\\">{{item.time}}</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <button mat-button class=\\\"add-attachment-button\\\" aria-label=\\\"add attachment\\\">\\r\\n                            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                                <mat-icon class=\\\"s-20\\\">add</mat-icon>\\r\\n                                <span>Add an attachment</span>\\r\\n                            </div>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- / ATTACHMENTS SECTION -->\\r\\n\\r\\n            <!-- CHECKLISTS SECTION -->\\r\\n            <div class=\\\"section\\\" *ngFor=\\\"let checklist of card.checklists\\\">\\r\\n\\r\\n                <div class=\\\"checklist\\\">\\r\\n\\r\\n                    <div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n                        <mat-icon class=\\\"s-20\\\">check_box</mat-icon>\\r\\n\\r\\n                        <span fxFlex class=\\\"section-title\\\">{{checklist.name}}</span>\\r\\n\\r\\n                        <div>\\r\\n\\r\\n                            <button mat-icon-button class=\\\"checklist-actions-button\\\"\\r\\n                                    [matMenuTriggerFor]=\\\"checklistActionsMenu\\\">\\r\\n                                <mat-icon class=\\\"s-20\\\">more_vert</mat-icon>\\r\\n                            </button>\\r\\n\\r\\n                            <mat-menu #checklistActionsMenu=\\\"matMenu\\\">\\r\\n                                <button mat-menu-item (click)=\\\"removeChecklist(checklist)\\\">\\r\\n                                    <mat-icon>delete</mat-icon>\\r\\n                                    <span>Remove Checklist</span>\\r\\n                                </button>\\r\\n                            </mat-menu>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"section-content\\\">\\r\\n\\r\\n                        <div class=\\\"checklist-progress\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n                            <span class=\\\"checklist-progress-value\\\">\\r\\n                                {{checklist.checkItemsChecked}} / {{checklist.checkItems.length}}\\r\\n                            </span>\\r\\n\\r\\n                            <mat-progress-bar class=\\\"mat-accent checklist-progressbar\\\" mode=\\\"determinate\\\"\\r\\n                                              value=\\\"{{100 * checklist.checkItemsChecked / checklist.checkItems.length}}\\\">\\r\\n                            </mat-progress-bar>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"check-items\\\">\\r\\n\\r\\n                            <div class=\\\"check-item\\\" *ngFor=\\\"let checkItem of checklist.checkItems\\\" fxLayout=\\\"row\\\"\\r\\n                                 fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n                                <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                                    <mat-checkbox [(ngModel)]=\\\"checkItem.checked\\\"\\r\\n                                                  (change)=\\\"updateCheckedCount(checklist)\\\"\\r\\n                                                  aria-label=\\\"{{checkItem.name}}\\\">\\r\\n                                    </mat-checkbox>\\r\\n                                    <mat-form-field fxFlex class=\\\"mx-12\\\">\\r\\n                                        <input matInput [(ngModel)]=\\\"checkItem.name\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n\\r\\n                                <button mat-icon-button class=\\\"checklist-actions-button\\\"\\r\\n                                        (click)=\\\"removeChecklistItem(checkItem, checklist)\\\">\\r\\n                                    <mat-icon class=\\\"secondary-text s-20\\\">delete</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <form #newCheckItemForm=\\\"ngForm\\\" (submit)=\\\"addCheckItem(newCheckItemForm,checklist)\\\"\\r\\n                              name=\\\"newCheckItemForm\\\" class=\\\"new-check-item-form\\\"\\r\\n                              fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n                            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxFlex>\\r\\n                                <mat-icon class=\\\"s-20\\\">add</mat-icon>\\r\\n\\r\\n                                <mat-form-field class=\\\"no-errors-spacer mx-12\\\" fxFlex>\\r\\n                                    <input matInput ngModel #checkItem=\\\"ngModel\\\" name=\\\"checkItem\\\"\\r\\n                                           placeholder=\\\"Add an item\\\" autocomplete=\\\"off\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n\\r\\n                            <button mat-raised-button\\r\\n                                    [disabled]=\\\"!newCheckItemForm.valid || newCheckItemForm.pristine\\\"\\r\\n                                    class=\\\"mat-accent\\\" aria-label=\\\"Add\\\">\\r\\n                                <span>Add</span>\\r\\n                            </button>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- / CHECKLISTS SECTION -->\\r\\n\\r\\n            <!-- COMMENTS SECTION -->\\r\\n            <div class=\\\"section\\\">\\r\\n\\r\\n                <div class=\\\"comments\\\">\\r\\n\\r\\n                    <div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                        <mat-icon class=\\\"s-20\\\">comment</mat-icon>\\r\\n                        <span class=\\\"section-title\\\">Comments</span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                        <form name=\\\"cardCommentForm\\\"\\r\\n                              #newCommentForm=\\\"ngForm\\\" (submit)=\\\"addNewComment(newCommentForm)\\\"\\r\\n                              class=\\\"comment new-comment\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\" no-validate>\\r\\n\\r\\n                            <div fxLayout=\\\"row\\\">\\r\\n                                <img class=\\\"comment-member-avatar\\\" src=\\\"assets/images/avatars/profile.jpg\\\">\\r\\n                                <mat-form-field fxFlex>\\r\\n                                    <input matInput name=\\\"newComment\\\" ngModel #newComment=\\\"ngModel\\\"\\r\\n                                           placeholder=\\\"Write a comment..\\\" required>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n\\r\\n                            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n                                <button mat-raised-button class=\\\"mat-accent\\\"\\r\\n                                        [disabled]=\\\"!newCommentForm.valid || newCommentForm.pristine\\\"\\r\\n                                        aria-label=\\\"Add\\\">\\r\\n                                    <span>Add</span>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n\\r\\n                        <div class=\\\"comment\\\" fxLayout=\\\"row\\\" *ngFor=\\\"let comment of card.comments\\\">\\r\\n\\r\\n                            <img class=\\\"comment-member-avatar\\\"\\r\\n                                 [src]=\\\"board.members | getById: comment.idMember:'avatar'\\\">\\r\\n\\r\\n                            <div fxLayout=\\\"column\\\">\\r\\n                                <div class=\\\"comment-member-name\\\">\\r\\n                                    {{board.members | getById: comment.idMember:'name'}}\\r\\n                                </div>\\r\\n                                <div class=\\\"comment-bubble\\\">{{comment.message}}</div>\\r\\n                                <div class=\\\"comment-time secondary-text\\\">{{comment.time}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- / COMMENTS SECTION -->\\r\\n\\r\\n            <!-- ACTIVITIES SECTION -->\\r\\n            <div *ngIf=\\\"card.activities[0]\\\" class=\\\"section\\\">\\r\\n\\r\\n                <div class=\\\"activities\\\">\\r\\n\\r\\n                    <div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                        <mat-icon class=\\\"s-20\\\">list</mat-icon>\\r\\n                        <span class=\\\"section-title\\\">Activity</span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                        <div class=\\\"activity\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"\\r\\n                             *ngFor=\\\"let activity of card.activities\\\">\\r\\n                            <img class=\\\"activity-member-avatar\\\"\\r\\n                                 [src]=\\\"board.members| getById:activity.idMember:'avatar'\\\">\\r\\n                            <div class=\\\"activity-member-name\\\">{{board.members| getById:activity.idMember:'name'}}</div>\\r\\n                            <div class=\\\"activity-message\\\">{{activity.message}}</div>\\r\\n                            <div class=\\\"activity-time secondary-text\\\">{{activity.time}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- / ACTIVITIES SECTION -->\\r\\n\\r\\n        </div>\\r\\n        <!-- / SECTIONS -->\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.scrumboard-card-dialog {\\n  width: 720px; }\\n@media screen and (max-width: 599px) {\\n    .scrumboard-card-dialog {\\n      width: 100%; } }\\n.scrumboard-card-dialog .mat-dialog-container {\\n    padding: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-toolbar .due-date .mat-form-field {\\n      width: auto;\\n      margin: 0 8px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-toolbar .due-date .mat-form-field .mat-form-field-wrapper {\\n        padding: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-toolbar .due-date .mat-form-field .mat-form-field-wrapper .mat-form-field-flex {\\n          align-items: center; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-toolbar .due-date .mat-form-field .mat-form-field-wrapper .mat-form-field-flex .mat-form-field-infix {\\n            display: none; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-toolbar .due-date .mat-form-field .mat-form-field-wrapper .mat-form-field-flex .mat-input-element {\\n            display: none; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-toolbar .due-date .mat-form-field-prefix .mat-datepicker-toggle-default-icon,\\n    .scrumboard-card-dialog .mat-dialog-container .mat-toolbar .due-date .mat-form-field-suffix .mat-datepicker-toggle-default-icon {\\n      width: 24px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content {\\n      position: relative;\\n      background-color: #F5F5F5; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .card-breadcrumb {\\n        font-weight: 500;\\n        font-size: 14px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .card-subscribe {\\n        margin-right: 8px;\\n        color: rgba(0, 0, 0, 0.6); }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .picker {\\n        width: 140px;\\n        min-width: 140px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .card-name {\\n        width: 100%;\\n        font-size: 22px; }\\n@media screen and (max-width: 599px) {\\n          .scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .card-name {\\n            font-size: 14px; } }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .description {\\n        padding-bottom: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section {\\n        border-bottom: 1px solid rgba(0, 0, 0, 0.12);\\n        margin-bottom: 32px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section:last-child {\\n          border-bottom: none;\\n          margin-bottom: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section:last-child .section-content {\\n            padding-bottom: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .section-header {\\n          font-size: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .section-header mat-icon {\\n            margin-right: 8px;\\n            color: rgba(0, 0, 0, 0.6); }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .section-header .section-title {\\n            font-weight: 500; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .section-content {\\n          padding: 24px 0 32px 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .labels .section-content {\\n          padding: 8px 0 32px 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .labels .label-chips {\\n          box-shadow: none;\\n          padding: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .labels .label-chips .label-chip {\\n            display: block; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .labels .label-chips .label-chip .chip-remove {\\n              cursor: pointer; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .members .section-content {\\n          padding: 8px 0 32px 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .members .member-chips {\\n          box-shadow: none;\\n          padding: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .members .member-chips .member-chip {\\n            padding: 4px 12px 4px 4px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .members .member-chips .member-chip .member-chip-avatar {\\n              width: 32px;\\n              border-radius: 50%; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .members .member-chips .member-chip .chip-remove {\\n              cursor: pointer; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment {\\n          margin-bottom: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-preview {\\n            background-color: #EEF0F2;\\n            width: 160px;\\n            height: 128px;\\n            background-size: contain;\\n            background-position: 50% 50%;\\n            background-repeat: no-repeat;\\n            font-weight: 500;\\n            color: rgba(0, 0, 0, 0.6);\\n            margin-right: 24px; }\\n@media screen and (max-width: 599px) {\\n              .scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-preview {\\n                margin-bottom: 24px; } }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-content .attachment-url,\\n          .scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-content .attachment-name {\\n            font-weight: 500;\\n            font-size: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-content .attachment-is-cover {\\n            margin-left: 6px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-content .attachment-time {\\n            color: rgba(0, 0, 0, 0.6); }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-content .attachment-actions-button {\\n            background-color: white;\\n            text-transform: capitalize;\\n            margin: 12px 0 0 0;\\n            padding-left: 12px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-content .attachment-actions-button mat-icon {\\n              margin-left: 8px;\\n              color: rgba(0, 0, 0, 0.6); }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .add-attachment-button {\\n          margin: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .add-attachment-button mat-icon {\\n            color: rgba(0, 0, 0, 0.6);\\n            margin-right: 8px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .add-attachment-button span {\\n            font-weight: 500;\\n            text-transform: capitalize; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .checklist-progress {\\n          margin-bottom: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .checklist-progress .checklist-progress-value {\\n            margin-right: 12px;\\n            font-weight: 500;\\n            white-space: nowrap;\\n            font-size: 14px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .editable-wrap {\\n          flex: 1; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .check-items .check-item mat-checkbox {\\n          margin-bottom: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .check-items .check-item mat-checkbox .mat-label {\\n            font-size: 14px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .check-items .check-item mat-checkbox.mat-checked .mat-label {\\n            text-decoration: line-through;\\n            color: rgba(0, 0, 0, 0.6); }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .new-check-item-form {\\n          padding-top: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .new-check-item-form mat-form-field {\\n            margin: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .new-check-item-form .mat-button {\\n            margin: 0 0 0 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment {\\n          margin-bottom: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-member-avatar {\\n            width: 32px;\\n            height: 32px;\\n            border-radius: 50%;\\n            margin-right: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-member-name {\\n            font-size: 14px;\\n            font-weight: 500; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-time {\\n            font-size: 12px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-bubble {\\n            position: relative;\\n            padding: 8px;\\n            background-color: white;\\n            border: 1px solid #dcdfe1;\\n            font-size: 14px;\\n            margin: 4px 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-bubble:after, .scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-bubble:before {\\n              content: ' ';\\n              position: absolute;\\n              width: 0;\\n              height: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-bubble:after {\\n              left: -7px;\\n              right: auto;\\n              top: 0px;\\n              bottom: auto;\\n              border: 11px solid;\\n              border-color: white transparent transparent transparent; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-bubble:before {\\n              left: -9px;\\n              right: auto;\\n              top: -1px;\\n              bottom: auto;\\n              border: 8px solid;\\n              border-color: #dcdfe1 transparent transparent transparent; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment.new-comment mat-form-field {\\n            margin: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .activities .activity {\\n          margin-bottom: 12px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .activities .activity .activity-member-avatar {\\n            width: 24px;\\n            height: 24px;\\n            border-radius: 50%;\\n            margin-right: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .activities .activity .activity-member-name {\\n            font-size: 14px;\\n            font-weight: 500;\\n            margin-right: 8px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .activities .activity .activity-message {\\n            font-size: 14px;\\n            margin-right: 8px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .activities .activity .activity-time {\\n            font-size: 12px; }\\n.scrumboard-card-dialog .dialog-content-wrapper {\\n    max-height: 85vh;\\n    display: flex;\\n    flex-direction: column; }\\n.scrumboard-members-menu {\\n  width: 240px; }\\n.scrumboard-members-menu .mat-checkbox-layout,\\n  .scrumboard-members-menu .mat-checkbox-label {\\n    display: flex;\\n    flex: 1; }\\n.scrumboard-labels-menu .mat-menu-content {\\n  padding-bottom: 0; }\\n.scrumboard-labels-menu .mat-menu-content .mat-checkbox-layout,\\n  .scrumboard-labels-menu .mat-menu-content .mat-checkbox-label {\\n    display: flex;\\n    flex: 1; }\\n.scrumboard-labels-menu .mat-menu-content .views {\\n    display: flex;\\n    flex-direction: column;\\n    position: relative;\\n    overflow: hidden;\\n    width: 240px;\\n    min-width: 240px;\\n    max-width: 240px;\\n    min-height: 240px; }\\n.scrumboard-labels-menu .mat-menu-content .views .view {\\n      position: absolute;\\n      width: 240px;\\n      height: 100%;\\n      bottom: 0;\\n      left: 0;\\n      right: 0;\\n      top: 0; }\\n.scrumboard-labels-menu .mat-menu-content .views .view > .header {\\n        border-bottom: 1px solid rgba(0, 0, 0, 0.1); }\\n\"","import { Component, Inject, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms/src/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatMenuTrigger } from '@angular/material';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-board-card-dialog',\r\n    templateUrl  : './card.component.html',\r\n    styleUrls    : ['./card.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrumboardCardDialogComponent implements OnInit, OnDestroy\r\n{\r\n    card: any;\r\n    board: any;\r\n    list: any;\r\n\r\n    toggleInArray = FuseUtils.toggleInArray;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n    @ViewChild('checklistMenuTrigger')\r\n    checklistMenu: MatMenuTrigger;\r\n\r\n    @ViewChild('newCheckListTitleField')\r\n    newCheckListTitleField;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {MatDialogRef<ScrumboardCardDialogComponent>} _matDialogRef\r\n     * @param _data\r\n     * @param {MatDialog} _matDialog\r\n     * @param {ScrumboardService} _scrumboardService\r\n     */\r\n    constructor(\r\n        private _matDialogRef: MatDialogRef<ScrumboardCardDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private _data: any,\r\n        private _matDialog: MatDialog,\r\n        private _scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._scrumboardService.onBoardChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(board => {\r\n                this.board = board;\r\n\r\n                this.card = this.board.cards.find((_card) => {\r\n                    return this._data.cardId === _card.id;\r\n                });\r\n\r\n                this.list = this.board.lists.find((_list) => {\r\n                    return this._data.listId === _list.id;\r\n                });\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Remove due date\r\n     */\r\n    removeDueDate(): void\r\n    {\r\n        this.card.due = '';\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Toggle subscribe\r\n     */\r\n    toggleSubscribe(): void\r\n    {\r\n        this.card.subscribed = !this.card.subscribed;\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Toggle cover image\r\n     *\r\n     * @param attachmentId\r\n     */\r\n    toggleCoverImage(attachmentId): void\r\n    {\r\n        if ( this.card.idAttachmentCover === attachmentId )\r\n        {\r\n            this.card.idAttachmentCover = '';\r\n        }\r\n        else\r\n        {\r\n            this.card.idAttachmentCover = attachmentId;\r\n        }\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Remove attachment\r\n     *\r\n     * @param attachment\r\n     */\r\n    removeAttachment(attachment): void\r\n    {\r\n        if ( attachment.id === this.card.idAttachmentCover )\r\n        {\r\n            this.card.idAttachmentCover = '';\r\n        }\r\n\r\n        this.card.attachments.splice(this.card.attachments.indexOf(attachment), 1);\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Remove checklist\r\n     *\r\n     * @param checklist\r\n     */\r\n    removeChecklist(checklist): void\r\n    {\r\n        this.card.checklists.splice(this.card.checklists.indexOf(checklist), 1);\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Update checked count\r\n     *\r\n     * @param list\r\n     */\r\n    updateCheckedCount(list): void\r\n    {\r\n        const checkItems = list.checkItems;\r\n        let checkedItems = 0;\r\n        let allCheckedItems = 0;\r\n        let allCheckItems = 0;\r\n\r\n        for ( const checkItem of checkItems )\r\n        {\r\n            if ( checkItem.checked )\r\n            {\r\n                checkedItems++;\r\n            }\r\n        }\r\n\r\n        list.checkItemsChecked = checkedItems;\r\n\r\n        for ( const item of this.card.checklists )\r\n        {\r\n            allCheckItems += item.checkItems.length;\r\n            allCheckedItems += item.checkItemsChecked;\r\n        }\r\n\r\n        this.card.checkItems = allCheckItems;\r\n        this.card.checkItemsChecked = allCheckedItems;\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Remove checklist item\r\n     *\r\n     * @param checkItem\r\n     * @param checklist\r\n     */\r\n    removeChecklistItem(checkItem, checklist): void\r\n    {\r\n        checklist.checkItems.splice(checklist.checkItems.indexOf(checkItem), 1);\r\n\r\n        this.updateCheckedCount(checklist);\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Add check item\r\n     *\r\n     * @param {NgForm} form\r\n     * @param checkList\r\n     */\r\n    addCheckItem(form: NgForm, checkList): void\r\n    {\r\n        const checkItemVal = form.value.checkItem;\r\n\r\n        if ( !checkItemVal || checkItemVal === '' )\r\n        {\r\n            return;\r\n        }\r\n\r\n        const newCheckItem = {\r\n            'name'   : checkItemVal,\r\n            'checked': false\r\n        };\r\n\r\n        checkList.checkItems.push(newCheckItem);\r\n\r\n        this.updateCheckedCount(checkList);\r\n\r\n        form.setValue({checkItem: ''});\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Add checklist\r\n     *\r\n     * @param {NgForm} form\r\n     */\r\n    addChecklist(form: NgForm): void\r\n    {\r\n        this.card.checklists.push({\r\n            id               : FuseUtils.generateGUID(),\r\n            name             : form.value.checklistTitle,\r\n            checkItemsChecked: 0,\r\n            checkItems       : []\r\n        });\r\n\r\n        form.setValue({checklistTitle: ''});\r\n        form.resetForm();\r\n        this.checklistMenu.closeMenu();\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * On checklist menu open\r\n     */\r\n    onChecklistMenuOpen(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.newCheckListTitleField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add new comment\r\n     *\r\n     * @param {NgForm} form\r\n     */\r\n    addNewComment(form: NgForm): void\r\n    {\r\n        const newCommentText = form.value.newComment;\r\n\r\n        const newComment = {\r\n            idMember: '36027j1930450d8bf7b10158',\r\n            message : newCommentText,\r\n            time    : 'now'\r\n        };\r\n\r\n        this.card.comments.unshift(newComment);\r\n\r\n        form.setValue({newComment: ''});\r\n\r\n        this.updateCard();\r\n    }\r\n\r\n    /**\r\n     * Remove card\r\n     */\r\n    removeCard(): void\r\n    {\r\n        this.confirmDialogRef = this._matDialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete the card?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if ( result )\r\n            {\r\n                this._matDialogRef.close();\r\n                this._scrumboardService.removeCard(this.card.id, this.list.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update card\r\n     */\r\n    updateCard(): void\r\n    {\r\n        this._scrumboardService.updateCard(this.card);\r\n    }\r\n}\r\n","module.exports = \"<div [ngSwitch]=\\\"labelsMenuView\\\" class=\\\"views\\\" (click)=\\\"$event.stopPropagation()\\\">\\r\\n\\r\\n    <div class=\\\"view\\\" *ngSwitchCase=\\\"'labels'\\\" fxFlex fxLayout=\\\"column\\\">\\r\\n\\r\\n        <div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <div>Labels</div>\\r\\n            <button mat-button (click)=\\\"labelsMenuView ='add'\\\">\\r\\n                <mat-icon class=\\\"s-16\\\">add</mat-icon>\\r\\n                <span>Add</span>\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex fxLayout=\\\"column\\\" fusePerfectScrollbar>\\r\\n\\r\\n            <div class=\\\"label\\\" *ngFor=\\\"let label of board.labels\\\" fxFlex=\\\"0 0 auto\\\" fxLayout=\\\"row\\\" fxFlexAlign=\\\"space-between center\\\"\\r\\n                 [ngClass]=\\\"label.color\\\">\\r\\n\\r\\n                <mat-checkbox fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" [checked]=\\\"card.idLabels.indexOf(label.id) > -1\\\"\\r\\n                              (change)=\\\"toggleInArray(label.id, card.idLabels);cardLabelsChanged()\\\">\\r\\n                    {{label.name}}\\r\\n                </mat-checkbox>\\r\\n\\r\\n                <button mat-icon-button>\\r\\n                    <mat-icon class=\\\"s-16\\\" (click)=\\\"labelsMenuView ='edit';selectedLabel = label\\\">mode_edit</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"view edit\\\" *ngSwitchCase=\\\"'edit'\\\" fxFlex fxLayout=\\\"column\\\">\\r\\n\\r\\n        <div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <button mat-icon-button (click)=\\\"labelsMenuView ='labels'\\\">\\r\\n                <mat-icon class=\\\"s-16\\\">arrow_back</mat-icon>\\r\\n            </button>\\r\\n            <div>Edit Label</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedLabel.name\\\" (change)=\\\"onLabelChange()\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <fuse-material-color-picker [(selectedClass)]=\\\"selectedLabel.color\\\" class=\\\"ml-8\\\" (change)=\\\"$event.preventDefault;onLabelChange()\\\"></fuse-material-color-picker>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"view add\\\" *ngSwitchCase=\\\"'add'\\\" fxFlex fxLayout=\\\"column\\\">\\r\\n\\r\\n        <div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <button mat-icon-button (click)=\\\"labelsMenuView ='labels'\\\">\\r\\n                <mat-icon class=\\\"s-16\\\">arrow_back</mat-icon>\\r\\n            </button>\\r\\n            <div>Add Label</div>\\r\\n        </div>\\r\\n\\r\\n        <form (submit)=\\\"addNewLabel()\\\" #newLabelForm=\\\"ngForm\\\" fxFlex fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n\\r\\n            <div fxFlex=\\\"0 1 auto\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"newLabel.name\\\" name=\\\"labelName\\\" required>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <fuse-material-color-picker class=\\\"ml-8\\\" [(selectedClass)]=\\\"newLabel.color\\\" name=\\\"labelColor\\\"></fuse-material-color-picker>\\r\\n            </div>\\r\\n\\r\\n            <button mat-raised-button class=\\\"mat-accent mt-16\\\" [disabled]=\\\"!newLabelForm.valid\\\">ADD NEW LABEL</button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".scrumboard-labels-menu .mat-menu-content {\\n  padding-bottom: 0; }\\n  .scrumboard-labels-menu .mat-menu-content .mat-checkbox-layout,\\n  .scrumboard-labels-menu .mat-menu-content .mat-checkbox-label {\\n    display: flex;\\n    flex: 1; }\\n  .scrumboard-labels-menu .mat-menu-content .views {\\n    display: flex;\\n    flex-direction: column;\\n    position: relative;\\n    overflow: hidden;\\n    width: 240px;\\n    min-width: 240px;\\n    max-width: 240px;\\n    min-height: 240px; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view {\\n      position: absolute;\\n      width: 240px;\\n      height: 100%;\\n      bottom: 0;\\n      left: 0;\\n      right: 0;\\n      top: 0; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view > .header {\\n        border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n        padding: 4px 8px 8px 16px;\\n        margin-bottom: 8px; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view .label {\\n        margin: 0 8px 8px 8px;\\n        padding: 4px 4px 4px 16px; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view.edit > .header, .scrumboard-labels-menu .mat-menu-content .views .view.add > .header {\\n        padding: 0 8px 8px 0; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view.edit form, .scrumboard-labels-menu .mat-menu-content .views .view.add form {\\n        padding: 0 16px 8px 16px; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view.edit form .mat-form-field-infix, .scrumboard-labels-menu .mat-menu-content .views .view.add form .mat-form-field-infix {\\n          width: auto !important; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view.edit .content, .scrumboard-labels-menu .mat-menu-content .views .view.add .content {\\n        padding: 8px 16px 8px 16px; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view.edit .content .mat-form-field-infix, .scrumboard-labels-menu .mat-menu-content .views .view.add .content .mat-form-field-infix {\\n          width: auto !important; }\\n\"","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-label-selector',\r\n    templateUrl  : './label-selector.component.html',\r\n    styleUrls    : ['./label-selector.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\n\r\nexport class ScrumboardLabelSelectorComponent implements OnInit, OnDestroy\r\n{\r\n    @Input('card')\r\n    card: any;\r\n\r\n    @Output()\r\n    onCardLabelsChange: EventEmitter<any>;\r\n\r\n    board: any;\r\n    labelsMenuView: string;\r\n    selectedLabel: any;\r\n    newLabel: any;\r\n    toggleInArray: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ScrumboardService} _scrumboardService\r\n     */\r\n    constructor(\r\n        private _scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onCardLabelsChange = new EventEmitter();\r\n        this.labelsMenuView = 'labels';\r\n        this.newLabel = {\r\n            'id'   : '',\r\n            'name' : '',\r\n            'color': 'mat-blue-400-bg'\r\n        };\r\n        this.toggleInArray = FuseUtils.toggleInArray;\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._scrumboardService.onBoardChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(board => {\r\n                this.board = board;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Card labels changed\r\n     */\r\n    cardLabelsChanged(): void\r\n    {\r\n        this.onCardLabelsChange.next();\r\n    }\r\n\r\n    /**\r\n     * On label change\r\n     */\r\n    onLabelChange(): void\r\n    {\r\n        this._scrumboardService.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Add new label\r\n     */\r\n    addNewLabel(): void\r\n    {\r\n        this.newLabel.id = FuseUtils.generateGUID();\r\n        this.board.labels.push(Object.assign({}, this.newLabel));\r\n        this.newLabel.name = '';\r\n        this.labelsMenuView = 'labels';\r\n    }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"!formActive\\\" class=\\\"board-name\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n    <span>{{board.name}}</span>\\r\\n    <button mat-icon-button (click)=\\\"openForm()\\\">\\r\\n        <mat-icon class=\\\"s-16\\\">edit_mode</mat-icon>\\r\\n    </button>\\r\\n</div>\\r\\n\\r\\n\\r\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onFormSubmit()\\\"\\r\\n      class=\\\"board-name-form\\\" fxLayout=\\\"row\\\" fxFlex=\\\"1 0 auto\\\" *ngIf=\\\"formActive\\\">\\r\\n\\r\\n    <input formControlName=\\\"name\\\" #nameInput fxFlex=\\\"1 0 auto\\\" placeholder=\\\"Write a board name\\\">\\r\\n\\r\\n    <button mat-icon-button fxFlex=\\\"0 1 auto\\\">\\r\\n        <mat-icon>check</mat-icon>\\r\\n    </button>\\r\\n    <button mat-icon-button fxFlex=\\\"0 1 auto\\\" (click)=\\\"closeForm()\\\" type=\\\"button\\\">\\r\\n        <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n</form>\\r\\n\"","module.exports = \":host {\\n  display: block !important; }\\n  :host .board-name {\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    font-size: 15px;\\n    font-weight: 500; }\\n\"","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n    selector   : 'scrumboard-edit-board-name',\r\n    templateUrl: './edit-board-name.component.html',\r\n    styleUrls  : ['./edit-board-name.component.scss']\r\n})\r\nexport class ScrumboardEditBoardNameComponent\r\n{\r\n    formActive: boolean;\r\n    form: FormGroup;\r\n\r\n    @Input()\r\n    board;\r\n\r\n    @Output()\r\n    onNameChanged: EventEmitter<any>;\r\n\r\n    @ViewChild('nameInput')\r\n    nameInputField;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.formActive = false;\r\n        this.onNameChanged = new EventEmitter();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Open form\r\n     */\r\n    openForm(): void\r\n    {\r\n        this.form = this.formBuilder.group({\r\n            name: [this.board.name]\r\n        });\r\n        this.formActive = true;\r\n        this.focusNameField();\r\n    }\r\n\r\n    /**\r\n     * Close form\r\n     */\r\n    closeForm(): void\r\n    {\r\n        this.formActive = false;\r\n    }\r\n\r\n    /**\r\n     * Focus to the name field\r\n     */\r\n    focusNameField(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.nameInputField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On form submit\r\n     */\r\n    onFormSubmit(): void\r\n    {\r\n        if ( this.form.valid )\r\n        {\r\n            this.board.name = this.form.getRawValue().name;\r\n            this.board.uri = encodeURIComponent(this.board.name).replace(/%20/g, '-').toLowerCase();\r\n\r\n            this.onNameChanged.next(this.board.name);\r\n            this.formActive = false;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"!formActive\\\" class=\\\"add-card-button\\\"\\r\\n     (click)=\\\"openForm()\\\"\\r\\n     fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n    <div>\\r\\n        <mat-icon class=\\\"s-20\\\">add</mat-icon>\\r\\n    </div>\\r\\n    <span>Add a card</span>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"formActive\\\" class=\\\"add-card-form-wrapper\\\">\\r\\n\\r\\n    <form [formGroup]=\\\"form\\\" (submit)=\\\"onFormSubmit()\\\" class=\\\"add-card-form\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n        <mat-form-field fxFlex floatLabel=\\\"never\\\">\\r\\n            <input #nameInput matInput formControlName=\\\"name\\\" placeholder=\\\"Card title\\\" autocomplete=\\\"off\\\" required>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"pl-8\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n            <button mat-raised-button class=\\\"add-button mat-accent\\\" aria-label=\\\"add\\\"\\r\\n                    [disabled]=\\\"form.invalid\\\">\\r\\n                <span>Add</span>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button (click)=\\\"closeForm()\\\" class=\\\"cancel-button\\\" aria-label=\\\"cancel\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\"","module.exports = \":host .add-card-button {\\n  position: relative;\\n  height: 48px;\\n  min-height: 48px;\\n  padding: 0 16px;\\n  text-align: left;\\n  text-transform: none;\\n  font-weight: 500;\\n  font-size: 14px;\\n  background-color: #DCDFE2;\\n  cursor: pointer;\\n  border-radius: 2px; }\\n  :host .add-card-button mat-icon {\\n    margin-right: 8px;\\n    color: rgba(0, 0, 0, 0.6); }\\n  :host .add-card-form-wrapper {\\n  background-color: #DCDFE2; }\\n  :host .add-card-form-wrapper .add-card-form {\\n    z-index: 999;\\n    background: white;\\n    display: block;\\n    position: relative;\\n    padding: 8px;\\n    border-top: 1px solid rgba(0, 0, 0, 0.12); }\\n  :host .add-card-form-wrapper .add-card-form mat-form-field {\\n      width: 100%;\\n      margin: 0;\\n      padding: 12px 8px; }\\n\"","import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n    selector   : 'scrumboard-board-add-card',\r\n    templateUrl: './add-card.component.html',\r\n    styleUrls  : ['./add-card.component.scss']\r\n})\r\nexport class ScrumboardBoardAddCardComponent\r\n{\r\n    formActive: boolean;\r\n    form: FormGroup;\r\n\r\n    @Output()\r\n    onCardAdd: EventEmitter<any>;\r\n\r\n    @ViewChild('nameInput')\r\n    nameInputField;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.formActive = false;\r\n        this.onCardAdd = new EventEmitter();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Open the form\r\n     */\r\n    openForm(): void\r\n    {\r\n        this.form = this._formBuilder.group({\r\n            name: ''\r\n        });\r\n        this.formActive = true;\r\n        this.focusNameField();\r\n    }\r\n\r\n    /**\r\n     * Close the form\r\n     */\r\n    closeForm(): void\r\n    {\r\n        this.formActive = false;\r\n    }\r\n\r\n    /**\r\n     * Focus to the name field\r\n     */\r\n    focusNameField(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.nameInputField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On form submit\r\n     */\r\n    onFormSubmit(): void\r\n    {\r\n        if ( this.form.valid )\r\n        {\r\n            const cardName = this.form.getRawValue().name;\r\n            this.onCardAdd.next(cardName);\r\n            this.formActive = false;\r\n        }\r\n    }\r\n}\r\n\r\n","module.exports = \"<!-- CARD COVER -->\\r\\n<div *ngIf=\\\"board.settings.cardCoverImages && card.idAttachmentCover\\\"\\r\\n     class=\\\"list-card-cover\\\">\\r\\n    <img [src]=\\\"card.attachments | getById:card.idAttachmentCover:'src'\\\">\\r\\n</div>\\r\\n<!-- / CARD COVER -->\\r\\n\\r\\n<!-- CARD DETAILS -->\\r\\n<div class=\\\"list-card-details\\\">\\r\\n\\r\\n    <!-- CARD SORT HANDLE -->\\r\\n    <div class=\\\"list-card-sort-handle\\\">\\r\\n        <mat-icon mat-font-icon=\\\"icon-cursor-move\\\" class=\\\"icon s16\\\"></mat-icon>\\r\\n    </div>\\r\\n    <!-- /CARD SORT HANDLE -->\\r\\n\\r\\n    <!-- CARD LABELS -->\\r\\n    <div *ngIf=\\\"card.idLabels.length > 0\\\" class=\\\"list-card-labels\\\" fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n        <span class=\\\"list-card-label\\\"\\r\\n              [ngClass]=\\\"board.labels | getById:labelId:'color'\\\"\\r\\n              *ngFor=\\\"let labelId of card.idLabels\\\"\\r\\n              [matTooltip]=\\\"board.labels | getById:labelId:'name'\\\">\\r\\n        </span>\\r\\n\\r\\n    </div>\\r\\n    <!-- / CARD LABELS -->\\r\\n\\r\\n    <!-- CARD NAME -->\\r\\n    <div class=\\\"list-card-name\\\">{{card.name}}</div>\\r\\n    <!-- / CARD NAME -->\\r\\n\\r\\n    <div *ngIf=\\\"card.due || card.checkItems\\\"\\r\\n         class=\\\"list-card-badges\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n        <!-- CARD DUE -->\\r\\n        <span class=\\\"badge due-date\\\"\\r\\n              [ngClass]=\\\"{'overdue': isOverdue(card.due)}\\\"\\r\\n              *ngIf=\\\"card.due\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-icon class=\\\"s-16\\\">access_time</mat-icon>\\r\\n            <span>{{card.due | date:'mediumDate'}}</span>\\r\\n\\r\\n        </span>\\r\\n        <!-- / CARD DUE -->\\r\\n\\r\\n        <!-- CARD CHECK ITEMS STATUS -->\\r\\n        <span *ngIf=\\\"card.checkItems\\\"\\r\\n              class=\\\"badge check-items\\\"\\r\\n              [ngClass]=\\\"{'completed': card.checkItemsChecked === card.checkItems}\\\"\\r\\n              fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-icon class=\\\"s-16\\\">check_circle</mat-icon>\\r\\n            <span>{{card.checkItemsChecked}}</span>\\r\\n            <span>/</span>\\r\\n            <span>{{card.checkItems}}</span>\\r\\n        </span>\\r\\n        <!-- / CARD CHECK ITEMS STATUS -->\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- CARD MEMBERS -->\\r\\n    <div *ngIf=\\\"card.idMembers.length > 0\\\"\\r\\n         class=\\\"list-card-members\\\"\\r\\n         fxLayout=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"list-card-member\\\"\\r\\n             *ngFor=\\\"let memberId of card.idMembers\\\">\\r\\n\\r\\n            <img class=\\\"list-card-member-avatar\\\"\\r\\n                 [src]=\\\"board.members | getById:memberId:'avatar'\\\"\\r\\n                 [matTooltip]=\\\"board.members | getById:memberId:'name'\\\">\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- / CARD MEMBERS -->\\r\\n\\r\\n</div>\\r\\n<!-- / CARD DETAILS -->\\r\\n\\r\\n<!-- CARD FOOTER -->\\r\\n<div class=\\\"list-card-footer\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n        <!-- CARD SUBSCRIBE -->\\r\\n        <span *ngIf=\\\"card.subscribed\\\" class=\\\"list-card-footer-item\\\"\\r\\n              fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-icon class=\\\"s-18\\\">remove_red_eye</mat-icon>\\r\\n        </span>\\r\\n        <!-- / CARD SUBSCRIBE -->\\r\\n\\r\\n        <!-- CARD DETAILS -->\\r\\n        <span *ngIf=\\\"card.description !== ''\\\"\\r\\n              class=\\\"list-card-footer-item\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-icon class=\\\"s-18\\\">description</mat-icon>\\r\\n        </span>\\r\\n        <!-- / CARD DETAILS -->\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n\\r\\n        <!-- CARD ATTACHMENT -->\\r\\n        <span *ngIf=\\\"card.attachments\\\"\\r\\n              class=\\\"list-card-footer-item\\\"\\r\\n              fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-icon class=\\\"s-18\\\">attachment</mat-icon>\\r\\n            <span class=\\\"value\\\">{{card.attachments.length}}</span>\\r\\n        </span>\\r\\n        <!-- / CARD ATTACHMENT -->\\r\\n\\r\\n        <!-- CARD COMMENTS -->\\r\\n        <span *ngIf=\\\"card.comments\\\"\\r\\n              class=\\\"list-card-footer-item\\\"\\r\\n              fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-icon class=\\\"s-18\\\">comment</mat-icon>\\r\\n            <span class=\\\"value\\\">{{card.comments.length}}</span>\\r\\n        </span>\\r\\n        <!-- / CARD COMMENTS -->\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n<!-- CARD FOOTER -->\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.scrumboard-board-card {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n  margin: 16px 0 !important;\\n  background-color: white !important;\\n  color: #000;\\n  border-radius: 2px;\\n  transition: box-shadow 150ms ease;\\n  cursor: pointer; }\\n.scrumboard-board-card .list-card-sort-handle {\\n    display: none;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 4px;\\n    background: rgba(255, 255, 255, 0.8); }\\n.scrumboard-board-card .list-card-details {\\n    padding: 16px 16px 0 16px; }\\n.scrumboard-board-card .list-card-details .list-card-labels {\\n      margin-bottom: 6px; }\\n.scrumboard-board-card .list-card-details .list-card-labels .list-card-label {\\n        width: 32px;\\n        height: 6px;\\n        border-radius: 6px;\\n        margin: 0 6px 6px 0; }\\n.scrumboard-board-card .list-card-details .list-card-name {\\n      font-size: 14px;\\n      font-weight: 500;\\n      margin-bottom: 12px; }\\n.scrumboard-board-card .list-card-details .list-card-badges {\\n      margin-bottom: 12px; }\\n.scrumboard-board-card .list-card-details .list-card-badges .badge {\\n        margin-right: 8px;\\n        padding: 4px 8px;\\n        border-radius: 2px;\\n        background-color: rgba(0, 0, 0, 0.4);\\n        color: #FFFFFF; }\\n.scrumboard-board-card .list-card-details .list-card-badges .badge mat-icon {\\n          margin-right: 4px; }\\n.scrumboard-board-card .list-card-details .list-card-badges .badge.due-date {\\n          background-color: #4caf50; }\\n.scrumboard-board-card .list-card-details .list-card-badges .badge.due-date.overdue {\\n            background-color: #f44336; }\\n.scrumboard-board-card .list-card-details .list-card-badges .badge.check-items.completed {\\n          background-color: #4caf50; }\\n.scrumboard-board-card .list-card-details .list-card-members {\\n      margin-bottom: 12px; }\\n.scrumboard-board-card .list-card-details .list-card-members .list-card-member {\\n        margin-right: 8px; }\\n.scrumboard-board-card .list-card-details .list-card-members .list-card-member .list-card-member-avatar {\\n          border-radius: 50%;\\n          width: 32px;\\n          height: 32px; }\\n.scrumboard-board-card .list-card-footer {\\n    border-top: 1px solid rgba(0, 0, 0, 0.12);\\n    padding: 0 16px; }\\n.scrumboard-board-card .list-card-footer .list-card-footer-item {\\n      height: 48px;\\n      margin-right: 12px;\\n      color: rgba(0, 0, 0, 0.66); }\\n.scrumboard-board-card .list-card-footer .list-card-footer-item .value {\\n        padding-left: 8px; }\\n.scrumboard-board-card .list-card-footer .list-card-footer-item:last-of-type {\\n        margin-right: 0; }\\n.scrumboard-board-card .ngx-dnd-content {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none; }\\n.scrumboard-board-card.gu-mirror {\\n    position: fixed !important;\\n    margin: 0 !important;\\n    z-index: 9999 !important;\\n    opacity: 0.8;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\\\";\\n    filter: alpha(opacity=80);\\n    box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n.scrumboard-board-card.gu-hide {\\n    display: none !important; }\\n.scrumboard-board-card.gu-unselectable {\\n    -webkit-user-select: none !important;\\n    -moz-user-select: none !important;\\n    -ms-user-select: none !important;\\n    user-select: none !important; }\\n.scrumboard-board-card.gu-transit {\\n    opacity: 0.2;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)\\\";\\n    filter: alpha(opacity=20); }\\n\"","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-board-card',\r\n    templateUrl  : './card.component.html',\r\n    styleUrls    : ['./card.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrumboardBoardCardComponent implements OnInit\r\n{\r\n    @Input()\r\n    cardId;\r\n\r\n    card: any;\r\n    board: any;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.board = this._activatedRoute.snapshot.data.board;\r\n        this.card = this.board.cards.filter((card) => {\r\n            return this.cardId === card.id;\r\n        })[0];\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Is the card overdue?\r\n     *\r\n     * @param cardDate\r\n     * @returns {boolean}\r\n     */\r\n    isOverdue(cardDate): boolean\r\n    {\r\n        return moment() > moment(new Date(cardDate));\r\n    }\r\n}\r\n","module.exports = \"<div fxFlex=\\\"1 0 auto\\\" *ngIf=\\\"!formActive\\\" class=\\\"list-header-name\\\" (click)=\\\"openForm()\\\">\\r\\n    {{list.name}}\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onFormSubmit()\\\"\\r\\n      class=\\\"list-header-name-form\\\" fxLayout=\\\"row\\\" fxFlex=\\\"1 0 auto\\\"\\r\\n      *ngIf=\\\"formActive\\\">\\r\\n\\r\\n    <input formControlName=\\\"name\\\" #nameInput fxFlex placeholder=\\\"Write a list Name\\\">\\r\\n\\r\\n    <button mat-icon-button fxFlex=\\\"0 1 auto\\\">\\r\\n        <mat-icon>check</mat-icon>\\r\\n    </button>\\r\\n    <button mat-icon-button fxFlex=\\\"0 1 auto\\\" (click)=\\\"closeForm()\\\" type=\\\"button\\\">\\r\\n        <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n</form>\\r\\n\"","module.exports = \":host .list-header-name {\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  font-size: 15px;\\n  font-weight: 500;\\n  cursor: pointer; }\\n\"","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n    selector   : 'scrumboard-board-edit-list-name',\r\n    templateUrl: './edit-list-name.component.html',\r\n    styleUrls  : ['./edit-list-name.component.scss']\r\n})\r\nexport class ScrumboardBoardEditListNameComponent\r\n{\r\n    formActive: boolean;\r\n    form: FormGroup;\r\n\r\n    @Input()\r\n    list;\r\n\r\n    @Output()\r\n    onNameChanged: EventEmitter<any>;\r\n\r\n    @ViewChild('nameInput')\r\n    nameInputField;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.formActive = false;\r\n        this.onNameChanged = new EventEmitter();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Open the form\r\n     */\r\n    openForm(): void\r\n    {\r\n        this.form = this._formBuilder.group({\r\n            name: [this.list.name]\r\n        });\r\n        this.formActive = true;\r\n        this.focusNameField();\r\n    }\r\n\r\n    /**\r\n     * Close the form\r\n     */\r\n    closeForm(): void\r\n    {\r\n        this.formActive = false;\r\n    }\r\n\r\n    /**\r\n     * Focus to the name field\r\n     */\r\n    focusNameField(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.nameInputField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On form submit\r\n     */\r\n    onFormSubmit(): void\r\n    {\r\n        if ( this.form.valid )\r\n        {\r\n            this.list.name = this.form.getRawValue().name;\r\n            this.onNameChanged.next(this.list.name);\r\n            this.formActive = false;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"list mat-elevation-z1\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n    <!-- LIST HEADER -->\\r\\n    <div class=\\\"list-header\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n        <scrumboard-board-edit-list-name\\r\\n            fxFlex=\\\"1 0 auto\\\"\\r\\n            [list]=\\\"list\\\"\\r\\n            (onNameChanged)=\\\"onListNameChanged($event)\\\">\\r\\n        </scrumboard-board-edit-list-name>\\r\\n\\r\\n        <div fxFlex=\\\"0 1 auto\\\">\\r\\n            <button mat-icon-button class=\\\"list-header-option-button\\\" [matMenuTriggerFor]=\\\"listMenu\\\">\\r\\n                <mat-icon>more_vert</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #listMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item (click)=\\\"removeList(list.id)\\\">Remove List</button>\\r\\n            </mat-menu>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- / LIST HEADER -->\\r\\n\\r\\n    <!-- LIST CONTENT -->\\r\\n    <div class=\\\"list-content\\\" fxLayout=\\\"column\\\">\\r\\n\\r\\n        <div class=\\\"list-cards ngx-dnd-container\\\"\\r\\n             [model]=\\\"list.idCards\\\" ngxDroppable=\\\"card\\\" (out)=\\\"onDrop($event)\\\"\\r\\n             fusePerfectScrollbar #listScroll>\\r\\n            <scrumboard-board-card ngxDraggable\\r\\n                                   (click)=\\\"openCardDialog(cardId)\\\"\\r\\n                                   class=\\\"scrumboard-board-card mat-elevation-z2 ngx-dnd-item\\\"\\r\\n                                   *ngFor=\\\"let cardId of list.idCards\\\"\\r\\n                                   [model]=\\\"cardId\\\"\\r\\n                                   [cardId]=\\\"cardId\\\">\\r\\n            </scrumboard-board-card>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- / LIST CONTENT -->\\r\\n\\r\\n    <!-- NEW CARD BUTTON-->\\r\\n    <div class=\\\"list-footer\\\">\\r\\n        <scrumboard-board-add-card (onCardAdd)=\\\"onCardAdd($event)\\\">\\r\\n        </scrumboard-board-add-card>\\r\\n    </div>\\r\\n    <!-- / NEW CARD BUTTON-->\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.scrumboard-board-list {\\n  width: 344px;\\n  min-width: 344px;\\n  max-width: 344px;\\n  padding-right: 24px !important;\\n  height: 100%; }\\n.scrumboard-board-list .list {\\n    max-height: 100%;\\n    background-color: #EEF0F2;\\n    color: #000;\\n    border-radius: 2px;\\n    transition: box-shadow 150ms ease; }\\n.scrumboard-board-list .list .list-header {\\n      height: 64px;\\n      min-height: 64px;\\n      padding: 0 8px 0 16px;\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n@media (max-width: 959px) {\\n        .scrumboard-board-list .list .list-header {\\n          height: 48px;\\n          min-height: 48px; } }\\n.scrumboard-board-list .list .list-content {\\n      position: relative;\\n      min-height: 0;\\n      overflow: hidden;\\n      overflow-y: auto;\\n      -webkit-overflow-scrolling: touch; }\\n.scrumboard-board-list .list .list-content .list-cards {\\n        position: relative;\\n        min-height: 32px;\\n        padding: 0 16px;\\n        background: #eeeeee !important; }\\n.scrumboard-board-list .list .list-footer {\\n      display: flex;\\n      flex-direction: column;\\n      flex: 1 0 auto;\\n      min-height: 48px; }\\n.scrumboard-board-list .ngx-dnd-content {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none; }\\n.scrumboard-board-list.gu-mirror {\\n    position: fixed !important;\\n    margin: 0 !important;\\n    z-index: 9999 !important;\\n    opacity: 0.8;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\\\";\\n    filter: alpha(opacity=80); }\\n.scrumboard-board-list.gu-mirror > .list {\\n      box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n.scrumboard-board-list.gu-hide {\\n    display: none !important; }\\n.scrumboard-board-list.gu-unselectable {\\n    -webkit-user-select: none !important;\\n    -moz-user-select: none !important;\\n    -ms-user-select: none !important;\\n    user-select: none !important; }\\n.scrumboard-board-list.gu-transit {\\n    opacity: 0.2;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)\\\";\\n    filter: alpha(opacity=20); }\\n\"","import { Component, Input, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { FusePerfectScrollbarDirective } from '@fuse/directives/fuse-perfect-scrollbar/fuse-perfect-scrollbar.directive';\r\n\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\nimport { Card } from 'app/main/apps/scrumboard/card.model';\r\nimport { ScrumboardCardDialogComponent } from 'app/main/apps/scrumboard/board/dialogs/card/card.component';\r\n\r\n@Component({\r\n    selector     : 'scrumboard-board-list',\r\n    templateUrl  : './list.component.html',\r\n    styleUrls    : ['./list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrumboardBoardListComponent implements OnInit, OnDestroy\r\n{\r\n    board: any;\r\n    dialogRef: any;\r\n\r\n    @Input()\r\n    list;\r\n\r\n    @ViewChild(FusePerfectScrollbarDirective)\r\n    listScroll: FusePerfectScrollbarDirective;\r\n\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     * @param {ScrumboardService} _scrumboardService\r\n     * @param {MatDialog} _matDialog\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _scrumboardService: ScrumboardService,\r\n        private _matDialog: MatDialog\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._scrumboardService.onBoardChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(board => {\r\n                this.board = board;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On list name changed\r\n     *\r\n     * @param newListName\r\n     */\r\n    onListNameChanged(newListName): void\r\n    {\r\n        this.list.name = newListName;\r\n    }\r\n\r\n    /**\r\n     * On card added\r\n     *\r\n     * @param newCardName\r\n     */\r\n    onCardAdd(newCardName): void\r\n    {\r\n        if ( newCardName === '' )\r\n        {\r\n            return;\r\n        }\r\n\r\n        this._scrumboardService.addCard(this.list.id, new Card({name: newCardName}));\r\n\r\n        setTimeout(() => {\r\n            this.listScroll.scrollToBottom(0, 400);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Remove list\r\n     *\r\n     * @param listId\r\n     */\r\n    removeList(listId): void\r\n    {\r\n        this.confirmDialogRef = this._matDialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete the list and it\\'s all cards?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if ( result )\r\n            {\r\n                this._scrumboardService.removeList(listId);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open card dialog\r\n     *\r\n     * @param cardId\r\n     */\r\n    openCardDialog(cardId): void\r\n    {\r\n        this.dialogRef = this._matDialog.open(ScrumboardCardDialogComponent, {\r\n            panelClass: 'scrumboard-card-dialog',\r\n            data      : {\r\n                cardId: cardId,\r\n                listId: this.list.id\r\n            }\r\n        });\r\n        this.dialogRef.afterClosed()\r\n            .subscribe(response => {\r\n\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On drop\r\n     *\r\n     * @param ev\r\n     */\r\n    onDrop(ev): void\r\n    {\r\n        this._scrumboardService.updateBoard();\r\n    }\r\n}\r\n","module.exports = \"<mat-list class=\\\"colors\\\">\\r\\n    <!-- COLORS -->\\r\\n    <mat-list-item class=\\\"color m-8 mat-elevation-z1\\\"\\r\\n                   [ngClass]=\\\"'mat-'+color.key+'-bg'\\\"\\r\\n                   *ngFor=\\\"let color of (colors | keys)\\\"\\r\\n                   (click)=\\\"setColor(color.key)\\\"\\r\\n                   matRipple>\\r\\n        <p fxFlex>{{color.key}}</p>\\r\\n        <mat-icon class=\\\"s-16\\\" *ngIf=\\\"color.key === board.settings.color\\\">check</mat-icon>\\r\\n        <button mat-icon-button *ngIf=\\\"color.key === board.settings.color\\\" (click)=\\\"$event.stopPropagation();setColor('')\\\">\\r\\n            <mat-icon class=\\\"s-16\\\">delete</mat-icon>\\r\\n        </button>\\r\\n    </mat-list-item>\\r\\n    <!-- / COLORS -->\\r\\n</mat-list>\\r\\n\"","module.exports = \":host .colors .color {\\n  position: relative;\\n  cursor: pointer; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { MatColors } from '@fuse/mat-colors';\r\n\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\n\r\n@Component({\r\n    selector   : 'scrumboard-board-color-selector',\r\n    templateUrl: './board-color-selector.component.html',\r\n    styleUrls  : ['./board-color-selector.component.scss']\r\n})\r\nexport class ScrumboardBoardColorSelectorComponent implements OnInit, OnDestroy\r\n{\r\n    colors: any;\r\n    board: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ScrumboardService} _scrumboardService\r\n     */\r\n    constructor(\r\n        private _scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.colors = MatColors.all;\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._scrumboardService.onBoardChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(board => {\r\n                this.board = board;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Set the color\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color): void\r\n    {\r\n        this.board.settings.color = color;\r\n        this._scrumboardService.updateBoard();\r\n    }\r\n}\r\n","module.exports = \"<div [ngSwitch]=\\\"view\\\" class=\\\"views\\\" (click)=\\\"$event.stopPropagation()\\\">\\r\\n\\r\\n    <div class=\\\"view\\\" *ngSwitchCase=\\\"'main'\\\" [@slideInLeft]>\\r\\n\\r\\n        <!-- SIDENAV HEADER -->\\r\\n        <div class=\\\"header mat-accent-bg px-24\\\" [ngClass]=\\\"'mat-'+board.settings.color+'-bg'\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <div>Settings</div>\\r\\n        </div>\\r\\n        <!-- / SIDENAV HEADER -->\\r\\n\\r\\n        <!-- SIDENAV CONTENT -->\\r\\n        <div class=\\\"content py-16\\\" fusePerfectScrollbar>\\r\\n\\r\\n            <div class=\\\"nav\\\">\\r\\n                <div class=\\\"nav-item\\\">\\r\\n                    <div class=\\\"nav-link\\\" matRipple (click)=\\\"view = 'board-color'\\\">\\r\\n                        <mat-icon class=\\\"nav-link-icon\\\">format_color_fill</mat-icon>\\r\\n                        <p class=\\\"title\\\">Board Color</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"nav-item\\\">\\r\\n                    <div class=\\\"nav-link\\\" matRipple (click)=\\\"toggleCardCover()\\\">\\r\\n                        <mat-icon class=\\\"nav-link-icon\\\">photo</mat-icon>\\r\\n                        <p fxFlex class=\\\"title\\\">Card Cover Images</p>\\r\\n                        <mat-icon *ngIf=\\\"board.settings.cardCoverImages\\\" class=\\\"s-18\\\">check</mat-icon>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"nav-item\\\">\\r\\n                    <div class=\\\"nav-link\\\" matRipple (click)=\\\"toggleSubscription()\\\">\\r\\n                        <mat-icon class=\\\"nav-link-icon\\\">remove_red_eye</mat-icon>\\r\\n                        <p fxFlex class=\\\"title\\\">Subscribe</p>\\r\\n                        <mat-icon *ngIf=\\\"board.settings.subscribed\\\" class=\\\"s-18\\\">check</mat-icon>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"nav-item\\\">\\r\\n                    <div class=\\\"nav-link\\\" matRipple>\\r\\n                        <mat-icon class=\\\"nav-link-icon\\\">content_copy</mat-icon>\\r\\n                        <p class=\\\"title\\\">Copy Board</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"nav-item\\\">\\r\\n                    <div class=\\\"nav-link\\\" matRipple>\\r\\n                        <mat-icon class=\\\"nav-link-icon\\\">delete</mat-icon>\\r\\n                        <p class=\\\"title\\\">Delete Board</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <mat-divider></mat-divider>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- / SIDENAV CONTENT -->\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"view\\\" *ngSwitchCase=\\\"'board-color'\\\" [@slideInRight]>\\r\\n\\r\\n        <!-- SIDENAV HEADER -->\\r\\n        <div class=\\\"header mat-accent-bg px-24\\\" [ngClass]=\\\"'mat-'+board.settings.color+'-bg'\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <div>Background Color</div>\\r\\n            <button mat-icon-button (click)=\\\"view ='main'\\\">\\r\\n                <mat-icon class=\\\"s-16\\\">arrow_back</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n        <!-- / SIDENAV HEADER -->\\r\\n\\r\\n        <!-- SIDENAV CONTENT -->\\r\\n        <div class=\\\"content p-8\\\" fusePerfectScrollbar>\\r\\n            <scrumboard-board-color-selector></scrumboard-board-color-selector>\\r\\n        </div>\\r\\n        <!-- / SIDENAV CONTENT -->\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  display: flex;\\n  flex-direction: column;\\n  flex: 1 0 auto;\\n  height: 100%; }\\n  :host .views {\\n    display: flex;\\n    flex-direction: column;\\n    position: relative;\\n    overflow: hidden;\\n    height: 100%; }\\n  :host .views .view {\\n      position: absolute;\\n      width: 100%;\\n      height: 100%;\\n      bottom: 0;\\n      left: 0;\\n      right: 0;\\n      top: 0;\\n      display: flex;\\n      flex-direction: column; }\\n  :host .views .view > .header {\\n        flex: 0 1 auto;\\n        height: 64px;\\n        min-height: 64px;\\n        border-bottom: 1px solid rgba(0, 0, 0, 0.1); }\\n  :host .views .view > .content {\\n        flex: 1 1 auto;\\n        overflow-y: auto;\\n        -webkit-overflow-scrolling: touch; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector   : 'scrumboard-board-settings',\r\n    templateUrl: './settings.component.html',\r\n    styleUrls  : ['./settings.component.scss'],\r\n    animations : fuseAnimations\r\n})\r\nexport class ScrumboardBoardSettingsSidenavComponent implements OnInit, OnDestroy\r\n{\r\n    board: any;\r\n    view: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    constructor(\r\n        private scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.view = 'main';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.scrumboardService.onBoardChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(board => {\r\n                this.board = board;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Toggle card cover\r\n     */\r\n    toggleCardCover(): void\r\n    {\r\n        this.board.settings.cardCoverImages = !this.board.settings.cardCoverImages;\r\n        this.scrumboardService.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Toggle subscription\r\n     */\r\n    toggleSubscription(): void\r\n    {\r\n        this.board.settings.subscribed = !this.board.settings.subscribed;\r\n        this.scrumboardService.updateBoard();\r\n    }\r\n}\r\n","import { FuseUtils } from '@fuse/utils';\r\n\r\nexport class Card\r\n{\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    idAttachmentCover: string;\r\n    idMembers: string[];\r\n    idLabels: string[];\r\n    attachments: any[];\r\n    subscribed: boolean;\r\n    checklists: any[];\r\n    checkItems: number;\r\n    checkItemsChecked: number;\r\n    comments: any[];\r\n    activities: any[];\r\n    due: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param card\r\n     */\r\n    constructor(card)\r\n    {\r\n        this.id = card.id || FuseUtils.generateGUID();\r\n        this.name = card.name || '';\r\n        this.description = card.description || '';\r\n        this.idAttachmentCover = card.idAttachmentCover || '';\r\n        this.idMembers = card.idMembers || [];\r\n        this.idLabels = card.idLabels || [];\r\n        this.attachments = card.attachments || [];\r\n        this.subscribed = card.subscribed || true;\r\n        this.checklists = card.checklists || [];\r\n        this.checkItems = card.checkItems || 0;\r\n        this.checkItemsChecked = card.checkItemsChecked || 0;\r\n        this.comments = card.comments || [];\r\n        this.activities = card.activities || [];\r\n        this.due = card.due || '';\r\n    }\r\n}\r\n","import { FuseUtils } from '@fuse/utils';\r\n\r\nexport class List\r\n{\r\n    id: string;\r\n    name: string;\r\n    idCards: string[];\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param list\r\n     */\r\n    constructor(list)\r\n    {\r\n        this.id = list.id || FuseUtils.generateGUID();\r\n        this.name = list.name || '';\r\n        this.idCards = [];\r\n    }\r\n}\r\n","module.exports = \"<!-- BOARDS -->\\r\\n<div id=\\\"boards\\\" class=\\\"mat-primary-400-bg\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxFlex fusePerfectScrollbar>\\r\\n\\r\\n    <div class=\\\"header pt-44 pt-mat-88\\\" fxFlex=\\\"0 0 auto\\\" [@animate]=\\\"{value:'*',params:{delay:'100ms'}}\\\">\\r\\n        <h1>Scrumboard App</h1>\\r\\n    </div>\\r\\n\\r\\n    <!-- BOARD LIST -->\\r\\n    <div class=\\\"board-list\\\" fxFlex=\\\"0 0 auto\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\"\\r\\n         [@animateStagger]=\\\"{value:'50'}\\\">\\r\\n\\r\\n        <!-- BOARD -->\\r\\n        <div class=\\\"board-list-item\\\" *ngFor=\\\"let board of boards\\\"\\r\\n             [routerLink]=\\\"'/apps/scrumboard/boards/'+board.id+'/'+board.uri\\\"\\r\\n             fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\"\\r\\n             [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\r\\n            <mat-icon class=\\\"s-64\\\">assessment</mat-icon>\\r\\n            <div class=\\\"board-name\\\">{{board.name}}</div>\\r\\n        </div>\\r\\n        <!-- / BOARD -->\\r\\n\\r\\n        <!-- NEW BOARD BUTTON -->\\r\\n        <div class=\\\"board-list-item add-new-board\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\"\\r\\n             (click)=\\\"newBoard()\\\"\\r\\n             [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\r\\n            <mat-icon class=\\\"s-64\\\">add_circle</mat-icon>\\r\\n            <div class=\\\"board-name\\\">Add new board</div>\\r\\n        </div>\\r\\n        <!-- / NEW BOARD BUTTON -->\\r\\n\\r\\n    </div>\\r\\n    <!-- / BOARD LIST -->\\r\\n</div>\\r\\n<!-- / BOARDS -->\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  min-height: 100%; }\\n:host #boards {\\n    width: 100%;\\n    overflow: auto;\\n    -webkit-overflow-scrolling: touch; }\\n:host #boards .board-list {\\n      padding: 32px 0;\\n      max-height: none !important; }\\n:host #boards .board-list .board-list-item {\\n        min-width: 210px;\\n        width: 210px;\\n        padding: 24px 0;\\n        margin: 16px;\\n        border-radius: 2px;\\n        background: rgba(0, 0, 0, 0.12);\\n        cursor: pointer; }\\n:host #boards .board-list .board-list-item:hover {\\n          box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n:host #boards .board-list .board-list-item .board-name {\\n          padding-top: 16px;\\n          font-weight: 500; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\nimport { Board } from 'app/main/apps/scrumboard/board.model';\r\n\r\n@Component({\r\n    selector   : 'scrumboard',\r\n    templateUrl: './scrumboard.component.html',\r\n    styleUrls  : ['./scrumboard.component.scss'],\r\n    animations : fuseAnimations\r\n})\r\nexport class ScrumboardComponent implements OnInit, OnDestroy\r\n{\r\n    boards: any[];\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {Router} _router\r\n     * @param {ScrumboardService} _scrumboardService\r\n     */\r\n    constructor(\r\n        private  _router: Router,\r\n        private _scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._scrumboardService.onBoardsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(boards => {\r\n                this.boards = boards;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * New board\r\n     */\r\n    newBoard(): void\r\n    {\r\n        const newBoard = new Board({});\r\n        this._scrumboardService.createNewBoard(newBoard).then(() => {\r\n            this._router.navigate(['/apps/scrumboard/boards/' + newBoard.id + '/' + newBoard.uri]);\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatDialogModule, MatFormFieldModule, MatIconModule, MatInputModule, MatListModule, MatMenuModule, MatProgressBarModule, MatRippleModule, MatSidenavModule, MatToolbarModule, MatTooltipModule } from '@angular/material';\r\nimport { NgxDnDModule } from '@swimlane/ngx-dnd';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseConfirmDialogModule, FuseMaterialColorPickerModule } from '@fuse/components';\r\n\r\nimport { BoardResolve, ScrumboardService } from 'app/main/apps/scrumboard/scrumboard.service';\r\nimport { ScrumboardComponent } from 'app/main/apps/scrumboard/scrumboard.component';\r\nimport { ScrumboardBoardComponent } from 'app/main/apps/scrumboard/board/board.component';\r\nimport { ScrumboardBoardListComponent } from 'app/main/apps/scrumboard/board/list/list.component';\r\nimport { ScrumboardBoardCardComponent } from 'app/main/apps/scrumboard/board/list/card/card.component';\r\nimport { ScrumboardBoardEditListNameComponent } from 'app/main/apps/scrumboard/board/list/edit-list-name/edit-list-name.component';\r\nimport { ScrumboardBoardAddCardComponent } from 'app/main/apps/scrumboard/board/list/add-card/add-card.component';\r\nimport { ScrumboardBoardAddListComponent } from 'app/main/apps/scrumboard/board/add-list/add-list.component';\r\nimport { ScrumboardCardDialogComponent } from 'app/main/apps/scrumboard/board/dialogs/card/card.component';\r\nimport { ScrumboardLabelSelectorComponent } from 'app/main/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component';\r\nimport { ScrumboardEditBoardNameComponent } from 'app/main/apps/scrumboard/board/edit-board-name/edit-board-name.component';\r\nimport { ScrumboardBoardSettingsSidenavComponent } from 'app/main/apps/scrumboard/board/sidenavs/settings/settings.component';\r\nimport { ScrumboardBoardColorSelectorComponent } from 'app/main/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : 'boards',\r\n        component: ScrumboardComponent,\r\n        resolve  : {\r\n            scrumboard: ScrumboardService\r\n        }\r\n    },\r\n    {\r\n        path     : 'boards/:boardId/:boardUri',\r\n        component: ScrumboardBoardComponent,\r\n        resolve  : {\r\n            board: BoardResolve\r\n        }\r\n    },\r\n    {\r\n        path      : '**',\r\n        redirectTo: 'boards'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations   : [\r\n        ScrumboardComponent,\r\n        ScrumboardBoardComponent,\r\n        ScrumboardBoardListComponent,\r\n        ScrumboardBoardCardComponent,\r\n        ScrumboardBoardEditListNameComponent,\r\n        ScrumboardBoardAddCardComponent,\r\n        ScrumboardBoardAddListComponent,\r\n        ScrumboardCardDialogComponent,\r\n        ScrumboardLabelSelectorComponent,\r\n        ScrumboardEditBoardNameComponent,\r\n        ScrumboardBoardSettingsSidenavComponent,\r\n        ScrumboardBoardColorSelectorComponent\r\n    ],\r\n    imports        : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatProgressBarModule,\r\n        MatRippleModule,\r\n        MatSidenavModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n\r\n        NgxDnDModule,\r\n\r\n        FuseSharedModule,\r\n        FuseConfirmDialogModule,\r\n        FuseMaterialColorPickerModule\r\n    ],\r\n    providers      : [\r\n        ScrumboardService,\r\n        BoardResolve\r\n    ],\r\n    entryComponents: [ScrumboardCardDialogComponent]\r\n})\r\nexport class ScrumboardModule\r\n{\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ScrumboardService implements Resolve<any>\r\n{\r\n    boards: any[];\r\n    routeParams: any;\r\n    board: any;\r\n\r\n    onBoardsChanged: BehaviorSubject<any>;\r\n    onBoardChanged: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onBoardsChanged = new BehaviorSubject([]);\r\n        this.onBoardChanged = new BehaviorSubject([]);\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        this.routeParams = route.params;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.getBoards()\r\n            ]).then(\r\n                () => {\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get boards\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getBoards(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/scrumboard-boards')\r\n                .subscribe((response: any) => {\r\n                    this.boards = response;\r\n                    this.onBoardsChanged.next(this.boards);\r\n                    resolve(this.boards);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get board\r\n     *\r\n     * @param boardId\r\n     * @returns {Promise<any>}\r\n     */\r\n    getBoard(boardId): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/scrumboard-boards/' + boardId)\r\n                .subscribe((response: any) => {\r\n                    this.board = response;\r\n                    this.onBoardChanged.next(this.board);\r\n                    resolve(this.board);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add card\r\n     *\r\n     * @param listId\r\n     * @param newCard\r\n     * @returns {Promise<any>}\r\n     */\r\n    addCard(listId, newCard): Promise<any>\r\n    {\r\n        this.board.lists.map((list) => {\r\n            if ( list.id === listId )\r\n            {\r\n                return list.idCards.push(newCard.id);\r\n            }\r\n        });\r\n\r\n        this.board.cards.push(newCard);\r\n\r\n        return this.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Add list\r\n     *\r\n     * @param newList\r\n     * @returns {Promise<any>}\r\n     */\r\n    addList(newList): Promise<any>\r\n    {\r\n        this.board.lists.push(newList);\r\n\r\n        return this.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Remove list\r\n     *\r\n     * @param listId\r\n     * @returns {Promise<any>}\r\n     */\r\n    removeList(listId): Promise<any>\r\n    {\r\n        const list = this.board.lists.find((_list) => {\r\n            return _list.id === listId;\r\n        });\r\n\r\n        for ( const cardId of list.idCards )\r\n        {\r\n            this.removeCard(cardId);\r\n        }\r\n\r\n        const index = this.board.lists.indexOf(list);\r\n\r\n        this.board.lists.splice(index, 1);\r\n\r\n        return this.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Remove card\r\n     *\r\n     * @param cardId\r\n     * @param listId\r\n     */\r\n    removeCard(cardId, listId?): void\r\n    {\r\n        const card = this.board.cards.find((_card) => {\r\n            return _card.id === cardId;\r\n        });\r\n\r\n        if ( listId )\r\n        {\r\n            const list = this.board.lists.find((_list) => {\r\n                return listId === _list.id;\r\n            });\r\n            list.idCards.splice(list.idCards.indexOf(cardId), 1);\r\n        }\r\n\r\n        this.board.cards.splice(this.board.cards.indexOf(card), 1);\r\n\r\n        this.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Update board\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateBoard(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.post('api/scrumboard-boards/' + this.board.id, this.board)\r\n                .subscribe(response => {\r\n                    this.onBoardChanged.next(this.board);\r\n                    resolve(this.board);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update card\r\n     *\r\n     * @param newCard\r\n     */\r\n    updateCard(newCard): void\r\n    {\r\n        this.board.cards.map((_card) => {\r\n            if ( _card.id === newCard.id )\r\n            {\r\n                return newCard;\r\n            }\r\n        });\r\n\r\n        this.updateBoard();\r\n    }\r\n\r\n    /**\r\n     * Create new board\r\n     *\r\n     * @param board\r\n     * @returns {Promise<any>}\r\n     */\r\n    createNewBoard(board): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.post('api/scrumboard-boards/' + board.id, board)\r\n                .subscribe(response => {\r\n                    resolve(board);\r\n                }, reject);\r\n        });\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class BoardResolve implements Resolve<any>\r\n{\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ScrumboardService} _scrumboardService\r\n     */\r\n    constructor(\r\n        private _scrumboardService: ScrumboardService\r\n    )\r\n    {\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @returns {Promise<any>}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Promise<any>\r\n    {\r\n        return this._scrumboardService.getBoard(route.paramMap.get('boardId'));\r\n    }\r\n}\r\n"],"sourceRoot":""}