{"version":3,"sources":["webpack:///./src/app/main/apps/contacts/contact-form/contact-form.component.html","webpack:///./src/app/main/apps/contacts/contact-form/contact-form.component.scss","webpack:///./src/app/main/apps/contacts/contact-form/contact-form.component.ts","webpack:///./src/app/main/apps/contacts/contact-list/contact-list.component.html","webpack:///./src/app/main/apps/contacts/contact-list/contact-list.component.scss","webpack:///./src/app/main/apps/contacts/contact-list/contact-list.component.ts","webpack:///./src/app/main/apps/contacts/contact.model.ts","webpack:///./src/app/main/apps/contacts/contacts.component.html","webpack:///./src/app/main/apps/contacts/contacts.component.scss","webpack:///./src/app/main/apps/contacts/contacts.component.ts","webpack:///./src/app/main/apps/contacts/contacts.module.ts","webpack:///./src/app/main/apps/contacts/contacts.service.ts","webpack:///./src/app/main/apps/contacts/selected-bar/selected-bar.component.html","webpack:///./src/app/main/apps/contacts/selected-bar/selected-bar.component.scss","webpack:///./src/app/main/apps/contacts/selected-bar/selected-bar.component.ts","webpack:///./src/app/main/apps/contacts/sidebars/main/main.component.html","webpack:///./src/app/main/apps/contacts/sidebars/main/main.component.scss","webpack:///./src/app/main/apps/contacts/sidebars/main/main.component.ts"],"names":[],"mappings":"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","file":"contacts-contacts-module.js","sourcesContent":["module.exports = \"<div class=\\\"dialog-content-wrapper\\\">\\r\\n    <mat-toolbar matDialogTitle class=\\\"mat-accent m-0\\\">\\r\\n        <mat-toolbar-row fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <span class=\\\"title dialog-title\\\">{{dialogTitle}}</span>\\r\\n            <button mat-icon-button (click)=\\\"matDialogRef.close()\\\" aria-label=\\\"Close dialog\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n            </button>\\r\\n        </mat-toolbar-row>\\r\\n\\r\\n        <mat-toolbar-row class=\\\"toolbar-bottom py-16\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <img [src]=\\\"contact.avatar\\\" class=\\\"avatar contact-avatar huge m-0\\\"\\r\\n                 [alt]=\\\"contact.name\\\"/>\\r\\n            <div class=\\\"contact-name mt-8\\\">{{contact.name}} {{contact.lastName}}</div>\\r\\n        </mat-toolbar-row>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <div mat-dialog-content class=\\\"p-24 m-0\\\" fusePerfectScrollbar>\\r\\n\\r\\n        <form [formGroup]=\\\"contactForm\\\">\\r\\n\\r\\n            <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <mat-icon matPrefix class=\\\"mr-12 s-20 secondary-text\\\">account_circle</mat-icon>\\r\\n                    <input name=\\\"name\\\" formControlName=\\\"name\\\" placeholder=\\\"Name\\\" matInput required>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <mat-icon matPrefix class=\\\"mr-12 s-20 secondary-text\\\">account_circle</mat-icon>\\r\\n                    <input name=\\\"lastName\\\" formControlName=\\\"lastName\\\" placeholder=\\\"Lastname\\\" matInput>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <mat-icon matPrefix class=\\\"mr-12 s-20 secondary-text\\\">star</mat-icon>\\r\\n                    <input name=\\\"nickname\\\" formControlName=\\\"nickname\\\" matInput placeholder=\\\"Nickname\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <mat-icon matPrefix class=\\\"mr-12 s-20 secondary-text\\\">phone</mat-icon>\\r\\n                    <input formControlName=\\\"phone\\\" matInput placeholder=\\\"Phone number\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <mat-icon matPrefix class=\\\"mr-12 s-20 secondary-text\\\">email</mat-icon>\\r\\n                    <input name=\\\"email\\\" formControlName=\\\"email\\\" matInput type=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <mat-icon matPrefix class=\\\"mr-12 s-20 secondary-text\\\">domain</mat-icon>\\r\\n                    <input name=\\\"company\\\" formControlName=\\\"company\\\" matInput placeholder=\\\"Company\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <mat-icon matPrefix class=\\\"mr-12 s-20 secondary-text\\\">work</mat-icon>\\r\\n                    <input name=\\\"jobTitle\\\" formControlName=\\\"jobTitle\\\" matInput placeholder=\\\"Job title\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field class=\\\"mr-24\\\" fxFlex>\\r\\n                    <mat-icon matPrefix class=\\\"mr-12 s-20 secondary-text\\\">cake</mat-icon>\\r\\n                    <input matInput [matDatepicker]=\\\"birthdayDatePicker\\\" placeholder=\\\"Birthday\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"birthdayDatePicker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #birthdayDatePicker></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <mat-icon matPrefix class=\\\"mr-12 s-20 secondary-text\\\">home</mat-icon>\\r\\n                    <input name=\\\"address\\\" formControlName=\\\"address\\\" matInput placeholder=\\\"Address\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" class=\\\"textarea-wrapper\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <mat-form-field fxFlex>\\r\\n                    <textarea name=\\\"notes\\\" formControlName=\\\"notes\\\" placeholder=\\\"Notes\\\" matInput type=\\\"text\\\"\\r\\n                              max-rows=\\\"4\\\"></textarea>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div mat-dialog-actions class=\\\"m-0 p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n        <button *ngIf=\\\"action !=='edit'\\\"\\r\\n                mat-raised-button\\r\\n                (click)=\\\"_matDialogRef.close(contactForm)\\\"\\r\\n                class=\\\"save-button mat-accent\\\"\\r\\n                [disabled]=\\\"contactForm.invalid\\\"\\r\\n                aria-label=\\\"SAVE\\\">\\r\\n            SAVE\\r\\n        </button>\\r\\n\\r\\n        <button *ngIf=\\\"action ==='edit'\\\"\\r\\n                mat-raised-button\\r\\n                (click)=\\\"_matDialogRef.close(['save',contactForm])\\\"\\r\\n                class=\\\"save-button mat-accent\\\"\\r\\n                [disabled]=\\\"contactForm.invalid\\\"\\r\\n                aria-label=\\\"SAVE\\\">\\r\\n            SAVE\\r\\n        </button>\\r\\n\\r\\n        <button *ngIf=\\\"action ==='edit'\\\"\\r\\n                mat-icon-button\\r\\n                (click)=\\\"_matDialogRef.close(['delete',contactForm])\\\"\\r\\n                aria-label=\\\"Delete\\\"\\r\\n                matTooltip=\\\"Delete\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.contact-form-dialog {\\n  width: 400px; }\\n@media screen and (max-width: 599px) {\\n    .contact-form-dialog {\\n      width: 100%; } }\\n.contact-form-dialog .mat-dialog-container {\\n    padding: 0; }\\n.contact-form-dialog .mat-dialog-container .mat-toolbar {\\n      flex: 1 0 auto;\\n      min-height: initial; }\\n.contact-form-dialog .mat-dialog-container .toolbar-bottom {\\n      height: auto; }\\n.contact-form-dialog .dialog-content-wrapper {\\n    max-height: 85vh;\\n    display: flex;\\n    flex-direction: column; }\\n\"","import { Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\n\r\nimport { Contact } from 'app/main/apps/contacts/contact.model';\r\n\r\n@Component({\r\n    selector     : 'contacts-contact-form-dialog',\r\n    templateUrl  : './contact-form.component.html',\r\n    styleUrls    : ['./contact-form.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class ContactsContactFormDialogComponent\r\n{\r\n    action: string;\r\n    contact: Contact;\r\n    contactForm: FormGroup;\r\n    dialogTitle: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {MatDialogRef<ContactsContactFormDialogComponent>} matDialogRef\r\n     * @param _data\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        public matDialogRef: MatDialogRef<ContactsContactFormDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private _data: any,\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.action = _data.action;\r\n\r\n        if ( this.action === 'edit' )\r\n        {\r\n            this.dialogTitle = 'Edit Contact';\r\n            this.contact = _data.contact;\r\n        }\r\n        else\r\n        {\r\n            this.dialogTitle = 'New Contact';\r\n            this.contact = new Contact({});\r\n        }\r\n\r\n        this.contactForm = this.createContactForm();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Create contact form\r\n     *\r\n     * @returns {FormGroup}\r\n     */\r\n    createContactForm(): FormGroup\r\n    {\r\n        return this._formBuilder.group({\r\n            id      : [this.contact.id],\r\n            name    : [this.contact.name],\r\n            lastName: [this.contact.lastName],\r\n            avatar  : [this.contact.avatar],\r\n            nickname: [this.contact.nickname],\r\n            company : [this.contact.company],\r\n            jobTitle: [this.contact.jobTitle],\r\n            email   : [this.contact.email],\r\n            phone   : [this.contact.phone],\r\n            address : [this.contact.address],\r\n            birthday: [this.contact.birthday],\r\n            notes   : [this.contact.notes]\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<mat-table #table [dataSource]=\\\"dataSource\\\"\\r\\n           [@animateStagger]=\\\"{value:'50'}\\\">\\r\\n    <!-- Checkbox Column -->\\r\\n    <ng-container matColumnDef=\\\"checkbox\\\">\\r\\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let contact\\\">\\r\\n            <mat-checkbox [(ngModel)]=\\\"checkboxes[contact.id]\\\" (ngModelChange)=\\\"onSelectedChange(contact.id)\\\"\\r\\n                          (click)=\\\"$event.stopPropagation()\\\">\\r\\n            </mat-checkbox>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Avatar Column -->\\r\\n    <ng-container matColumnDef=\\\"avatar\\\">\\r\\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let contact\\\">\\r\\n            <img class=\\\"avatar\\\" *ngIf=\\\"contact.avatar\\\" [alt]=\\\"contact.name\\\"\\r\\n                 [src]=\\\"contact.avatar\\\"/>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let contact\\\">\\r\\n            <p class=\\\"text-truncate font-weight-600\\\">{{contact.name}} {{contact.lastName}}</p>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Email Column -->\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm>Email</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let contact\\\" fxHide fxShow.gt-sm>\\r\\n            <p class=\\\"email text-truncate\\\">\\r\\n                {{contact.email}}\\r\\n            </p>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Phone Column -->\\r\\n    <ng-container matColumnDef=\\\"phone\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-md>Phone</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let contact\\\" fxHide fxShow.gt-md>\\r\\n            <p class=\\\"phone text-truncate\\\">\\r\\n                {{contact.phone}}\\r\\n            </p>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Job Title Column -->\\r\\n    <ng-container matColumnDef=\\\"jobTitle\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-lg>Job title</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let contact\\\" fxHide fxShow.gt-lg>\\r\\n            <p class=\\\"job-title text-truncate\\\">\\r\\n                {{contact.jobTitle}}\\r\\n            </p>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Company Column -->\\r\\n    <ng-container matColumnDef=\\\"company\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-lg>Company</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let contact\\\" fxHide fxShow.gt-lg>\\r\\n            <p class=\\\"company text-truncate\\\">\\r\\n                {{contact.company}}\\r\\n            </p>\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Buttons Column -->\\r\\n    <ng-container matColumnDef=\\\"buttons\\\">\\r\\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let contact\\\">\\r\\n            <div fxFlex=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n                <button mat-icon-button (click)=\\\"$event.stopPropagation();toggleStar(contact.id)\\\" aria-label=\\\"Toggle star\\\">\\r\\n                    <mat-icon class=\\\"amber-fg\\\" *ngIf=\\\"user.starred.includes(contact.id)\\\">star</mat-icon>\\r\\n                    <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"!user.starred.includes(contact.id)\\\">star_outline</mat-icon>\\r\\n                </button>\\r\\n\\r\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"moreMenu\\\" aria-label=\\\"More\\\"\\r\\n                        (click)=\\\"$event.stopPropagation();\\\">\\r\\n                    <mat-icon class=\\\"secondary-text\\\">more_vert</mat-icon>\\r\\n                </button>\\r\\n\\r\\n                <mat-menu #moreMenu=\\\"matMenu\\\">\\r\\n                    <button mat-menu-item aria-label=\\\"remove\\\" (click)=\\\"deleteContact(contact)\\\">\\r\\n                        <mat-icon>delete</mat-icon>\\r\\n                        <span>Remove</span>\\r\\n                    </button>\\r\\n                </mat-menu>\\r\\n            </div>\\r\\n\\r\\n        </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let contact; columns: displayedColumns;\\\"\\r\\n             class=\\\"contact\\\"\\r\\n             (click)=\\\"editContact(contact)\\\"\\r\\n             [ngClass]=\\\"{'mat-accent-50-bg':checkboxes[contact.id]}\\\"\\r\\n             matRipple\\r\\n             [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\r\\n    </mat-row>\\r\\n</mat-table>\\r\\n\\r\\n\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\ncontacts-contact-list {\\n  display: flex;\\n  flex: 1 1 auto;\\n  width: 100%; }\\ncontacts-contact-list .mat-table {\\n    width: 100%;\\n    background: transparent;\\n    box-shadow: none; }\\ncontacts-contact-list .mat-table .mat-column-checkbox {\\n      flex: 0 1 64px;\\n      padding-left: 18px; }\\ncontacts-contact-list .mat-table .mat-column-avatar {\\n      flex: 0 1 64px; }\\ncontacts-contact-list .mat-table .mat-column-buttons {\\n      flex: 0 1 80px; }\\ncontacts-contact-list .mat-table .mat-row {\\n      position: relative;\\n      cursor: pointer;\\n      padding: 8px; }\\ncontacts-contact-list .mat-table .mat-row .mat-cell {\\n        min-width: 0; }\\ncontacts-contact-list .mat-table .mat-row .mat-cell.mat-column-detail-button {\\n          flex: 0 1 auto;\\n          padding: 0 24px 0 0; }\\n@media screen and (min-width: 1280px) {\\n            contacts-contact-list .mat-table .mat-row .mat-cell.mat-column-detail-button {\\n              display: none; } }\\n#add-contact-button {\\n  position: absolute;\\n  bottom: 12px;\\n  right: 12px;\\n  padding: 0;\\n  z-index: 99; }\\n@media (max-width: 599px) {\\n    #add-contact-button {\\n      position: -webkit-sticky;\\n      position: sticky;\\n      top: calc(100vh - 72px);\\n      bottom: auto; } }\\n\"","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\n\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\nimport { ContactsContactFormDialogComponent } from 'app/main/apps/contacts/contact-form/contact-form.component';\r\n\r\n@Component({\r\n    selector     : 'contacts-contact-list',\r\n    templateUrl  : './contact-list.component.html',\r\n    styleUrls    : ['./contact-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ContactsContactListComponent implements OnInit, OnDestroy\r\n{\r\n    @ViewChild('dialogContent')\r\n    dialogContent: TemplateRef<any>;\r\n\r\n    contacts: any;\r\n    user: any;\r\n    dataSource: FilesDataSource | null;\r\n    displayedColumns = ['checkbox', 'avatar', 'name', 'email', 'phone', 'jobTitle', 'buttons'];\r\n    selectedContacts: any[];\r\n    checkboxes: {};\r\n    dialogRef: any;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     * @param {MatDialog} _matDialog\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService,\r\n        public _matDialog: MatDialog\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.dataSource = new FilesDataSource(this._contactsService);\r\n\r\n        this._contactsService.onContactsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(contacts => {\r\n                this.contacts = contacts;\r\n\r\n                this.checkboxes = {};\r\n                contacts.map(contact => {\r\n                    this.checkboxes[contact.id] = false;\r\n                });\r\n            });\r\n\r\n        this._contactsService.onSelectedContactsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedContacts => {\r\n                for ( const id in this.checkboxes )\r\n                {\r\n                    if ( !this.checkboxes.hasOwnProperty(id) )\r\n                    {\r\n                        continue;\r\n                    }\r\n\r\n                    this.checkboxes[id] = selectedContacts.includes(id);\r\n                }\r\n                this.selectedContacts = selectedContacts;\r\n            });\r\n\r\n        this._contactsService.onUserDataChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(user => {\r\n                this.user = user;\r\n            });\r\n\r\n        this._contactsService.onFilterChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(() => {\r\n                this._contactsService.deselectContacts();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Edit contact\r\n     *\r\n     * @param contact\r\n     */\r\n    editContact(contact): void\r\n    {\r\n        this.dialogRef = this._matDialog.open(ContactsContactFormDialogComponent, {\r\n            panelClass: 'contact-form-dialog',\r\n            data      : {\r\n                contact: contact,\r\n                action : 'edit'\r\n            }\r\n        });\r\n\r\n        this.dialogRef.afterClosed()\r\n            .subscribe(response => {\r\n                if ( !response )\r\n                {\r\n                    return;\r\n                }\r\n                const actionType: string = response[0];\r\n                const formData: FormGroup = response[1];\r\n                switch ( actionType )\r\n                {\r\n                    /**\r\n                     * Save\r\n                     */\r\n                    case 'save':\r\n\r\n                        this._contactsService.updateContact(formData.getRawValue());\r\n\r\n                        break;\r\n                    /**\r\n                     * Delete\r\n                     */\r\n                    case 'delete':\r\n\r\n                        this.deleteContact(contact);\r\n\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Delete Contact\r\n     */\r\n    deleteContact(contact): void\r\n    {\r\n        this.confirmDialogRef = this._matDialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if ( result )\r\n            {\r\n                this._contactsService.deleteContact(contact);\r\n            }\r\n            this.confirmDialogRef = null;\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * On selected change\r\n     *\r\n     * @param contactId\r\n     */\r\n    onSelectedChange(contactId): void\r\n    {\r\n        this._contactsService.toggleSelectedContact(contactId);\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     *\r\n     * @param contactId\r\n     */\r\n    toggleStar(contactId): void\r\n    {\r\n        if ( this.user.starred.includes(contactId) )\r\n        {\r\n            this.user.starred.splice(this.user.starred.indexOf(contactId), 1);\r\n        }\r\n        else\r\n        {\r\n            this.user.starred.push(contactId);\r\n        }\r\n\r\n        this._contactsService.updateUserData(this.user);\r\n    }\r\n}\r\n\r\nexport class FilesDataSource extends DataSource<any>\r\n{\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService\r\n    )\r\n    {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Connect function called by the table to retrieve one stream containing the data to render.\r\n     * @returns {Observable<any[]>}\r\n     */\r\n    connect(): Observable<any[]>\r\n    {\r\n        return this._contactsService.onContactsChanged;\r\n    }\r\n\r\n    /**\r\n     * Disconnect\r\n     */\r\n    disconnect(): void\r\n    {\r\n    }\r\n}\r\n","import { FuseUtils } from '@fuse/utils';\r\n\r\nexport class Contact\r\n{\r\n    id: string;\r\n    name: string;\r\n    lastName: string;\r\n    avatar: string;\r\n    nickname: string;\r\n    company: string;\r\n    jobTitle: string;\r\n    email: string;\r\n    phone: string;\r\n    address: string;\r\n    birthday: string;\r\n    notes: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param contact\r\n     */\r\n    constructor(contact)\r\n    {\r\n        {\r\n            this.id = contact.id || FuseUtils.generateGUID();\r\n            this.name = contact.name || '';\r\n            this.lastName = contact.lastName || '';\r\n            this.avatar = contact.avatar || 'assets/images/avatars/profile.jpg';\r\n            this.nickname = contact.nickname || '';\r\n            this.company = contact.company || '';\r\n            this.jobTitle = contact.jobTitle || '';\r\n            this.email = contact.email || '';\r\n            this.phone = contact.phone || '';\r\n            this.address = contact.address || '';\r\n            this.birthday = contact.birhday || '';\r\n            this.notes = contact.notes || '';\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"contacts\\\" class=\\\"page-layout simple left-sidebar inner-sidebar inner-scroll\\\">\\r\\n\\r\\n    <!-- HEADER -->\\r\\n    <div class=\\\"header mat-accent-bg p-16 p-sm-24\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\"\\r\\n         fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\r\\n\\r\\n        <!-- APP TITLE -->\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n            <button mat-icon-button class=\\\"sidebar-toggle mr-12\\\" fxHide.gt-md\\r\\n                    (click)=\\\"toggleSidebar('contacts-main-sidebar')\\\">\\r\\n                <mat-icon>menu</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <div class=\\\"logo\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                <mat-icon class=\\\"logo-icon mr-16\\\"\\r\\n                          [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">account_box\\r\\n                </mat-icon>\\r\\n                <span class=\\\"logo-text h1\\\" [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">\\r\\n                    Contacts\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- / APP TITLE -->\\r\\n\\r\\n        <!-- SEARCH -->\\r\\n        <div class=\\\"search-input-wrapper mt-16 ml-8 m-sm-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <label for=\\\"search\\\" class=\\\"mr-8\\\">\\r\\n                <mat-icon>search</mat-icon>\\r\\n            </label>\\r\\n            <mat-form-field mat-no-float class=\\\"m-0\\\" floatLabel=\\\"never\\\">\\r\\n                <input matInput [formControl]=\\\"searchInput\\\" id=\\\"search\\\" placeholder=\\\"Search for anything\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <!-- / SEARCH -->\\r\\n\\r\\n    </div>\\r\\n    <!-- / HEADER -->\\r\\n\\r\\n    <!-- SELECTED BAR -->\\r\\n    <selected-bar class=\\\"mat-accent-600-bg\\\" *ngIf=\\\"hasSelectedContacts\\\" [@slideInTop]></selected-bar>\\r\\n    <!-- / SELECTED BAR -->\\r\\n\\r\\n    <!-- CONTENT -->\\r\\n    <div class=\\\"content\\\">\\r\\n\\r\\n        <!-- SIDEBAR -->\\r\\n        <fuse-sidebar class=\\\"sidebar\\\" name=\\\"contacts-main-sidebar\\\" position=\\\"left\\\" lockedOpen=\\\"gt-sm\\\">\\r\\n\\r\\n            <!-- SIDEBAR CONTENT -->\\r\\n            <div class=\\\"content\\\" fusePerfectScrollbar>\\r\\n                <contacts-main-sidebar [@animate]=\\\"{value:'*'}\\\"></contacts-main-sidebar>\\r\\n            </div>\\r\\n            <!-- / SIDEBAR CONTENT -->\\r\\n\\r\\n        </fuse-sidebar>\\r\\n        <!-- / SIDEBAR -->\\r\\n\\r\\n        <!-- CENTER -->\\r\\n        <div class=\\\"center p-24 pb-56 pr-sm-92\\\" fusePerfectScrollbar>\\r\\n\\r\\n            <!-- CONTENT -->\\r\\n            <div class=\\\"content mat-white-bg mat-elevation-z4\\\">\\r\\n                <contacts-contact-list></contacts-contact-list>\\r\\n            </div>\\r\\n            <!-- / CONTENT -->\\r\\n\\r\\n        </div>\\r\\n        <!-- / CENTER -->\\r\\n\\r\\n    </div>\\r\\n    <!-- / CONTENT-->\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- ADD CONTACT BUTTON -->\\r\\n<button mat-fab class=\\\"mat-accent-bg\\\" id=\\\"add-contact-button\\\" (click)=\\\"newContact()\\\" aria-label=\\\"add contact\\\"\\r\\n        [@animate]=\\\"{value:'*', params:{delay:'300ms',scale:'.2'}}\\\">\\r\\n    <mat-icon>person_add</mat-icon>\\r\\n</button>\\r\\n<!-- / ADD CONTACT BUTTON -->\\r\\n\"","module.exports = \"#contacts .content {\\n  overflow: hidden; }\\n  #contacts .content .sidebar:not(.locked-open) {\\n    background: white; }\\n\"","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\r\n\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\nimport { ContactsContactFormDialogComponent } from 'app/main/apps/contacts/contact-form/contact-form.component';\r\n\r\n@Component({\r\n    selector     : 'contacts',\r\n    templateUrl  : './contacts.component.html',\r\n    styleUrls    : ['./contacts.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ContactsComponent implements OnInit, OnDestroy\r\n{\r\n    dialogRef: any;\r\n    hasSelectedContacts: boolean;\r\n    searchInput: FormControl;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     * @param {FuseSidebarService} _fuseSidebarService\r\n     * @param {MatDialog} _matDialog\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService,\r\n        private _fuseSidebarService: FuseSidebarService,\r\n        private _matDialog: MatDialog\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.searchInput = new FormControl('');\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._contactsService.onSelectedContactsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedContacts => {\r\n                this.hasSelectedContacts = selectedContacts.length > 0;\r\n            });\r\n\r\n        this.searchInput.valueChanges\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(300),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(searchText => {\r\n                this._contactsService.onSearchTextChanged.next(searchText);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * New contact\r\n     */\r\n    newContact(): void\r\n    {\r\n        this.dialogRef = this._matDialog.open(ContactsContactFormDialogComponent, {\r\n            panelClass: 'contact-form-dialog',\r\n            data      : {\r\n                action: 'new'\r\n            }\r\n        });\r\n\r\n        this.dialogRef.afterClosed()\r\n            .subscribe((response: FormGroup) => {\r\n                if ( !response )\r\n                {\r\n                    return;\r\n                }\r\n\r\n                this._contactsService.updateContact(response.getRawValue());\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Toggle the sidebar\r\n     *\r\n     * @param name\r\n     */\r\n    toggleSidebar(name): void\r\n    {\r\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule, MatCheckboxModule, MatDatepickerModule, MatFormFieldModule, MatIconModule, MatInputModule, MatMenuModule, MatRippleModule, MatTableModule, MatToolbarModule } from '@angular/material';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseConfirmDialogModule, FuseSidebarModule } from '@fuse/components';\r\n\r\nimport { ContactsComponent } from 'app/main/apps/contacts/contacts.component';\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\nimport { ContactsContactListComponent } from 'app/main/apps/contacts/contact-list/contact-list.component';\r\nimport { ContactsSelectedBarComponent } from 'app/main/apps/contacts/selected-bar/selected-bar.component';\r\nimport { ContactsMainSidebarComponent } from 'app/main/apps/contacts/sidebars/main/main.component';\r\nimport { ContactsContactFormDialogComponent } from 'app/main/apps/contacts/contact-form/contact-form.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : '**',\r\n        component: ContactsComponent,\r\n        resolve  : {\r\n            contacts: ContactsService\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations   : [\r\n        ContactsComponent,\r\n        ContactsContactListComponent,\r\n        ContactsSelectedBarComponent,\r\n        ContactsMainSidebarComponent,\r\n        ContactsContactFormDialogComponent\r\n    ],\r\n    imports        : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatRippleModule,\r\n        MatTableModule,\r\n        MatToolbarModule,\r\n\r\n        FuseSharedModule,\r\n        FuseConfirmDialogModule,\r\n        FuseSidebarModule\r\n    ],\r\n    providers      : [\r\n        ContactsService\r\n    ],\r\n    entryComponents: [\r\n        ContactsContactFormDialogComponent\r\n    ]\r\n})\r\nexport class ContactsModule\r\n{\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { Contact } from 'app/main/apps/contacts/contact.model';\r\n\r\n@Injectable()\r\nexport class ContactsService implements Resolve<any>\r\n{\r\n    onContactsChanged: BehaviorSubject<any>;\r\n    onSelectedContactsChanged: BehaviorSubject<any>;\r\n    onUserDataChanged: BehaviorSubject<any>;\r\n    onSearchTextChanged: Subject<any>;\r\n    onFilterChanged: Subject<any>;\r\n\r\n    contacts: Contact[];\r\n    user: any;\r\n    selectedContacts: string[] = [];\r\n\r\n    searchText: string;\r\n    filterBy: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onContactsChanged = new BehaviorSubject([]);\r\n        this.onSelectedContactsChanged = new BehaviorSubject([]);\r\n        this.onUserDataChanged = new BehaviorSubject([]);\r\n        this.onSearchTextChanged = new Subject();\r\n        this.onFilterChanged = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getContacts(),\r\n                this.getUserData()\r\n            ]).then(\r\n                ([files]) => {\r\n\r\n                    this.onSearchTextChanged.subscribe(searchText => {\r\n                        this.searchText = searchText;\r\n                        this.getContacts();\r\n                    });\r\n\r\n                    this.onFilterChanged.subscribe(filter => {\r\n                        this.filterBy = filter;\r\n                        this.getContacts();\r\n                    });\r\n\r\n                    resolve();\r\n\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get contacts\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getContacts(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n                this._httpClient.get('api/contacts-contacts')\r\n                    .subscribe((response: any) => {\r\n\r\n                        this.contacts = response;\r\n\r\n                        if ( this.filterBy === 'starred' )\r\n                        {\r\n                            this.contacts = this.contacts.filter(_contact => {\r\n                                return this.user.starred.includes(_contact.id);\r\n                            });\r\n                        }\r\n\r\n                        if ( this.filterBy === 'frequent' )\r\n                        {\r\n                            this.contacts = this.contacts.filter(_contact => {\r\n                                return this.user.frequentContacts.includes(_contact.id);\r\n                            });\r\n                        }\r\n\r\n                        if ( this.searchText && this.searchText !== '' )\r\n                        {\r\n                            this.contacts = FuseUtils.filterArrayByString(this.contacts, this.searchText);\r\n                        }\r\n\r\n                        this.contacts = this.contacts.map(contact => {\r\n                            return new Contact(contact);\r\n                        });\r\n\r\n                        this.onContactsChanged.next(this.contacts);\r\n                        resolve(this.contacts);\r\n                    }, reject);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get user data\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getUserData(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n                this._httpClient.get('api/contacts-user/5725a6802d10e277a0f35724')\r\n                    .subscribe((response: any) => {\r\n                        this.user = response;\r\n                        this.onUserDataChanged.next(this.user);\r\n                        resolve(this.user);\r\n                    }, reject);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Toggle selected contact by id\r\n     *\r\n     * @param id\r\n     */\r\n    toggleSelectedContact(id): void\r\n    {\r\n        // First, check if we already have that contact as selected...\r\n        if ( this.selectedContacts.length > 0 )\r\n        {\r\n            const index = this.selectedContacts.indexOf(id);\r\n\r\n            if ( index !== -1 )\r\n            {\r\n                this.selectedContacts.splice(index, 1);\r\n\r\n                // Trigger the next event\r\n                this.onSelectedContactsChanged.next(this.selectedContacts);\r\n\r\n                // Return\r\n                return;\r\n            }\r\n        }\r\n\r\n        // If we don't have it, push as selected\r\n        this.selectedContacts.push(id);\r\n\r\n        // Trigger the next event\r\n        this.onSelectedContactsChanged.next(this.selectedContacts);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        if ( this.selectedContacts.length > 0 )\r\n        {\r\n            this.deselectContacts();\r\n        }\r\n        else\r\n        {\r\n            this.selectContacts();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select contacts\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectContacts(filterParameter?, filterValue?): void\r\n    {\r\n        this.selectedContacts = [];\r\n\r\n        // If there is no filter, select all contacts\r\n        if ( filterParameter === undefined || filterValue === undefined )\r\n        {\r\n            this.selectedContacts = [];\r\n            this.contacts.map(contact => {\r\n                this.selectedContacts.push(contact.id);\r\n            });\r\n        }\r\n\r\n        // Trigger the next event\r\n        this.onSelectedContactsChanged.next(this.selectedContacts);\r\n    }\r\n\r\n    /**\r\n     * Update contact\r\n     *\r\n     * @param contact\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateContact(contact): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.post('api/contacts-contacts/' + contact.id, {...contact})\r\n                .subscribe(response => {\r\n                    this.getContacts();\r\n                    resolve(response);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update user data\r\n     *\r\n     * @param userData\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateUserData(userData): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.post('api/contacts-user/' + this.user.id, {...userData})\r\n                .subscribe(response => {\r\n                    this.getUserData();\r\n                    this.getContacts();\r\n                    resolve(response);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Deselect contacts\r\n     */\r\n    deselectContacts(): void\r\n    {\r\n        this.selectedContacts = [];\r\n\r\n        // Trigger the next event\r\n        this.onSelectedContactsChanged.next(this.selectedContacts);\r\n    }\r\n\r\n    /**\r\n     * Delete contact\r\n     *\r\n     * @param contact\r\n     */\r\n    deleteContact(contact): void\r\n    {\r\n        const contactIndex = this.contacts.indexOf(contact);\r\n        this.contacts.splice(contactIndex, 1);\r\n        this.onContactsChanged.next(this.contacts);\r\n    }\r\n\r\n    /**\r\n     * Delete selected contacts\r\n     */\r\n    deleteSelectedContacts(): void\r\n    {\r\n        for ( const contactId of this.selectedContacts )\r\n        {\r\n            const contact = this.contacts.find(_contact => {\r\n                return _contact.id === contactId;\r\n            });\r\n            const contactIndex = this.contacts.indexOf(contact);\r\n            this.contacts.splice(contactIndex, 1);\r\n        }\r\n        this.onContactsChanged.next(this.contacts);\r\n        this.deselectContacts();\r\n    }\r\n\r\n}\r\n","module.exports = \"<div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"p-24\\\">\\r\\n\\r\\n    <div class=\\\"close-button-wrapper\\\" fxFlex=\\\"0 1 auto\\\" fxFlex.gt-sm=\\\"220px\\\" (click)=\\\"deselectAll()\\\">\\r\\n        <button class=\\\"p-8\\\" mat-button fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <mat-icon class=\\\"mr-8\\\">arrow_back</mat-icon>\\r\\n            <span class=\\\"text-uppercase\\\">Back</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutAlign.gt-sm=\\\"space-between center\\\">\\r\\n\\r\\n        <div>\\r\\n            <span class=\\\"selected-contacts-count\\\">\\r\\n                <span class=\\\"mr-4\\\">{{selectedContacts.length}}</span>\\r\\n                <span>selected</span>\\r\\n            </span>\\r\\n\\r\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"selectMenu\\\">\\r\\n                <mat-icon>arrow_drop_down</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #selectMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item (click)=\\\"selectAll()\\\">Select all</button>\\r\\n                <button mat-menu-item (click)=\\\"deselectAll()\\\">Deselect all</button>\\r\\n            </mat-menu>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"multi-select-actions\\\">\\r\\n            <button mat-icon-button (click)=\\\"deleteSelectedContacts()\\\" aria-label=\\\"delete selected\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  flex: 1;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  height: 120px;\\n  z-index: 99; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\n\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\n\r\n@Component({\r\n    selector   : 'selected-bar',\r\n    templateUrl: './selected-bar.component.html',\r\n    styleUrls  : ['./selected-bar.component.scss']\r\n})\r\nexport class ContactsSelectedBarComponent implements OnInit, OnDestroy\r\n{\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    hasSelectedContacts: boolean;\r\n    isIndeterminate: boolean;\r\n    selectedContacts: string[];\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     * @param {MatDialog} _matDialog\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService,\r\n        public _matDialog: MatDialog\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._contactsService.onSelectedContactsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedContacts => {\r\n                this.selectedContacts = selectedContacts;\r\n                setTimeout(() => {\r\n                    this.hasSelectedContacts = selectedContacts.length > 0;\r\n                    this.isIndeterminate = (selectedContacts.length !== this._contactsService.contacts.length && selectedContacts.length > 0);\r\n                }, 0);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Select all\r\n     */\r\n    selectAll(): void\r\n    {\r\n        this._contactsService.selectContacts();\r\n    }\r\n\r\n    /**\r\n     * Deselect all\r\n     */\r\n    deselectAll(): void\r\n    {\r\n        this._contactsService.deselectContacts();\r\n    }\r\n\r\n    /**\r\n     * Delete selected contacts\r\n     */\r\n    deleteSelectedContacts(): void\r\n    {\r\n        this.confirmDialogRef = this._matDialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete all selected contacts?';\r\n\r\n        this.confirmDialogRef.afterClosed()\r\n            .subscribe(result => {\r\n                if ( result )\r\n                {\r\n                    this._contactsService.deleteSelectedContacts();\r\n                }\r\n                this.confirmDialogRef = null;\r\n            });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"sidebar-content\\\">\\r\\n\\r\\n    <div class=\\\"card mat-white-bg\\\">\\r\\n\\r\\n        <!-- SIDEBAR HEADER -->\\r\\n        <div class=\\\"header p-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n            <!-- USER -->\\r\\n            <img [src]=\\\"user.avatar\\\" class=\\\"avatar mr-16\\\" [alt]=\\\"user.name\\\"/>\\r\\n            <span class=\\\"h5\\\">{{user.name}}</span>\\r\\n            <!-- / USER -->\\r\\n\\r\\n        </div>\\r\\n        <!-- / SIDEBAR HEADER -->\\r\\n\\r\\n        <!-- SIDEBAR CONTENT -->\\r\\n        <div class=\\\"content py-16\\\" fusePerfectScrollbar>\\r\\n\\r\\n            <div class=\\\"nav\\\">\\r\\n\\r\\n                <div class=\\\"nav-item\\\" aria-label=\\\"inbox\\\">\\r\\n                    <a class=\\\"nav-link\\\" matRipple (click)=\\\"changeFilter('all')\\\"\\r\\n                       [ngClass]=\\\"{'active mat-accent-bg':filterBy ==='all'}\\\">\\r\\n                        <span class=\\\"title\\\">All Contacts</span>\\r\\n                    </a>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"nav-item\\\" aria-label=\\\"frequently contacted\\\" (click)=\\\"changeFilter('frequent')\\\">\\r\\n                    <a class=\\\"nav-link\\\" matRipple [ngClass]=\\\"{'active mat-accent-bg':filterBy ==='frequent'}\\\">\\r\\n                        <div class=\\\"title\\\">Freequently contacted</div>\\r\\n                    </a>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"nav-item\\\" aria-label=\\\"starred\\\" (click)=\\\"changeFilter('starred')\\\">\\r\\n                    <a class=\\\"nav-link\\\" matRipple [ngClass]=\\\"{'active mat-accent-bg':filterBy ==='starred'}\\\">\\r\\n                        <div class=\\\"title\\\">Starred Contacts</div>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n<!-- / SIDEBAR CONTENT -->\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  display: flex;\\n  flex-direction: column;\\n  flex: 1 0 auto;\\n  height: 100%; }\\n:host .sidebar-content {\\n    display: flex;\\n    flex-direction: column;\\n    padding: 0; }\\n@media screen and (min-width: 960px) {\\n      :host .sidebar-content {\\n        padding: 24px 4px 24px 24px; } }\\n:host .sidebar-content .card {\\n      display: flex;\\n      flex-direction: column;\\n      flex: 0 1 auto;\\n      padding: 0; }\\n@media screen and (min-width: 960px) {\\n        :host .sidebar-content .card {\\n          box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); } }\\n:host .sidebar-content .card > .header {\\n        flex: 0 1 auto;\\n        border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n:host .sidebar-content .card > .content {\\n        flex: 0 1 auto; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\n\r\n@Component({\r\n    selector   : 'contacts-main-sidebar',\r\n    templateUrl: './main.component.html',\r\n    styleUrls  : ['./main.component.scss']\r\n})\r\nexport class ContactsMainSidebarComponent implements OnInit, OnDestroy\r\n{\r\n    user: any;\r\n    filterBy: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.filterBy = this._contactsService.filterBy || 'all';\r\n\r\n        this._contactsService.onUserDataChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(user => {\r\n                this.user = user;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy()\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Change the filter\r\n     *\r\n     * @param filter\r\n     */\r\n    changeFilter(filter): void\r\n    {\r\n        this.filterBy = filter;\r\n        this._contactsService.onFilterChanged.next(this.filterBy);\r\n    }\r\n}\r\n"],"sourceRoot":""}