{"version":3,"sources":["webpack:///./src/app/main/apps/todo/sidebars/main/main-sidebar.component.html","webpack:///./src/app/main/apps/todo/sidebars/main/main-sidebar.component.scss","webpack:///./src/app/main/apps/todo/sidebars/main/main-sidebar.component.ts","webpack:///./src/app/main/apps/todo/todo-details/todo-details.component.html","webpack:///./src/app/main/apps/todo/todo-details/todo-details.component.scss","webpack:///./src/app/main/apps/todo/todo-details/todo-details.component.ts","webpack:///./src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.html","webpack:///./src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.scss","webpack:///./src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.ts","webpack:///./src/app/main/apps/todo/todo-list/todo-list.component.html","webpack:///./src/app/main/apps/todo/todo-list/todo-list.component.scss","webpack:///./src/app/main/apps/todo/todo-list/todo-list.component.ts","webpack:///./src/app/main/apps/todo/todo.component.html","webpack:///./src/app/main/apps/todo/todo.component.scss","webpack:///./src/app/main/apps/todo/todo.component.ts","webpack:///./src/app/main/apps/todo/todo.model.ts","webpack:///./src/app/main/apps/todo/todo.module.ts","webpack:///./src/app/main/apps/todo/todo.service.ts"],"names":[],"mappings":"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","file":"todo-todo-module.js","sourcesContent":["module.exports = \"<!-- SIDEBAR HEADER -->\\r\\n<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between start\\\"\\r\\n     class=\\\"header mat-accent-bg p-24 pb-4\\\">\\r\\n    <div class=\\\"logo\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n        <mat-icon class=\\\"logo-icon s-32\\\" [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">\\r\\n            check_box\\r\\n        </mat-icon>\\r\\n        <span class=\\\"logo-text\\\" [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">To-Do</span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"account\\\" fxLayout=\\\"column\\\" [@animate]=\\\"{value:'*',params:{delay:'300ms'}}\\\">\\r\\n        <div class=\\\"title\\\">John Doe</div>\\r\\n        <mat-form-field floatLabel=\\\"never\\\">\\r\\n            <mat-select class=\\\"account-selection\\\" placeholder=\\\"Todo Selection\\\"\\r\\n                        [ngModel]=\\\"selectedAccount\\\">\\r\\n                <mat-option *ngFor=\\\"let account of (accounts | keys)\\\" [value]=\\\"account.key\\\">\\r\\n                    {{account.value}}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n<!-- / SIDEBAR HEADER -->\\r\\n\\r\\n<!-- SIDEBAR CONTENT -->\\r\\n<div class=\\\"content\\\" fusePerfectScrollbar [@animate]=\\\"{value:'*',params:{y:'50px'}}\\\">\\r\\n\\r\\n    <div class=\\\"p-24\\\">\\r\\n        <button mat-raised-button\\r\\n                class=\\\"mat-accent add-todo-button w-100-p\\\"\\r\\n                (click)=\\\"newTodo()\\\"\\r\\n                aria-label=\\\"ADD TASK\\\">\\r\\n            ADD TASK\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"nav\\\">\\r\\n\\r\\n        <div class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" matRipple [routerLink]=\\\"'/apps/todo/all'\\\"\\r\\n               [routerLinkActive]=\\\"['active', 'mat-accent-bg']\\\">\\r\\n                <mat-icon class=\\\"nav-link-icon\\\">view_headline</mat-icon>\\r\\n                <span>All</span>\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"nav-subheader\\\">FILTERS</div>\\r\\n\\r\\n        <div class=\\\"nav-item\\\" *ngFor=\\\"let filter of filters\\\">\\r\\n            <a class=\\\"nav-link\\\" matRipple [routerLink]=\\\"'/apps/todo/filter/' + filter.handle\\\"\\r\\n               [routerLinkActive]=\\\"['active', 'mat-accent-bg']\\\">\\r\\n                <mat-icon class=\\\"nav-link-icon\\\" *ngIf=\\\"filter.icon\\\">{{filter.icon}}</mat-icon>\\r\\n                <span>{{filter.title}}</span>\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"nav-subheader\\\">TAGS</div>\\r\\n\\r\\n        <div class=\\\"nav-item\\\" *ngFor=\\\"let tag of tags\\\">\\r\\n            <a class=\\\"nav-link\\\" matRipple [routerLink]=\\\"'/apps/todo/tag/' + tag.handle\\\"\\r\\n               [routerLinkActive]=\\\"['active', 'mat-accent-bg']\\\">\\r\\n                <mat-icon class=\\\"nav-link-icon\\\" [ngStyle]=\\\"{'color':tag.color}\\\">label</mat-icon>\\r\\n                <span>{{tag.title}}</span>\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n<!-- / SIDEBAR CONTENT -->\\r\\n\"","module.exports = \":host {\\n  display: flex;\\n  flex: 1 0 auto;\\n  flex-direction: column;\\n  height: 100%; }\\n  :host .header .logo .logo-icon {\\n    margin: 0 16px 0 0; }\\n  :host .header .logo .logo-text {\\n    font-size: 24px;\\n    line-height: 24px; }\\n  :host .header .account {\\n    width: 100%; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\n\r\n@Component({\r\n    selector   : 'todo-main-sidebar',\r\n    templateUrl: './main-sidebar.component.html',\r\n    styleUrls  : ['./main-sidebar.component.scss'],\r\n    animations : fuseAnimations\r\n})\r\nexport class TodoMainSidebarComponent implements OnInit, OnDestroy\r\n{\r\n    folders: any[];\r\n    filters: any[];\r\n    tags: any[];\r\n    accounts: object;\r\n    selectedAccount: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TodoService} _todoService\r\n     * @param {Router} _router\r\n     */\r\n    constructor(\r\n        private _todoService: TodoService,\r\n        private _router: Router\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.accounts = {\r\n            'creapond'    : 'johndoe@creapond.com',\r\n            'withinpixels': 'johndoe@withinpixels.com'\r\n        };\r\n        this.selectedAccount = 'creapond';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._todoService.onFiltersChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(filters => {\r\n                this.filters = filters;\r\n            });\r\n\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(tags => {\r\n                this.tags = tags;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * New todo\r\n     */\r\n    newTodo(): void\r\n    {\r\n        this._router.navigate(['/apps/todo/all']).then(() => {\r\n            setTimeout(() => {\r\n                this._todoService.onNewTodoClicked.next('');\r\n            });\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"!todo\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlex>\\r\\n    <mat-icon class=\\\"s-120 mb-12 select-todo-icon hint-text\\\"\\r\\n              [@animate]=\\\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\\\">check_box\\r\\n    </mat-icon>\\r\\n    <span class=\\\"hint-text mat-h1 select-todo-text\\\" [@animate]=\\\"{value:'*',params:{delay:'400ms'}}\\\">\\r\\n        Select a todo\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"todo\\\">\\r\\n\\r\\n    <div class=\\\"todo-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n        <button mat-button class=\\\"toggle-complete-button\\\" (click)=\\\"toggleCompleted($event)\\\"\\r\\n                aria-label=\\\"Toggle completed\\\" fxFlex=\\\"0 1 auto\\\">\\r\\n            <mat-icon *ngIf=\\\"todo.completed\\\">check_box</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!todo.completed\\\">check_box_outline_blank</mat-icon>\\r\\n            <span class=\\\"ml-8\\\">Mark as Done</span>\\r\\n        </button>\\r\\n\\r\\n        <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n            <button mat-icon-button (click)=\\\"toggleImportant($event)\\\" aria-label=\\\"Toggle important\\\">\\r\\n                <mat-icon class=\\\"red-fg\\\" *ngIf=\\\"todo.important\\\">error</mat-icon>\\r\\n                <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"!todo.important\\\">error_outline</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button (click)=\\\"toggleStar($event)\\\" aria-label=\\\"Toggle star\\\">\\r\\n                <mat-icon class=\\\"amber-fg\\\" *ngIf=\\\"todo.starred\\\">star</mat-icon>\\r\\n                <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"!todo.starred\\\">star_outline</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"labelMenu\\\" fxFlex=\\\"0 1 auto\\\">\\r\\n                <mat-icon class=\\\"secondary-text\\\">label</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <mat-menu #labelMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item *ngFor=\\\"let tag of tags\\\"\\r\\n                        (click)=\\\"toggleTagOnTodo(tag.id)\\\">\\r\\n                    <mat-icon *ngIf=\\\"hasTag(tag.id)\\\">check</mat-icon>\\r\\n                    <mat-icon *ngIf=\\\"!hasTag(tag.id)\\\"></mat-icon>\\r\\n                    <span>{{tag.title}}</span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n\\r\\n            <button mat-icon-button (click)=\\\"toggleDeleted($event)\\\" aria-label=\\\"Toggle delete\\\">\\r\\n                <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"todo.deleted\\\">delete_forever</mat-icon>\\r\\n                <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"!todo.deleted\\\">delete</mat-icon>\\r\\n            </button>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"todo-content\\\">\\r\\n\\r\\n        <form [formGroup]=\\\"todoForm\\\" (submit)=\\\"addTodo()\\\">\\r\\n\\r\\n            <mat-form-field class=\\\"title mt-8\\\" floatLabel=\\\"never\\\" fxFill>\\r\\n                <textarea matInput\\r\\n                          #titleInput\\r\\n                          name=\\\"title\\\"\\r\\n                          formControlName=\\\"title\\\"\\r\\n                          placeholder=\\\"Title\\\"\\r\\n                          required>\\r\\n                </textarea>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div class=\\\"tags mb-24\\\" fxFlexFill fxLayout=\\\"row wrap\\\">\\r\\n                <div class=\\\"tag\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" *ngFor=\\\"let tagId of todo.tags\\\">\\r\\n\\r\\n                    <div class=\\\"tag-color\\\" [ngStyle]=\\\"{'background-color': tags | getById:tagId:'color'}\\\"></div>\\r\\n\\r\\n                    <div class=\\\"tag-label\\\">{{tags | getById:tagId:'title'}}</div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"dates\\\" fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\r\\n\\r\\n                <mat-form-field class=\\\"mr-sm-24\\\" fxFlex>\\r\\n                    <input matInput [matDatepicker]=\\\"startDatePicker\\\" placeholder=\\\"Start Date\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #startDatePicker></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field fxFlex>\\r\\n                    <input matInput [matDatepicker]=\\\"dueDatePicker\\\" placeholder=\\\"Due Date\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"dueDatePicker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #dueDatePicker></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <mat-form-field class=\\\"\\\" fxFill>\\r\\n                <textarea matInput #notes\\r\\n                          name=\\\"notes\\\"\\r\\n                          formControlName=\\\"notes\\\"\\r\\n                          placeholder=\\\"Notes\\\"\\r\\n                          maxlength=\\\"500\\\">\\r\\n                </textarea>\\r\\n                <mat-hint align=\\\"end\\\">{{notes.value.length}} / 500</mat-hint>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <button *ngIf=\\\"formType === 'new'\\\"\\r\\n                    mat-raised-button class=\\\"mat-accent\\\"\\r\\n                    [disabled]=\\\"todoForm.invalid\\\">SAVE\\r\\n            </button>\\r\\n        </form>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  display: flex;\\n  flex: 1 0 auto;\\n  flex-direction: column;\\n  overflow-y: auto;\\n  -webkit-overflow-scrolling: touch; }\\n:host .todo-header {\\n    padding: 24px;\\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\\n    background: rgba(0, 0, 0, 0.06); }\\n:host .todo-header .actions {\\n      min-width: 88px; }\\n:host .todo-content {\\n    padding: 24px; }\\n:host .todo-content .title {\\n      font-size: 17px;\\n      font-weight: 500; }\\n:host .todo-content .tag {\\n      font-size: 11px;\\n      border-radius: 2px;\\n      margin: 8px 4px 0 0;\\n      padding: 3px 8px;\\n      background-color: rgba(0, 0, 0, 0.08); }\\n:host .todo-content .tag .tag-color {\\n        width: 8px;\\n        height: 8px;\\n        margin-right: 8px;\\n        border-radius: 50%; }\\n:host .todo-content .dates .mat-form-field {\\n      width: auto !important; }\\n\"","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\n\r\n@Component({\r\n    selector   : 'todo-details',\r\n    templateUrl: './todo-details.component.html',\r\n    styleUrls  : ['./todo-details.component.scss'],\r\n    animations : fuseAnimations\r\n})\r\nexport class TodoDetailsComponent implements OnInit, OnDestroy\r\n{\r\n    todo: Todo;\r\n    tags: any[];\r\n    formType: string;\r\n    todoForm: FormGroup;\r\n\r\n    @ViewChild('titleInput')\r\n    titleInputField;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TodoService} _todoService\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        private _todoService: TodoService,\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to update the current todo\r\n        this._todoService.onCurrentTodoChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(([todo, formType]) => {\r\n\r\n                if ( todo && formType === 'edit' )\r\n                {\r\n                    this.formType = 'edit';\r\n                    this.todo = todo;\r\n                    this.todoForm = this.createTodoForm();\r\n\r\n                    this.todoForm.valueChanges\r\n                        .pipe(\r\n                            takeUntil(this._unsubscribeAll),\r\n                            debounceTime(500),\r\n                            distinctUntilChanged()\r\n                        )\r\n                        .subscribe(data => {\r\n                            this._todoService.updateTodo(data);\r\n                        });\r\n                }\r\n            });\r\n\r\n        // Subscribe to update on tag change\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(labels => {\r\n                this.tags = labels;\r\n            });\r\n\r\n        // Subscribe to update on tag change\r\n        this._todoService.onNewTodoClicked\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(() => {\r\n                this.todo = new Todo({});\r\n                this.todo.id = FuseUtils.generateGUID();\r\n                this.formType = 'new';\r\n                this.todoForm = this.createTodoForm();\r\n                this.focusTitleField();\r\n                this._todoService.onCurrentTodoChanged.next([this.todo, 'new']);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Focus title field\r\n     */\r\n    focusTitleField(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.titleInputField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create todo form\r\n     *\r\n     * @returns {FormGroup}\r\n     */\r\n    createTodoForm(): FormGroup\r\n    {\r\n        return this._formBuilder.group({\r\n            'id'       : [this.todo.id],\r\n            'title'    : [this.todo.title],\r\n            'notes'    : [this.todo.notes],\r\n            'startDate': [this.todo.startDate],\r\n            'dueDate'  : [this.todo.dueDate],\r\n            'completed': [this.todo.completed],\r\n            'starred'  : [this.todo.starred],\r\n            'important': [this.todo.important],\r\n            'deleted'  : [this.todo.deleted],\r\n            'tags'     : [this.todo.tags]\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     *\r\n     * @param event\r\n     */\r\n    toggleStar(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleStar();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle important\r\n     *\r\n     * @param event\r\n     */\r\n    toggleImportant(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleImportant();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Completed\r\n     *\r\n     * @param event\r\n     */\r\n    toggleCompleted(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleCompleted();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Deleted\r\n     *\r\n     * @param event\r\n     */\r\n    toggleDeleted(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleDeleted();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on todo\r\n     *\r\n     * @param tagId\r\n     */\r\n    toggleTagOnTodo(tagId): void\r\n    {\r\n        this._todoService.toggleTagOnTodo(tagId, this.todo);\r\n    }\r\n\r\n    /**\r\n     * Has tag?\r\n     *\r\n     * @param tagId\r\n     * @returns {any}\r\n     */\r\n    hasTag(tagId): any\r\n    {\r\n        return this._todoService.hasTag(tagId, this.todo);\r\n    }\r\n\r\n    /**\r\n     * Add todo\r\n     */\r\n    addTodo(): void\r\n    {\r\n        this._todoService.updateTodo(this.todoForm.getRawValue());\r\n    }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n    <mat-icon class=\\\"handle mr-16\\\" ngxDragHandle fxFlex=\\\"0 1 auto\\\" fxHide.xs>\\r\\n        drag_handle\\r\\n    </mat-icon>\\r\\n\\r\\n    <mat-checkbox [(ngModel)]=\\\"selected\\\" (ngModelChange)=\\\"onSelectedChange()\\\"\\r\\n                  class=\\\"mr-16\\\" fxFlex=\\\"0 1 auto\\\" (click)=\\\"$event.stopPropagation()\\\">\\r\\n    </mat-checkbox>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxFlex>\\r\\n\\r\\n        <div class=\\\"info\\\" fxFlex fxFlexLayout=\\\"column\\\">\\r\\n\\r\\n            <div class=\\\"title\\\">\\r\\n                {{todo.title}}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"notes\\\">\\r\\n                {{todo.notes}}\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"tags\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n                <div class=\\\"tag\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" *ngFor=\\\"let tagId of todo.tags\\\">\\r\\n                    <div class=\\\"tag-color\\\" [ngStyle]=\\\"{'background-color': tags | getById:tagId:'color'}\\\"></div>\\r\\n                    <div class=\\\"tag-label\\\">{{tags | getById:tagId:'title'}}</div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n            <button mat-icon-button (click)=\\\"toggleImportant($event)\\\"\\r\\n                    aria-label=\\\"Toggle important\\\" fxHide.xs>\\r\\n                <mat-icon class=\\\"red-fg\\\" *ngIf=\\\"todo.important\\\">error</mat-icon>\\r\\n                <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"!todo.important\\\">error_outline</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button (click)=\\\"toggleStar($event)\\\"\\r\\n                    aria-label=\\\"Toggle star\\\" fxHide.xs>\\r\\n                <mat-icon class=\\\"amber-fg\\\" *ngIf=\\\"todo.starred\\\">star</mat-icon>\\r\\n                <mat-icon class=\\\"secondary-text\\\" *ngIf=\\\"!todo.starred\\\">star_outline</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"moreMenu\\\" aria-label=\\\"More\\\" (click)=\\\"$event.stopPropagation()\\\"\\r\\n                    fxHide.xs>\\r\\n                <mat-icon class=\\\"secondary-text\\\">more_vert</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <mat-menu #moreMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item aria-label=\\\"toggle done\\\" (click)=\\\"toggleCompleted($event)\\\">\\r\\n                    <ng-container *ngIf=\\\"todo.completed\\\">\\r\\n                        <mat-icon>check_box</mat-icon>\\r\\n                        <span>Mark as undone</span>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"!todo.completed\\\">\\r\\n                        <mat-icon>check_box_outline_blank</mat-icon>\\r\\n                        <span>Mark as done</span>\\r\\n                    </ng-container>\\r\\n                </button>\\r\\n\\r\\n                <button mat-menu-item aria-label=\\\"toggle important\\\" (click)=\\\"toggleImportant($event)\\\">\\r\\n                    <ng-container *ngIf=\\\"todo.important\\\">\\r\\n                        <mat-icon>error</mat-icon>\\r\\n                        <span>Remove important</span>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"!todo.important\\\">\\r\\n                        <mat-icon>error_outline</mat-icon>\\r\\n                        <span>Mark as important</span>\\r\\n                    </ng-container>\\r\\n                </button>\\r\\n\\r\\n                <button mat-menu-item aria-label=\\\"toggle star\\\" (click)=\\\"toggleStar($event)\\\">\\r\\n                    <ng-container *ngIf=\\\"todo.starred\\\">\\r\\n                        <mat-icon>star</mat-icon>\\r\\n                        <span>Remove star</span>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"!todo.starred\\\">\\r\\n                        <mat-icon>star_outline</mat-icon>\\r\\n                        <span>Add star</span>\\r\\n                    </ng-container>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.todo-list-item {\\n  display: block;\\n  position: relative;\\n  padding: 16px 16px 16px 24px;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\\n  text-transform: none;\\n  cursor: pointer;\\n  flex-shrink: 0;\\n  background: #FFFFFF; }\\n.todo-list-item .handle {\\n    height: 48px;\\n    line-height: 48px;\\n    cursor: move;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none; }\\n.todo-list-item.move-disabled .handle {\\n    display: none; }\\n.todo-list-item .tags .tag {\\n    font-size: 11px;\\n    border-radius: 2px;\\n    margin: 8px 4px 0 0;\\n    padding: 3px 8px;\\n    background-color: rgba(0, 0, 0, 0.08); }\\n.todo-list-item .tags .tag .tag-color {\\n      width: 8px;\\n      height: 8px;\\n      margin-right: 8px;\\n      border-radius: 50%; }\\n.todo-list-item.completed {\\n    background: #EEEEEE; }\\n.todo-list-item.completed .title,\\n    .todo-list-item.completed .notes {\\n      color: rgba(0, 0, 0, 0.54);\\n      text-decoration: line-through; }\\n.todo-list-item.selected {\\n    background: #FFF8E1; }\\n.todo-list-item .info {\\n    margin: 0 16px 0 8px; }\\n.todo-list-item .info .title {\\n      font-size: 15px;\\n      font-weight: 500; }\\n.todo-list-item .info .notes {\\n      margin-top: 4px; }\\n.todo-list-item .buttons .is-starred {\\n    margin: 0 0 0 16px; }\\n.todo-list-item .buttons .is-important {\\n    margin: 0; }\\n.todo-list-item:not(.has-handle):not(.move-disabled),\\n  .todo-list-item.has-handle [ngxdraghandle],\\n  .todo-list-item.has-handle [ngxDragHandle] {\\n    cursor: move; }\\n.todo-list-item .ngx-dnd-content {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none; }\\n.todo-list-item.gu-mirror {\\n    position: fixed !important;\\n    margin: 0 !important;\\n    z-index: 9999 !important;\\n    opacity: 0.8;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\\\";\\n    filter: alpha(opacity=80);\\n    box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n.todo-list-item.gu-hide {\\n    display: none !important; }\\n.todo-list-item.gu-unselectable {\\n    -webkit-user-select: none !important;\\n    -moz-user-select: none !important;\\n    -ms-user-select: none !important;\\n    user-select: none !important; }\\n.todo-list-item.gu-transit {\\n    opacity: 0.2;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)\\\";\\n    filter: alpha(opacity=20); }\\n\"","import { Component, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector     : 'todo-list-item',\r\n    templateUrl  : './todo-list-item.component.html',\r\n    styleUrls    : ['./todo-list-item.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TodoListItemComponent implements OnInit, OnDestroy\r\n{\r\n    tags: any[];\r\n\r\n    @Input()\r\n    todo: Todo;\r\n\r\n    @HostBinding('class.selected')\r\n    selected: boolean;\r\n\r\n    @HostBinding('class.completed')\r\n    completed: boolean;\r\n\r\n    @HostBinding('class.move-disabled')\r\n    moveDisabled: boolean;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TodoService} _todoService\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     */\r\n    constructor(\r\n        private _todoService: TodoService,\r\n        private _activatedRoute: ActivatedRoute\r\n    )\r\n    {\r\n        // Disable move if path is not /all\r\n        if ( _activatedRoute.snapshot.url[0].path !== 'all' )\r\n        {\r\n            this.moveDisabled = true;\r\n        }\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Set the initial values\r\n        this.todo = new Todo(this.todo);\r\n        this.completed = this.todo.completed;\r\n\r\n        // Subscribe to update on selected todo change\r\n        this._todoService.onSelectedTodosChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedTodos => {\r\n                this.selected = false;\r\n\r\n                if ( selectedTodos.length > 0 )\r\n                {\r\n                    for ( const todo of selectedTodos )\r\n                    {\r\n                        if ( todo.id === this.todo.id )\r\n                        {\r\n                            this.selected = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        // Subscribe to update on tag change\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(tags => {\r\n                this.tags = tags;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On selected change\r\n     */\r\n    onSelectedChange(): void\r\n    {\r\n        this._todoService.toggleSelectedTodo(this.todo.id);\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     */\r\n    toggleStar(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.todo.toggleStar();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Important\r\n     */\r\n    toggleImportant(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.todo.toggleImportant();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Completed\r\n     */\r\n    toggleCompleted(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.todo.toggleCompleted();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"todos.length === 0\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlexFill>\\r\\n    <span class=\\\"no-todos-text hint-text\\\">There are no todos!</span>\\r\\n</div>\\r\\n<div class=\\\"todo-list\\\" ngxDroppable [model]=\\\"todos\\\" (out)=\\\"onDrop($event)\\\" [@animateStagger]=\\\"{value:'50'}\\\">\\r\\n    <todo-list-item class=\\\"todo-list-item has-handle\\\"\\r\\n                    *ngFor=\\\"let todo of todos\\\" [todo]=\\\"todo\\\"\\r\\n                    ngxDraggable\\r\\n                    [model]=\\\"todo\\\"\\r\\n                    (click)=\\\"readTodo(todo.id)\\\"\\r\\n                    [ngClass]=\\\"{'current-todo mat-accent-50-bg':todo?.id == currentTodo?.id}\\\"\\r\\n                    matRipple\\r\\n                    [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\r\\n    </todo-list-item>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  display: flex;\\n  flex: 1 0 auto;\\n  flex-direction: column;\\n  position: relative;\\n  padding: 0;\\n  border-right: 1px solid rgba(0, 0, 0, 0.12);\\n  overflow-y: auto;\\n  -webkit-overflow-scrolling: touch; }\\n  :host .no-todos-text {\\n    font-size: 24px;\\n    font-weight: 300; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector   : 'todo-list',\r\n    templateUrl: './todo-list.component.html',\r\n    styleUrls  : ['./todo-list.component.scss'],\r\n    animations : fuseAnimations\r\n})\r\nexport class TodoListComponent implements OnInit, OnDestroy\r\n{\r\n    todos: Todo[];\r\n    currentTodo: Todo;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     * @param {TodoService} _todoService\r\n     * @param {Location} _location\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _todoService: TodoService,\r\n        private _location: Location\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to update todos on changes\r\n        this._todoService.onTodosChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(todos => {\r\n                this.todos = todos;\r\n            });\r\n\r\n        // Subscribe to update current todo on changes\r\n        this._todoService.onCurrentTodoChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(currentTodo => {\r\n                if ( !currentTodo )\r\n                {\r\n                    // Set the current todo id to null to deselect the current todo\r\n                    this.currentTodo = null;\r\n\r\n                    // Handle the location changes\r\n                    const tagHandle    = this._activatedRoute.snapshot.params.tagHandle,\r\n                          filterHandle = this._activatedRoute.snapshot.params.filterHandle;\r\n\r\n                    if ( tagHandle )\r\n                    {\r\n                        this._location.go('apps/todo/tag/' + tagHandle);\r\n                    }\r\n                    else if ( filterHandle )\r\n                    {\r\n                        this._location.go('apps/todo/filter/' + filterHandle);\r\n                    }\r\n                    else\r\n                    {\r\n                        this._location.go('apps/todo/all');\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.currentTodo = currentTodo;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Read todo\r\n     *\r\n     * @param todoId\r\n     */\r\n    readTodo(todoId): void\r\n    {\r\n        // Set current todo\r\n        this._todoService.setCurrentTodo(todoId);\r\n    }\r\n\r\n    /**\r\n     * On drop\r\n     *\r\n     * @param ev\r\n     */\r\n    onDrop(ev): void\r\n    {\r\n\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"todo\\\" class=\\\"page-layout carded left-sidebar inner-scroll\\\">\\r\\n\\r\\n    <!-- TOP BACKGROUND -->\\r\\n    <div class=\\\"top-bg mat-accent-bg\\\"></div>\\r\\n    <!-- / TOP BACKGROUND -->\\r\\n\\r\\n    <!-- SIDEBAR -->\\r\\n    <fuse-sidebar class=\\\"sidebar\\\" name=\\\"todo-main-sidebar\\\" position=\\\"left\\\" lockedOpen=\\\"gt-md\\\">\\r\\n        <todo-main-sidebar></todo-main-sidebar>\\r\\n    </fuse-sidebar>\\r\\n    <!-- / SIDEBAR -->\\r\\n\\r\\n    <!-- CENTER -->\\r\\n    <div class=\\\"center\\\">\\r\\n\\r\\n        <!-- CONTENT HEADER -->\\r\\n        <div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n            <div class=\\\"search-wrapper mat-white-bg\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n                <button mat-icon-button class=\\\"sidebar-toggle\\\" fxHide.gt-md\\r\\n                        (click)=\\\"toggleSidebar('todo-main-sidebar')\\\">\\r\\n                    <mat-icon>menu</mat-icon>\\r\\n                </button>\\r\\n\\r\\n                <div class=\\\"search\\\" flex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                    <input [formControl]=\\\"searchInput\\\" placeholder=\\\"Search for a task\\\" fxFlex>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <!-- / CONTENT HEADER -->\\r\\n\\r\\n        <!-- CONTENT CARD -->\\r\\n        <div class=\\\"content-card mat-white-bg\\\" [ngClass]=\\\"{'current-todo-selected':currentTodo}\\\">\\r\\n\\r\\n            <!-- CONTENT TOOLBAR -->\\r\\n            <div class=\\\"toolbar px-24 py-8\\\">\\r\\n\\r\\n                <div class=\\\"todo-selection\\\" fxFlex=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                    <mat-checkbox (click)=\\\"toggleSelectAll()\\\" [checked]=\\\"hasSelectedTodos\\\"\\r\\n                                  [indeterminate]=\\\"isIndeterminate\\\"></mat-checkbox>\\r\\n\\r\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"selectMenu\\\">\\r\\n                        <mat-icon>arrow_drop_down</mat-icon>\\r\\n                    </button>\\r\\n                    <mat-menu #selectMenu=\\\"matMenu\\\">\\r\\n                        <button mat-menu-item (click)=\\\"selectTodos()\\\">All</button>\\r\\n                        <button mat-menu-item (click)=\\\"deselectTodos()\\\">None</button>\\r\\n                        <button mat-menu-item (click)=\\\"selectTodos('read', true)\\\">Read</button>\\r\\n                        <button mat-menu-item (click)=\\\"selectTodos('read', false)\\\">Unread</button>\\r\\n                        <button mat-menu-item (click)=\\\"selectTodos('starred', true)\\\">Starred</button>\\r\\n                        <button mat-menu-item (click)=\\\"selectTodos('starred', false)\\\">Unstarred</button>\\r\\n                        <button mat-menu-item (click)=\\\"selectTodos('important', true)\\\">Important</button>\\r\\n                        <button mat-menu-item (click)=\\\"selectTodos('important', false)\\\">Unimportant</button>\\r\\n                    </mat-menu>\\r\\n\\r\\n                    <div class=\\\"toolbar-separator\\\" *ngIf=\\\"hasSelectedTodos\\\"></div>\\r\\n\\r\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"labelMenu\\\" *ngIf=\\\"hasSelectedTodos\\\">\\r\\n                        <mat-icon class=\\\"secondary-text\\\">label</mat-icon>\\r\\n                    </button>\\r\\n                    <mat-menu #labelMenu=\\\"matMenu\\\">\\r\\n                        <button mat-menu-item *ngFor=\\\"let tag of tags\\\" (click)=\\\"toggleTagOnSelectedTodos(tag.id)\\\">\\r\\n                            {{tag.title}}\\r\\n                        </button>\\r\\n                    </mat-menu>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"currentTodo\\\" fxHide.gt-lg>\\r\\n                    <button mat-icon-button (click)=\\\"deselectCurrentTodo()\\\">\\r\\n                        <mat-icon class=\\\"secondary-text\\\">arrow_back</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <!-- / CONTENT TOOLBAR -->\\r\\n\\r\\n            <!-- CONTENT -->\\r\\n            <div class=\\\"content\\\" fxFlexAlign=\\\"row\\\">\\r\\n                <todo-list fusePerfectScrollbar fxFlex></todo-list>\\r\\n                <todo-details fusePerfectScrollbar fxFlex></todo-details>\\r\\n            </div>\\r\\n            <!-- / CONTENT -->\\r\\n\\r\\n        </div>\\r\\n        <!-- / CONTENT CARD -->\\r\\n\\r\\n    </div>\\r\\n    <!-- / CENTER -->\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  width: 100%; }\\n:host .center .header .search-wrapper {\\n    box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n:host .center .header .search-wrapper .sidebar-toggle {\\n      margin: 0;\\n      width: 56px;\\n      height: 56px;\\n      border-radius: 0;\\n      border-right: 1px solid rgba(0, 0, 0, 0.12); }\\n:host .center .header .search-wrapper .search {\\n      width: 100%;\\n      height: 56px;\\n      line-height: 56px;\\n      padding: 18px; }\\n:host .center .header .search-wrapper .search input {\\n        height: 56px;\\n        padding-left: 16px;\\n        color: rgba(0, 0, 0, 0.54);\\n        border: none;\\n        outline: none; }\\n@media (max-width: 1919px) {\\n    :host .center .content-card todo-list {\\n      border-right: 0; }\\n    :host .center .content-card todo-list,\\n    :host .center .content-card todo-details {\\n      flex: 1 0 100%; }\\n    :host .center .content-card todo-details {\\n      display: none !important; }\\n    :host .center .content-card.current-todo-selected .toolbar {\\n      padding-left: 16px !important; }\\n      :host .center .content-card.current-todo-selected .toolbar .todo-selection {\\n        display: none !important; }\\n    :host .center .content-card.current-todo-selected .content todo-list {\\n      display: none !important; }\\n    :host .center .content-card.current-todo-selected .content todo-details {\\n      display: flex !important; } }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\n\r\n@Component({\r\n    selector   : 'todo',\r\n    templateUrl: './todo.component.html',\r\n    styleUrls  : ['./todo.component.scss'],\r\n    animations : fuseAnimations\r\n})\r\nexport class TodoComponent implements OnInit, OnDestroy\r\n{\r\n    hasSelectedTodos: boolean;\r\n    isIndeterminate: boolean;\r\n    filters: any[];\r\n    tags: any[];\r\n    searchInput: FormControl;\r\n    currentTodo: Todo;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FuseSidebarService} _fuseSidebarService\r\n     * @param {TodoService} _todoService\r\n     */\r\n    constructor(\r\n        private _fuseSidebarService: FuseSidebarService,\r\n        private _todoService: TodoService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.searchInput = new FormControl('');\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._todoService.onSelectedTodosChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedTodos => {\r\n\r\n                setTimeout(() => {\r\n                    this.hasSelectedTodos = selectedTodos.length > 0;\r\n                    this.isIndeterminate = (selectedTodos.length !== this._todoService.todos.length && selectedTodos.length > 0);\r\n                }, 0);\r\n            });\r\n\r\n        this._todoService.onFiltersChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(folders => {\r\n                this.filters = this._todoService.filters;\r\n            });\r\n\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(tags => {\r\n                this.tags = this._todoService.tags;\r\n            });\r\n\r\n        this.searchInput.valueChanges\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(300),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(searchText => {\r\n                this._todoService.onSearchTextChanged.next(searchText);\r\n            });\r\n\r\n        this._todoService.onCurrentTodoChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(([currentTodo, formType]) => {\r\n                if ( !currentTodo )\r\n                {\r\n                    this.currentTodo = null;\r\n                }\r\n                else\r\n                {\r\n                    this.currentTodo = currentTodo;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Deselect current todo\r\n     */\r\n    deselectCurrentTodo(): void\r\n    {\r\n        this._todoService.onCurrentTodoChanged.next([null, null]);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        this._todoService.toggleSelectAll();\r\n    }\r\n\r\n    /**\r\n     * Select todos\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectTodos(filterParameter?, filterValue?): void\r\n    {\r\n        this._todoService.selectTodos(filterParameter, filterValue);\r\n    }\r\n\r\n    /**\r\n     * Deselect todos\r\n     */\r\n    deselectTodos(): void\r\n    {\r\n        this._todoService.deselectTodos();\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on selected todos\r\n     *\r\n     * @param tagId\r\n     */\r\n    toggleTagOnSelectedTodos(tagId): void\r\n    {\r\n        this._todoService.toggleTagOnSelectedTodos(tagId);\r\n    }\r\n\r\n    /**\r\n     * Toggle the sidebar\r\n     *\r\n     * @param name\r\n     */\r\n    toggleSidebar(name): void\r\n    {\r\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\r\n    }\r\n}\r\n","export class Todo\r\n{\r\n    id: string;\r\n    title: string;\r\n    notes: string;\r\n    startDate: string;\r\n    dueDate: boolean;\r\n    completed: boolean;\r\n    starred: boolean;\r\n    important: boolean;\r\n    deleted: boolean;\r\n    tags: [\r\n        {\r\n            'id': number,\r\n            'name': string,\r\n            'label': string,\r\n            'color': string\r\n        }\r\n        ];\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param todo\r\n     */\r\n    constructor(todo)\r\n    {\r\n        {\r\n            this.id = todo.id;\r\n            this.title = todo.title;\r\n            this.notes = todo.notes;\r\n            this.startDate = todo.startDate;\r\n            this.dueDate = todo.dueDate;\r\n            this.completed = todo.completed;\r\n            this.starred = todo.starred;\r\n            this.important = todo.important;\r\n            this.deleted = todo.deleted;\r\n            this.tags = todo.tags || [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     */\r\n    toggleStar(): void\r\n    {\r\n        this.starred = !this.starred;\r\n    }\r\n\r\n    /**\r\n     * Toggle important\r\n     */\r\n    toggleImportant(): void\r\n    {\r\n        this.important = !this.important;\r\n    }\r\n\r\n    /**\r\n     * Toggle completed\r\n     */\r\n    toggleCompleted(): void\r\n    {\r\n        this.completed = !this.completed;\r\n    }\r\n\r\n    /**\r\n     * Toggle deleted\r\n     */\r\n    toggleDeleted(): void\r\n    {\r\n        this.deleted = !this.deleted;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule, MatCheckboxModule, MatDatepickerModule, MatFormFieldModule, MatIconModule, MatInputModule, MatMenuModule, MatRippleModule, MatSelectModule } from '@angular/material';\r\nimport { NgxDnDModule } from '@swimlane/ngx-dnd';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseSidebarModule } from '@fuse/components';\r\n\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\nimport { TodoComponent } from 'app/main/apps/todo/todo.component';\r\nimport { TodoMainSidebarComponent } from 'app/main/apps/todo/sidebars/main/main-sidebar.component';\r\nimport { TodoListItemComponent } from 'app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component';\r\nimport { TodoListComponent } from 'app/main/apps/todo/todo-list/todo-list.component';\r\nimport { TodoDetailsComponent } from 'app/main/apps/todo/todo-details/todo-details.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : 'all',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'all/:todoId',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'tag/:tagHandle',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'tag/:tagHandle/:todoId',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'filter/:filterHandle',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'filter/:filterHandle/:todoId',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path      : '**',\r\n        redirectTo: 'all'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TodoComponent,\r\n        TodoMainSidebarComponent,\r\n        TodoListItemComponent,\r\n        TodoListComponent,\r\n        TodoDetailsComponent\r\n    ],\r\n    imports     : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n\r\n        NgxDnDModule,\r\n\r\n        FuseSharedModule,\r\n        FuseSidebarModule\r\n    ],\r\n    providers   : [\r\n        TodoService\r\n    ]\r\n})\r\nexport class TodoModule\r\n{\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\n\r\n@Injectable()\r\nexport class TodoService implements Resolve<any>\r\n{\r\n    todos: Todo[];\r\n    selectedTodos: Todo[];\r\n    currentTodo: Todo;\r\n    searchText: string;\r\n    filters: any[];\r\n    tags: any[];\r\n    routeParams: any;\r\n\r\n    onTodosChanged: BehaviorSubject<any>;\r\n    onSelectedTodosChanged: BehaviorSubject<any>;\r\n    onCurrentTodoChanged: BehaviorSubject<any>;\r\n    onFiltersChanged: BehaviorSubject<any>;\r\n    onTagsChanged: BehaviorSubject<any>;\r\n    onSearchTextChanged: BehaviorSubject<any>;\r\n    onNewTodoClicked: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     * @param {Location} _location\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient,\r\n        private _location: Location\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.selectedTodos = [];\r\n        this.searchText = '';\r\n        this.onTodosChanged = new BehaviorSubject([]);\r\n        this.onSelectedTodosChanged = new BehaviorSubject([]);\r\n        this.onCurrentTodoChanged = new BehaviorSubject([]);\r\n        this.onFiltersChanged = new BehaviorSubject([]);\r\n        this.onTagsChanged = new BehaviorSubject([]);\r\n        this.onSearchTextChanged = new BehaviorSubject('');\r\n        this.onNewTodoClicked = new Subject();\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        this.routeParams = route.params;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getFilters(),\r\n                this.getTags(),\r\n                this.getTodos()\r\n            ]).then(\r\n                () => {\r\n                    if ( this.routeParams.todoId )\r\n                    {\r\n                        this.setCurrentTodo(this.routeParams.todoId);\r\n                    }\r\n                    else\r\n                    {\r\n                        this.setCurrentTodo(null);\r\n                    }\r\n\r\n                    this.onSearchTextChanged.subscribe(searchText => {\r\n                        if ( searchText !== '' )\r\n                        {\r\n                            this.searchText = searchText;\r\n                            this.getTodos();\r\n                        }\r\n                        else\r\n                        {\r\n                            this.searchText = searchText;\r\n                            this.getTodos();\r\n                        }\r\n                    });\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all filters\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getFilters(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/todo-filters')\r\n                .subscribe((response: any) => {\r\n                    this.filters = response;\r\n                    this.onFiltersChanged.next(this.filters);\r\n                    resolve(this.filters);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all tags\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getTags(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/todo-tags')\r\n                .subscribe((response: any) => {\r\n                    this.tags = response;\r\n                    this.onTagsChanged.next(this.tags);\r\n                    resolve(this.tags);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get todos\r\n     *\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodos(): Promise<Todo[]>\r\n    {\r\n        if ( this.routeParams.tagHandle )\r\n        {\r\n            return this.getTodosByTag(this.routeParams.tagHandle);\r\n        }\r\n\r\n        if ( this.routeParams.filterHandle )\r\n        {\r\n            return this.getTodosByFilter(this.routeParams.filterHandle);\r\n        }\r\n\r\n        return this.getTodosByParams(this.routeParams);\r\n    }\r\n\r\n    /**\r\n     * Get todos by params\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodosByParams(handle): Promise<Todo[]>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.get('api/todo-todos')\r\n                .subscribe((todos: any) => {\r\n                    this.todos = todos.map(todo => {\r\n                        return new Todo(todo);\r\n                    });\r\n\r\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\r\n\r\n                    this.onTodosChanged.next(this.todos);\r\n\r\n                    resolve(this.todos);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get todos by filter\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodosByFilter(handle): Promise<Todo[]>\r\n    {\r\n\r\n        let param = handle + '=true';\r\n\r\n        if ( handle === 'dueDate' )\r\n        {\r\n            param = handle + '=^$|\\\\s+';\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.get('api/todo-todos?' + param)\r\n                .subscribe((todos: any) => {\r\n\r\n                    this.todos = todos.map(todo => {\r\n                        return new Todo(todo);\r\n                    });\r\n\r\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\r\n\r\n                    this.onTodosChanged.next(this.todos);\r\n\r\n                    resolve(this.todos);\r\n\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get todos by tag\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodosByTag(handle): Promise<Todo[]>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/todo-tags?handle=' + handle)\r\n                .subscribe((tags: any) => {\r\n\r\n                    const tagId = tags[0].id;\r\n\r\n                    this._httpClient.get('api/todo-todos?tags=' + tagId)\r\n                        .subscribe((todos: any) => {\r\n\r\n                            this.todos = todos.map(todo => {\r\n                                return new Todo(todo);\r\n                            });\r\n\r\n                            this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\r\n\r\n                            this.onTodosChanged.next(this.todos);\r\n\r\n                            resolve(this.todos);\r\n\r\n                        }, reject);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle selected todo by id\r\n     *\r\n     * @param id\r\n     */\r\n    toggleSelectedTodo(id): void\r\n    {\r\n        // First, check if we already have that todo as selected...\r\n        if ( this.selectedTodos.length > 0 )\r\n        {\r\n            for ( const todo of this.selectedTodos )\r\n            {\r\n                // ...delete the selected todo\r\n                if ( todo.id === id )\r\n                {\r\n                    const index = this.selectedTodos.indexOf(todo);\r\n\r\n                    if ( index !== -1 )\r\n                    {\r\n                        this.selectedTodos.splice(index, 1);\r\n\r\n                        // Trigger the next event\r\n                        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n\r\n                        // Return\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If we don't have it, push as selected\r\n        this.selectedTodos.push(\r\n            this.todos.find(todo => {\r\n                return todo.id === id;\r\n            })\r\n        );\r\n\r\n        // Trigger the next event\r\n        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        if ( this.selectedTodos.length > 0 )\r\n        {\r\n            this.deselectTodos();\r\n        }\r\n        else\r\n        {\r\n            this.selectTodos();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Select todos\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectTodos(filterParameter?, filterValue?): void\r\n    {\r\n        this.selectedTodos = [];\r\n\r\n        // If there is no filter, select all todos\r\n        if ( filterParameter === undefined || filterValue === undefined )\r\n        {\r\n            this.selectedTodos = this.todos;\r\n        }\r\n        else\r\n        {\r\n            this.selectedTodos.push(...\r\n                this.todos.filter(todo => {\r\n                    return todo[filterParameter] === filterValue;\r\n                })\r\n            );\r\n        }\r\n\r\n        // Trigger the next event\r\n        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n    }\r\n\r\n    /**\r\n     * Deselect todos\r\n     */\r\n    deselectTodos(): void\r\n    {\r\n        this.selectedTodos = [];\r\n\r\n        // Trigger the next event\r\n        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n    }\r\n\r\n    /**\r\n     * Set current todo by id\r\n     *\r\n     * @param id\r\n     */\r\n    setCurrentTodo(id): void\r\n    {\r\n        this.currentTodo = this.todos.find(todo => {\r\n            return todo.id === id;\r\n        });\r\n\r\n        this.onCurrentTodoChanged.next([this.currentTodo, 'edit']);\r\n\r\n        const tagHandle    = this.routeParams.tagHandle,\r\n              filterHandle = this.routeParams.filterHandle;\r\n\r\n        if ( tagHandle )\r\n        {\r\n            this._location.go('apps/todo/tag/' + tagHandle + '/' + id);\r\n        }\r\n        else if ( filterHandle )\r\n        {\r\n            this._location.go('apps/todo/filter/' + filterHandle + '/' + id);\r\n        }\r\n        else\r\n        {\r\n            this._location.go('apps/todo/all/' + id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on selected todos\r\n     *\r\n     * @param tagId\r\n     */\r\n    toggleTagOnSelectedTodos(tagId): void\r\n    {\r\n        this.selectedTodos.map(todo => {\r\n            this.toggleTagOnTodo(tagId, todo);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on todo\r\n     *\r\n     * @param tagId\r\n     * @param todo\r\n     */\r\n    toggleTagOnTodo(tagId, todo): void\r\n    {\r\n        const index = todo.tags.indexOf(tagId);\r\n\r\n        if ( index !== -1 )\r\n        {\r\n            todo.tags.splice(index, 1);\r\n        }\r\n        else\r\n        {\r\n            todo.tags.push(tagId);\r\n        }\r\n\r\n        this.updateTodo(todo);\r\n    }\r\n\r\n    /**\r\n     * Has tag?\r\n     *\r\n     * @param tagId\r\n     * @param todo\r\n     * @returns {boolean}\r\n     */\r\n    hasTag(tagId, todo): any\r\n    {\r\n        if ( !todo.tags )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        return todo.tags.indexOf(tagId) !== -1;\r\n    }\r\n\r\n    /**\r\n     * Update the todo\r\n     *\r\n     * @param todo\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateTodo(todo): any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.post('api/todo-todos/' + todo.id, {...todo})\r\n                .subscribe(response => {\r\n\r\n                    this.getTodos().then(todos => {\r\n\r\n                        resolve(todos);\r\n\r\n                    }, reject);\r\n                });\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":""}